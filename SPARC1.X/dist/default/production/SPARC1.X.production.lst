

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 17:48:01 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001084                     __pidataCOMRAM:
    82                           	opt callstack 0
    83                           
    84                           ;initializer for _msleft
    85  001084  47                 	db	71
    86  001085  6F                 	db	111
    87  001086  69                 	db	105
    88  001087  6E                 	db	110
    89  001088  67                 	db	103
    90  001089  20                 	db	32
    91  00108A  4C                 	db	76
    92  00108B  65                 	db	101
    93  00108C  66                 	db	102
    94  00108D  74                 	db	116
    95  00108E  20                 	db	32
    96  00108F  00                 	db	0
    97                           
    98                           ;initializer for _msup
    99  001090  47                 	db	71
   100  001091  6F                 	db	111
   101  001092  69                 	db	105
   102  001093  6E                 	db	110
   103  001094  67                 	db	103
   104  001095  20                 	db	32
   105  001096  55                 	db	85
   106  001097  70                 	db	112
   107  001098  0A                 	db	10
   108  001099  20                 	db	32
   109  00109A  00                 	db	0
   110                           
   111                           	psect	idataBANK0
   112  000AA2                     __pidataBANK0:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for _emergency
   116  000AA2  45                 	db	69
   117  000AA3  6D                 	db	109
   118  000AA4  65                 	db	101
   119  000AA5  72                 	db	114
   120  000AA6  67                 	db	103
   121  000AA7  65                 	db	101
   122  000AA8  6E                 	db	110
   123  000AA9  63                 	db	99
   124  000AAA  79                 	db	121
   125  000AAB  20                 	db	32
   126  000AAC  42                 	db	66
   127  000AAD  75                 	db	117
   128  000AAE  74                 	db	116
   129  000AAF  74                 	db	116
   130  000AB0  6F                 	db	111
   131  000AB1  6E                 	db	110
   132  000AB2  20                 	db	32
   133  000AB3  50                 	db	80
   134  000AB4  72                 	db	114
   135  000AB5  65                 	db	101
   136  000AB6  73                 	db	115
   137  000AB7  73                 	db	115
   138  000AB8  65                 	db	101
   139  000AB9  64                 	db	100
   140  000ABA  0A                 	db	10
   141  000ABB  00                 	db	0
   142                           
   143                           ;initializer for _check
   144  000ABC  53                 	db	83
   145  000ABD  54                 	db	84
   146  000ABE  49                 	db	73
   147  000ABF  4C                 	db	76
   148  000AC0  4C                 	db	76
   149  000AC1  20                 	db	32
   150  000AC2  49                 	db	73
   151  000AC3  4E                 	db	78
   152  000AC4  20                 	db	32
   153  000AC5  49                 	db	73
   154  000AC6  4E                 	db	78
   155  000AC7  54                 	db	84
   156  000AC8  45                 	db	69
   157  000AC9  52                 	db	82
   158  000ACA  52                 	db	82
   159  000ACB  55                 	db	85
   160  000ACC  50                 	db	80
   161  000ACD  54                 	db	84
   162  000ACE  49                 	db	73
   163  000ACF  4F                 	db	79
   164  000AD0  4E                 	db	78
   165  000AD1  0A                 	db	10
   166  000AD2  00                 	db	0
   167                           
   168                           ;initializer for _msgcomp
   169  000AD3  53                 	db	83
   170  000AD4  75                 	db	117
   171  000AD5  63                 	db	99
   172  000AD6  63                 	db	99
   173  000AD7  65                 	db	101
   174  000AD8  73                 	db	115
   175  000AD9  73                 	db	115
   176  000ADA  66                 	db	102
   177  000ADB  75                 	db	117
   178  000ADC  6C                 	db	108
   179  000ADD  6C                 	db	108
   180  000ADE  79                 	db	121
   181  000ADF  20                 	db	32
   182  000AE0  45                 	db	69
   183  000AE1  78                 	db	120
   184  000AE2  65                 	db	101
   185  000AE3  63                 	db	99
   186  000AE4  75                 	db	117
   187  000AE5  74                 	db	116
   188  000AE6  65                 	db	101
   189  000AE7  64                 	db	100
   190  000AE8  0A                 	db	10
   191  000AE9  00                 	db	0
   192                           
   193                           ;initializer for _msgeje
   194  000AEA  43                 	db	67
   195  000AEB  6F                 	db	111
   196  000AEC  6D                 	db	109
   197  000AED  6D                 	db	109
   198  000AEE  61                 	db	97
   199  000AEF  6E                 	db	110
   200  000AF0  64                 	db	100
   201  000AF1  20                 	db	32
   202  000AF2  69                 	db	105
   203  000AF3  6E                 	db	110
   204  000AF4  20                 	db	32
   205  000AF5  45                 	db	69
   206  000AF6  78                 	db	120
   207  000AF7  65                 	db	101
   208  000AF8  63                 	db	99
   209  000AF9  75                 	db	117
   210  000AFA  74                 	db	116
   211  000AFB  69                 	db	105
   212  000AFC  6F                 	db	111
   213  000AFD  6E                 	db	110
   214  000AFE  0A                 	db	10
   215  000AFF  00                 	db	0
   216                           
   217                           ;initializer for _yl
   218  000B00  4C                 	db	76
   219  000B01  69                 	db	105
   220  000B02  6D                 	db	109
   221  000B03  69                 	db	105
   222  000B04  74                 	db	116
   223  000B05  20                 	db	32
   224  000B06  79                 	db	121
   225  000B07  20                 	db	32
   226  000B08  52                 	db	82
   227  000B09  65                 	db	101
   228  000B0A  61                 	db	97
   229  000B0B  63                 	db	99
   230  000B0C  68                 	db	104
   231  000B0D  65                 	db	101
   232  000B0E  64                 	db	100
   233  000B0F  0A                 	db	10
   234  000B10  00                 	db	0
   235                           
   236                           ;initializer for _xl
   237  000B11  4C                 	db	76
   238  000B12  69                 	db	105
   239  000B13  6D                 	db	109
   240  000B14  69                 	db	105
   241  000B15  74                 	db	116
   242  000B16  20                 	db	32
   243  000B17  78                 	db	120
   244  000B18  20                 	db	32
   245  000B19  52                 	db	82
   246  000B1A  65                 	db	101
   247  000B1B  61                 	db	97
   248  000B1C  63                 	db	99
   249  000B1D  68                 	db	104
   250  000B1E  65                 	db	101
   251  000B1F  64                 	db	100
   252  000B20  0A                 	db	10
   253  000B21  00                 	db	0
   254                           
   255                           ;initializer for _msright
   256  000B22  47                 	db	71
   257  000B23  6F                 	db	111
   258  000B24  69                 	db	105
   259  000B25  6E                 	db	110
   260  000B26  67                 	db	103
   261  000B27  20                 	db	32
   262  000B28  52                 	db	82
   263  000B29  69                 	db	105
   264  000B2A  67                 	db	103
   265  000B2B  68                 	db	104
   266  000B2C  74                 	db	116
   267  000B2D  20                 	db	32
   268  000B2E  00                 	db	0
   269                           
   270                           ;initializer for _msdown
   271  000B2F  47                 	db	71
   272  000B30  6F                 	db	111
   273  000B31  69                 	db	105
   274  000B32  6E                 	db	110
   275  000B33  67                 	db	103
   276  000B34  20                 	db	32
   277  000B35  44                 	db	68
   278  000B36  6F                 	db	111
   279  000B37  77                 	db	119
   280  000B38  6E                 	db	110
   281  000B39  0A                 	db	10
   282  000B3A  20                 	db	32
   283  000B3B  00                 	db	0
   284                           
   285                           	psect	idataBANK1
   286  000F4E                     __pidataBANK1:
   287                           	opt callstack 0
   288                           
   289                           ;initializer for _CE
   290  000F4E  20                 	db	32
   291  000F4F  45                 	db	69
   292  000F50  72                 	db	114
   293  000F51  72                 	db	114
   294  000F52  6F                 	db	111
   295  000F53  72                 	db	114
   296  000F54  20                 	db	32
   297  000F55  31                 	db	49
   298  000F56  3A                 	db	58
   299  000F57  20                 	db	32
   300  000F58  49                 	db	73
   301  000F59  6E                 	db	110
   302  000F5A  76                 	db	118
   303  000F5B  61                 	db	97
   304  000F5C  6C                 	db	108
   305  000F5D  69                 	db	105
   306  000F5E  64                 	db	100
   307  000F5F  20                 	db	32
   308  000F60  43                 	db	67
   309  000F61  6F                 	db	111
   310  000F62  6F                 	db	111
   311  000F63  72                 	db	114
   312  000F64  64                 	db	100
   313  000F65  69                 	db	105
   314  000F66  6E                 	db	110
   315  000F67  61                 	db	97
   316  000F68  74                 	db	116
   317  000F69  65                 	db	101
   318  000F6A  0A                 	db	10
   319  000F6B  00                 	db	0
   320                           
   321                           ;initializer for _msgwrong
   322  000F6C  20                 	db	32
   323  000F6D  45                 	db	69
   324  000F6E  72                 	db	114
   325  000F6F  72                 	db	114
   326  000F70  6F                 	db	111
   327  000F71  72                 	db	114
   328  000F72  20                 	db	32
   329  000F73  30                 	db	48
   330  000F74  3A                 	db	58
   331  000F75  20                 	db	32
   332  000F76  49                 	db	73
   333  000F77  6E                 	db	110
   334  000F78  76                 	db	118
   335  000F79  61                 	db	97
   336  000F7A  6C                 	db	108
   337  000F7B  69                 	db	105
   338  000F7C  64                 	db	100
   339  000F7D  20                 	db	32
   340  000F7E  43                 	db	67
   341  000F7F  6F                 	db	111
   342  000F80  6D                 	db	109
   343  000F81  6D                 	db	109
   344  000F82  61                 	db	97
   345  000F83  6E                 	db	110
   346  000F84  64                 	db	100
   347  000F85  0A                 	db	10
   348  000F86  00                 	db	0
   349  0000                     _INTCONbits	set	4082
   350  0000                     _RCONbits	set	4048
   351  0000                     _RCREG	set	4014
   352  0000                     _TXREG	set	4013
   353  0000                     _PIR1bits	set	3998
   354  0000                     _TXSTAbits	set	4012
   355  0000                     _SPBRG	set	4015
   356  0000                     _RCSTAbits	set	4011
   357  0000                     _INTCON2bits	set	4081
   358  0000                     _OSCCON	set	4051
   359  0000                     _INTCON3bits	set	4080
   360  0000                     _PORTCbits	set	3970
   361  0000                     _T2CONbits	set	4042
   362  0000                     _TMR2	set	4044
   363  0000                     _CCP2CON	set	4026
   364  0000                     _CCP1CON	set	4029
   365  0000                     _T2CON	set	4042
   366  0000                     _TRISCbits	set	3988
   367  0000                     _CCPR2L	set	4027
   368  0000                     _CCPR1L	set	4030
   369  0000                     _PR2	set	4043
   370  0000                     _TRISB	set	3987
   371  0000                     _LATB	set	3978
   372  0000                     _PORTB	set	3969
   373  0000                     _LATC	set	3979
   374  0000                     _PORTC	set	3970
   375  0000                     _TRISD	set	3989
   376  0000                     _LATD	set	3980
   377  0000                     _PORTD	set	3971
   378  0000                     _CMCON	set	4020
   379  0000                     _PORTBbits	set	3969
   380  0000                     _PORTDbits	set	3971
   381  0000                     _RCIF	set	31989
   382                           
   383                           ; #config settings
   384  0000                     
   385                           	psect	cinit
   386  000C3E                     __pcinit:
   387                           	opt callstack 0
   388  000C3E                     start_initialization:
   389                           	opt callstack 0
   390  000C3E                     __initialization:
   391                           	opt callstack 0
   392                           
   393                           ; Initialize objects allocated to BANK1 (57 bytes)
   394                           ; load TBLPTR registers with __pidataBANK1
   395  000C3E  0E4E               	movlw	low __pidataBANK1
   396  000C40  6EF6               	movwf	tblptrl,c
   397  000C42  0E0F               	movlw	high __pidataBANK1
   398  000C44  6EF7               	movwf	tblptrh,c
   399  000C46  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   400  000C48  6EF8               	movwf	tblptru,c
   401  000C4A  EE01  F000         	lfsr	0,__pdataBANK1
   402  000C4E  EE10 F039          	lfsr	1,57
   403  000C52                     copy_data0:
   404  000C52  0009               	tblrd		*+
   405  000C54  CFF5 FFEE          	movff	tablat,postinc0
   406  000C58  50E5               	movf	postdec1,w,c
   407  000C5A  50E1               	movf	fsr1l,w,c
   408  000C5C  E1FA               	bnz	copy_data0
   409                           
   410                           ; Initialize objects allocated to BANK0 (154 bytes)
   411                           ; load TBLPTR registers with __pidataBANK0
   412  000C5E  0EA2               	movlw	low __pidataBANK0
   413  000C60  6EF6               	movwf	tblptrl,c
   414  000C62  0E0A               	movlw	high __pidataBANK0
   415  000C64  6EF7               	movwf	tblptrh,c
   416  000C66  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   417  000C68  6EF8               	movwf	tblptru,c
   418  000C6A  EE00  F060         	lfsr	0,__pdataBANK0
   419  000C6E  EE10 F09A          	lfsr	1,154
   420  000C72                     copy_data1:
   421  000C72  0009               	tblrd		*+
   422  000C74  CFF5 FFEE          	movff	tablat,postinc0
   423  000C78  50E5               	movf	postdec1,w,c
   424  000C7A  50E1               	movf	fsr1l,w,c
   425  000C7C  E1FA               	bnz	copy_data1
   426                           
   427                           ; Initialize objects allocated to COMRAM (23 bytes)
   428                           ; load TBLPTR registers with __pidataCOMRAM
   429  000C7E  0E84               	movlw	low __pidataCOMRAM
   430  000C80  6EF6               	movwf	tblptrl,c
   431  000C82  0E10               	movlw	high __pidataCOMRAM
   432  000C84  6EF7               	movwf	tblptrh,c
   433  000C86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   434  000C88  6EF8               	movwf	tblptru,c
   435  000C8A  EE00  F02D         	lfsr	0,__pdataCOMRAM
   436  000C8E  EE10 F017          	lfsr	1,23
   437  000C92                     copy_data2:
   438  000C92  0009               	tblrd		*+
   439  000C94  CFF5 FFEE          	movff	tablat,postinc0
   440  000C98  50E5               	movf	postdec1,w,c
   441  000C9A  50E1               	movf	fsr1l,w,c
   442  000C9C  E1FA               	bnz	copy_data2
   443                           
   444                           ; Clear objects allocated to COMRAM (15 bytes)
   445  000C9E  EE00  F044         	lfsr	0,__pbssCOMRAM
   446  000CA2  0E0F               	movlw	15
   447  000CA4                     clear_0:
   448  000CA4  6AEE               	clrf	postinc0,c
   449  000CA6  06E8               	decf	wreg,f,c
   450  000CA8  E1FD               	bnz	clear_0
   451  000CAA                     end_of_initialization:
   452                           	opt callstack 0
   453  000CAA                     __end_of__initialization:
   454                           	opt callstack 0
   455  000CAA  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   456  000CAC  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   457  000CAE  0100               	movlb	0
   458  000CB0  EFED  F003         	goto	_main	;jump to C main() function
   459                           
   460                           	psect	bssCOMRAM
   461  000044                     __pbssCOMRAM:
   462                           	opt callstack 0
   463  000044                     _cnt:
   464                           	opt callstack 0
   465  000044                     	ds	2
   466  000046                     _emergencySwitch:
   467                           	opt callstack 0
   468  000046                     	ds	2
   469  000048                     _keepgoing:
   470                           	opt callstack 0
   471  000048                     	ds	2
   472  00004A                     _y:
   473                           	opt callstack 0
   474  00004A                     	ds	2
   475  00004C                     _x:
   476                           	opt callstack 0
   477  00004C                     	ds	2
   478  00004E                     _nvalory:
   479                           	opt callstack 0
   480  00004E                     	ds	2
   481  000050                     _nvalorx:
   482                           	opt callstack 0
   483  000050                     	ds	2
   484  000052                     _ons:
   485                           	opt callstack 0
   486  000052                     	ds	1
   487                           
   488                           	psect	dataCOMRAM
   489  00002D                     __pdataCOMRAM:
   490                           	opt callstack 0
   491  00002D                     _msleft:
   492                           	opt callstack 0
   493  00002D                     	ds	12
   494  000039                     _msup:
   495                           	opt callstack 0
   496  000039                     	ds	11
   497                           
   498                           	psect	dataBANK0
   499  000060                     __pdataBANK0:
   500                           	opt callstack 0
   501  000060                     _emergency:
   502                           	opt callstack 0
   503  000060                     	ds	26
   504  00007A                     _check:
   505                           	opt callstack 0
   506  00007A                     	ds	23
   507  000091                     _msgcomp:
   508                           	opt callstack 0
   509  000091                     	ds	23
   510  0000A8                     _msgeje:
   511                           	opt callstack 0
   512  0000A8                     	ds	22
   513  0000BE                     _yl:
   514                           	opt callstack 0
   515  0000BE                     	ds	17
   516  0000CF                     _xl:
   517                           	opt callstack 0
   518  0000CF                     	ds	17
   519  0000E0                     _msright:
   520                           	opt callstack 0
   521  0000E0                     	ds	13
   522  0000ED                     _msdown:
   523                           	opt callstack 0
   524  0000ED                     	ds	13
   525                           
   526                           	psect	dataBANK1
   527  000100                     __pdataBANK1:
   528                           	opt callstack 0
   529  000100                     _CE:
   530                           	opt callstack 0
   531  000100                     	ds	30
   532  00011E                     _msgwrong:
   533                           	opt callstack 0
   534  00011E                     	ds	27
   535                           
   536                           	psect	cstackCOMRAM
   537  000001                     __pcstackCOMRAM:
   538                           	opt callstack 0
   539  000001                     ?i2_strlen:
   540                           	opt callstack 0
   541  000001                     i2USART_Tx@data:
   542                           	opt callstack 0
   543  000001                     i2strlen@s:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x0
   547  000001                     	ds	2
   548  000003                     i2strlen@a:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x2
   552  000003                     	ds	2
   553  000005                     emergencyButton@i:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x4
   557  000005                     	ds	2
   558  000007                     ??_INT_isr:
   559                           
   560                           ; 1 bytes @ 0x6
   561  000007                     	ds	3
   562  00000A                     INT_isr@i:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x9
   566  00000A                     	ds	2
   567  00000C                     ?_strlen:
   568                           	opt callstack 0
   569  00000C                     ?___wmul:
   570                           	opt callstack 0
   571  00000C                     ?___aldiv:
   572                           	opt callstack 0
   573  00000C                     USART_Tx@data:
   574                           	opt callstack 0
   575  00000C                     ___wmul@multiplier:
   576                           	opt callstack 0
   577  00000C                     strlen@s:
   578                           	opt callstack 0
   579  00000C                     ___aldiv@dividend:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0xB
   583  00000C                     	ds	2
   584  00000E                     ___wmul@multiplicand:
   585                           	opt callstack 0
   586  00000E                     strlen@a:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0xD
   590  00000E                     	ds	2
   591  000010                     invalidCoordinate@i:
   592                           	opt callstack 0
   593  000010                     xLimit@i:
   594                           	opt callstack 0
   595  000010                     yLimit@i:
   596                           	opt callstack 0
   597  000010                     Error@i:
   598                           	opt callstack 0
   599  000010                     Ejecutandose@i:
   600                           	opt callstack 0
   601  000010                     Completo@i:
   602                           	opt callstack 0
   603  000010                     ___wmul@product:
   604                           	opt callstack 0
   605  000010                     ___aldiv@divisor:
   606                           	opt callstack 0
   607                           
   608                           ; 4 bytes @ 0xF
   609  000010                     	ds	2
   610  000012                     contador_pulsosD@pulsoD:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x11
   614  000012                     	ds	2
   615  000014                     ??_contador_pulsosD:
   616  000014                     ___aldiv@counter:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0x13
   620  000014                     	ds	1
   621  000015                     ___aldiv@sign:
   622                           	opt callstack 0
   623  000015                     coordinateRefreshX@newX:
   624                           	opt callstack 0
   625  000015                     coordinateRefreshY@newY:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x14
   629  000015                     	ds	1
   630  000016                     ___aldiv@quotient:
   631                           	opt callstack 0
   632                           
   633                           ; 4 bytes @ 0x15
   634  000016                     	ds	1
   635  000017                     coordinateRefreshX@i:
   636                           	opt callstack 0
   637  000017                     coordinateRefreshY@i:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x16
   641  000017                     	ds	2
   642  000019                     coordinateRefreshX@j:
   643                           	opt callstack 0
   644  000019                     coordinateRefreshY@j:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x18
   648  000019                     	ds	1
   649  00001A                     USART_Init@BAUD:
   650                           	opt callstack 0
   651                           
   652                           ; 4 bytes @ 0x19
   653  00001A                     	ds	1
   654  00001B                     comandos@comando:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0x1A
   658  00001B                     	ds	2
   659  00001D                     ??_comandos:
   660                           
   661                           ; 1 bytes @ 0x1C
   662  00001D                     	ds	1
   663  00001E                     _USART_Init$1769:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x1D
   667  00001E                     	ds	4
   668  000022                     main@instruccion:
   669                           	opt callstack 0
   670                           
   671                           ; 8 bytes @ 0x21
   672  000022                     	ds	8
   673  00002A                     main@i:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x29
   677  00002A                     	ds	2
   678  00002C                     main@contador:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0x2B
   682  00002C                     	ds	1
   683                           
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 35 in file "MAINSPARC.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  i               2   41[COMRAM] int 
   694 ;;  contador        1   43[COMRAM] unsigned char 
   695 ;;  instruccion     8   33[COMRAM] unsigned char [8]
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         0       0       0       0       0       0       0       0       0
   706 ;;      Locals:        11       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:        11       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:       11 bytes
   710 ;; Hardware stack levels required when called:    7
   711 ;; This function calls:
   712 ;;		_Completo
   713 ;;		_USART_Init
   714 ;;		_USART_Rx
   715 ;;		_USART_Tx
   716 ;;		_comandos
   717 ;;		_gpioInit
   718 ;;		_interruptionsInit
   719 ;;		_pwm_init
   720 ;;		_xLimit
   721 ;;		_yLimit
   722 ;; This function is called by:
   723 ;;		Startup code after reset
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text0
   728  0007DA                     __ptext0:
   729                           	opt callstack 0
   730  0007DA                     _main:
   731                           	opt callstack 24
   732  0007DA                     
   733                           ;MAINSPARC.c: 36:     OSCCON=0x72;
   734  0007DA  0E72               	movlw	114
   735  0007DC  6ED3               	movwf	211,c	;volatile
   736  0007DE                     
   737                           ;MAINSPARC.c: 38:     USART_Init(9600);
   738  0007DE  0E80               	movlw	128
   739  0007E0  6E1A               	movwf	USART_Init@BAUD^0,c
   740  0007E2  0E25               	movlw	37
   741  0007E4  6E1B               	movwf	(USART_Init@BAUD+1)^0,c
   742  0007E6  0E00               	movlw	0
   743  0007E8  6E1C               	movwf	(USART_Init@BAUD+2)^0,c
   744  0007EA  0E00               	movlw	0
   745  0007EC  6E1D               	movwf	(USART_Init@BAUD+3)^0,c
   746  0007EE  EC5A  F006         	call	_USART_Init	;wreg free
   747  0007F2                     
   748                           ;MAINSPARC.c: 39:     INTCON2bits.RBPU=1;
   749  0007F2  8EF1               	bsf	241,7,c	;volatile
   750  0007F4                     
   751                           ;MAINSPARC.c: 40:     gpioInit();
   752  0007F4  ECFA  F007         	call	_gpioInit	;wreg free
   753  0007F8                     
   754                           ;MAINSPARC.c: 41:    pwm_init();
   755  0007F8  EC21  F008         	call	_pwm_init	;wreg free
   756  0007FC                     
   757                           ;MAINSPARC.c: 42:    interruptionsInit();
   758  0007FC  EC77  F008         	call	_interruptionsInit	;wreg free
   759  000800                     
   760                           ;MAINSPARC.c: 44:    RCSTAbits.CREN=0;;
   761  000800  98AB               	bcf	171,4,c	;volatile
   762  000802                     
   763                           ;MAINSPARC.c: 45:     PORTDbits.RD2= 1;
   764  000802  8483               	bsf	131,2,c	;volatile
   765  000804                     
   766                           ;MAINSPARC.c: 46:     PORTDbits.RD3= 1;
   767  000804  8683               	bsf	131,3,c	;volatile
   768  000806                     
   769                           ;MAINSPARC.c: 47:     char instruccion[8];;MAINSPARC.c: 48:     PORTDbits.RD4=1;
   770  000806  8883               	bsf	131,4,c	;volatile
   771  000808                     
   772                           ;MAINSPARC.c: 49:     PORTDbits.RD5=0;
   773  000808  9A83               	bcf	131,5,c	;volatile
   774  00080A                     
   775                           ;MAINSPARC.c: 50:     PORTDbits.RD6=0;
   776  00080A  9C83               	bcf	131,6,c	;volatile
   777  00080C                     
   778                           ;MAINSPARC.c: 51:     PORTDbits.RD0=1;
   779  00080C  8083               	bsf	131,0,c	;volatile
   780  00080E                     
   781                           ;MAINSPARC.c: 52:     PORTDbits.RD1=0;
   782  00080E  9283               	bcf	131,1,c	;volatile
   783  000810                     
   784                           ;MAINSPARC.c: 53:     PORTDbits.RD3=0;
   785  000810  9683               	bcf	131,3,c	;volatile
   786  000812                     
   787                           ;MAINSPARC.c: 54:     PORTDbits.RD2=0;
   788  000812  9483               	bcf	131,2,c	;volatile
   789  000814                     l359:
   790  000814  A281               	btfss	129,1,c	;volatile
   791  000816  EF0F  F004         	goto	u1701
   792  00081A  EF11  F004         	goto	u1700
   793  00081E                     u1701:
   794  00081E  EF0A  F004         	goto	l359
   795  000822                     u1700:
   796  000822                     
   797                           ;MAINSPARC.c: 56:     PORTDbits.RD3=1;
   798  000822  8683               	bsf	131,3,c	;volatile
   799                           
   800                           ;MAINSPARC.c: 57:     PORTDbits.RD2=1;
   801  000824  8483               	bsf	131,2,c	;volatile
   802  000826                     
   803                           ;MAINSPARC.c: 58:     xLimit();
   804  000826  EC84  F007         	call	_xLimit	;wreg free
   805  00082A                     
   806                           ;MAINSPARC.c: 59:     PORTDbits.RD0=1;
   807  00082A  8083               	bsf	131,0,c	;volatile
   808  00082C                     
   809                           ;MAINSPARC.c: 60:     PORTDbits.RD1=1;
   810  00082C  8283               	bsf	131,1,c	;volatile
   811  00082E                     
   812                           ;MAINSPARC.c: 61:     PORTDbits.RD3=0;
   813  00082E  9683               	bcf	131,3,c	;volatile
   814  000830                     
   815                           ;MAINSPARC.c: 62:     PORTDbits.RD2=0;
   816  000830  9483               	bcf	131,2,c	;volatile
   817  000832                     l362:
   818  000832  A081               	btfss	129,0,c	;volatile
   819  000834  EF1E  F004         	goto	u1711
   820  000838  EF20  F004         	goto	u1710
   821  00083C                     u1711:
   822  00083C  EF19  F004         	goto	l362
   823  000840                     u1710:
   824  000840                     
   825                           ;MAINSPARC.c: 64:     PORTDbits.RD3=1;
   826  000840  8683               	bsf	131,3,c	;volatile
   827                           
   828                           ;MAINSPARC.c: 65:     PORTDbits.RD2=1;
   829  000842  8483               	bsf	131,2,c	;volatile
   830  000844                     
   831                           ;MAINSPARC.c: 66:     yLimit();
   832  000844  EC61  F007         	call	_yLimit	;wreg free
   833  000848                     
   834                           ;MAINSPARC.c: 67:     x=0;
   835  000848  0E00               	movlw	0
   836  00084A  6E4D               	movwf	(_x+1)^0,c
   837  00084C  0E00               	movlw	0
   838  00084E  6E4C               	movwf	_x^0,c
   839  000850                     
   840                           ;MAINSPARC.c: 68:     y=0;
   841  000850  0E00               	movlw	0
   842  000852  6E4B               	movwf	(_y+1)^0,c
   843  000854  0E00               	movlw	0
   844  000856  6E4A               	movwf	_y^0,c
   845                           
   846                           ;MAINSPARC.c: 69:     Completo();
   847  000858  EC3B  F007         	call	_Completo	;wreg free
   848  00085C                     l2240:
   849                           
   850                           ;MAINSPARC.c: 75:          RCSTAbits.CREN=1;;
   851  00085C  88AB               	bsf	171,4,c	;volatile
   852  00085E                     
   853                           ;MAINSPARC.c: 76:         for(uint8_t contador=0; contador<8; contador++){
   854  00085E  0E00               	movlw	0
   855  000860  6E2C               	movwf	main@contador^0,c
   856  000862                     l2248:
   857                           
   858                           ;MAINSPARC.c: 77:             instruccion[contador]=USART_Rx();
   859  000862  0E22               	movlw	low main@instruccion
   860  000864  242C               	addwf	main@contador^0,w,c
   861  000866  6ED9               	movwf	fsr2l,c
   862  000868  6ADA               	clrf	fsr2h,c
   863  00086A  0E00               	movlw	high main@instruccion
   864  00086C  22DA               	addwfc	fsr2h,f,c
   865  00086E  EC6E  F008         	call	_USART_Rx	;wreg free
   866  000872  6EDF               	movwf	indf2,c
   867  000874                     
   868                           ;MAINSPARC.c: 78:         }
   869  000874  2A2C               	incf	main@contador^0,f,c
   870  000876  0E07               	movlw	7
   871  000878  642C               	cpfsgt	main@contador^0,c
   872  00087A  EF41  F004         	goto	u1721
   873  00087E  EF43  F004         	goto	u1720
   874  000882                     u1721:
   875  000882  EF31  F004         	goto	l2248
   876  000886                     u1720:
   877  000886                     
   878                           ;MAINSPARC.c: 81:        for(int i=0; i < 8; i++){
   879  000886  0E00               	movlw	0
   880  000888  6E2B               	movwf	(main@i+1)^0,c
   881  00088A  0E00               	movlw	0
   882  00088C  6E2A               	movwf	main@i^0,c
   883  00088E                     l2260:
   884                           
   885                           ;MAINSPARC.c: 82:     USART_Tx(instruccion[i]);
   886  00088E  0E22               	movlw	low main@instruccion
   887  000890  242A               	addwf	main@i^0,w,c
   888  000892  6ED9               	movwf	fsr2l,c
   889  000894  0E00               	movlw	high main@instruccion
   890  000896  202B               	addwfc	(main@i+1)^0,w,c
   891  000898  6EDA               	movwf	fsr2h,c
   892  00089A  50DF               	movf	indf2,w,c
   893  00089C  EC4E  F008         	call	_USART_Tx
   894  0008A0                     
   895                           ;MAINSPARC.c: 83:     }
   896  0008A0  4A2A               	infsnz	main@i^0,f,c
   897  0008A2  2A2B               	incf	(main@i+1)^0,f,c
   898  0008A4  BE2B               	btfsc	(main@i+1)^0,7,c
   899  0008A6  EF5E  F004         	goto	u1731
   900  0008AA  502B               	movf	(main@i+1)^0,w,c
   901  0008AC  E109               	bnz	u1730
   902  0008AE  0E08               	movlw	8
   903  0008B0  5C2A               	subwf	main@i^0,w,c
   904  0008B2  A0D8               	btfss	status,0,c
   905  0008B4  EF5E  F004         	goto	u1731
   906  0008B8  EF60  F004         	goto	u1730
   907  0008BC                     u1731:
   908  0008BC  EF47  F004         	goto	l2260
   909  0008C0                     u1730:
   910  0008C0                     
   911                           ;MAINSPARC.c: 84:           RCSTAbits.CREN=0;;
   912  0008C0  98AB               	bcf	171,4,c	;volatile
   913  0008C2                     
   914                           ;MAINSPARC.c: 85:         comandos(instruccion);
   915  0008C2  0E22               	movlw	low main@instruccion
   916  0008C4  6E1B               	movwf	comandos@comando^0,c
   917  0008C6  0E00               	movlw	high main@instruccion
   918  0008C8  6E1C               	movwf	(comandos@comando+1)^0,c
   919  0008CA  EC09  F000         	call	_comandos	;wreg free
   920  0008CE  EF2E  F004         	goto	l2240
   921  0008D2  EF07  F000         	goto	start
   922  0008D6                     __end_of_main:
   923                           	opt callstack 0
   924                           
   925 ;; *************** function _pwm_init *****************
   926 ;; Defined at:
   927 ;;		line 23 in file "pwm.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   941 ;;      Params:         0       0       0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    3
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text1
   956  001042                     __ptext1:
   957                           	opt callstack 0
   958  001042                     _pwm_init:
   959                           	opt callstack 27
   960  001042                     
   961                           ;pwm.c: 25:     PR2 = 249;
   962  001042  0EF9               	movlw	249
   963  001044  6ECB               	movwf	203,c	;volatile
   964                           
   965                           ;pwm.c: 26:     CCPR1L= (500>>2 & (0x3FF));
   966  001046  0E7D               	movlw	125
   967  001048  6EBE               	movwf	190,c	;volatile
   968                           
   969                           ;pwm.c: 27:     CCPR2L= (500>>2 & (0x3FF));
   970  00104A  0E7D               	movlw	125
   971  00104C  6EBB               	movwf	187,c	;volatile
   972  00104E                     
   973                           ;pwm.c: 28:     TRISCbits.RC1=0;
   974  00104E  9294               	bcf	148,1,c	;volatile
   975  001050                     
   976                           ;pwm.c: 29:     TRISCbits.RC2=0;
   977  001050  9494               	bcf	148,2,c	;volatile
   978                           
   979                           ;pwm.c: 30:     T2CON = 0x03;
   980  001052  0E03               	movlw	3
   981  001054  6ECA               	movwf	202,c	;volatile
   982                           
   983                           ;pwm.c: 31:     CCP1CON = 0x0C;
   984  001056  0E0C               	movlw	12
   985  001058  6EBD               	movwf	189,c	;volatile
   986                           
   987                           ;pwm.c: 32:     CCP2CON=0x0C;
   988  00105A  0E0C               	movlw	12
   989  00105C  6EBA               	movwf	186,c	;volatile
   990                           
   991                           ;pwm.c: 33:     TMR2=0;
   992  00105E  0E00               	movlw	0
   993  001060  6ECC               	movwf	204,c	;volatile
   994  001062                     
   995                           ;pwm.c: 34:     T2CONbits.TMR2ON =1;
   996  001062  84CA               	bsf	202,2,c	;volatile
   997  001064  0012               	return		;funcret
   998  001066                     __end_of_pwm_init:
   999                           	opt callstack 0
  1000                           
  1001 ;; *************** function _interruptionsInit *****************
  1002 ;; Defined at:
  1003 ;;		line 10 in file "Interruptions.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		None
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1017 ;;      Params:         0       0       0       0       0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    3
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text2
  1032  0010EE                     __ptext2:
  1033                           	opt callstack 0
  1034  0010EE                     _interruptionsInit:
  1035                           	opt callstack 27
  1036  0010EE                     
  1037                           ;Interruptions.c: 11:     RCONbits.IPEN=0;
  1038  0010EE  9ED0               	bcf	208,7,c	;volatile
  1039                           
  1040                           ;Interruptions.c: 12:     INTCONbits.PEIE=1;
  1041  0010F0  8CF2               	bsf	242,6,c	;volatile
  1042                           
  1043                           ;Interruptions.c: 13:     INTCONbits.GIE=1;
  1044  0010F2  8EF2               	bsf	242,7,c	;volatile
  1045                           
  1046                           ;Interruptions.c: 14:     INTCON3bits.INT2F=0;
  1047  0010F4  92F0               	bcf	240,1,c	;volatile
  1048                           
  1049                           ;Interruptions.c: 16:     INTCON2bits.INTEDG2=1;
  1050  0010F6  88F1               	bsf	241,4,c	;volatile
  1051                           
  1052                           ;Interruptions.c: 17:     INTCON3bits.INT2E=1;
  1053  0010F8  88F0               	bsf	240,4,c	;volatile
  1054                           
  1055                           ;Interruptions.c: 21:     INTCON3bits.INT2IF=0;
  1056  0010FA  92F0               	bcf	240,1,c	;volatile
  1057  0010FC  0012               	return		;funcret
  1058  0010FE                     __end_of_interruptionsInit:
  1059                           	opt callstack 0
  1060                           
  1061 ;; *************** function _gpioInit *****************
  1062 ;; Defined at:
  1063 ;;		line 2 in file "GPIO.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    3
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text3
  1092  000FF4                     __ptext3:
  1093                           	opt callstack 0
  1094  000FF4                     _gpioInit:
  1095                           	opt callstack 27
  1096  000FF4                     
  1097                           ;GPIO.c: 3:     CMCON=0x07;
  1098  000FF4  0E07               	movlw	7
  1099  000FF6  6EB4               	movwf	180,c	;volatile
  1100                           
  1101                           ;GPIO.c: 4:     PORTD=0x00;
  1102  000FF8  0E00               	movlw	0
  1103  000FFA  6E83               	movwf	131,c	;volatile
  1104                           
  1105                           ;GPIO.c: 5:     LATD=0x00;
  1106  000FFC  0E00               	movlw	0
  1107  000FFE  6E8C               	movwf	140,c	;volatile
  1108                           
  1109                           ;GPIO.c: 6:     TRISD=0x00;
  1110  001000  0E00               	movlw	0
  1111  001002  6E95               	movwf	149,c	;volatile
  1112                           
  1113                           ;GPIO.c: 7:     PORTC=0x00;
  1114  001004  0E00               	movlw	0
  1115  001006  6E82               	movwf	130,c	;volatile
  1116                           
  1117                           ;GPIO.c: 8:     LATC=0x00;
  1118  001008  0E00               	movlw	0
  1119  00100A  6E8B               	movwf	139,c	;volatile
  1120                           
  1121                           ;GPIO.c: 9:     PORTB=0x00;
  1122  00100C  0E00               	movlw	0
  1123  00100E  6E81               	movwf	129,c	;volatile
  1124                           
  1125                           ;GPIO.c: 10:     LATB=0x00;
  1126  001010  0E00               	movlw	0
  1127  001012  6E8A               	movwf	138,c	;volatile
  1128  001014                     
  1129                           ;GPIO.c: 11:     TRISB=0xFF;
  1130  001014  6893               	setf	147,c	;volatile
  1131  001016                     
  1132                           ;GPIO.c: 12:     PORTDbits.RD3=1;
  1133  001016  8683               	bsf	131,3,c	;volatile
  1134  001018                     
  1135                           ;GPIO.c: 13:     PORTDbits.RD2=1;
  1136  001018  8483               	bsf	131,2,c	;volatile
  1137  00101A  0012               	return		;funcret
  1138  00101C                     __end_of_gpioInit:
  1139                           	opt callstack 0
  1140                           
  1141 ;; *************** function _comandos *****************
  1142 ;; Defined at:
  1143 ;;		line 115 in file "Comandos.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  comando         2   26[COMRAM] PTR unsigned char 
  1146 ;;		 -> main@instruccion(8), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2   26[COMRAM] int 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1158 ;;      Params:         2       0       0       0       0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1160 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1161 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1162 ;;Total ram usage:        7 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    6
  1165 ;; This function calls:
  1166 ;;		_Completo
  1167 ;;		_Ejecutandose
  1168 ;;		_Error
  1169 ;;		_coordinateRefreshX
  1170 ;;		_coordinateRefreshY
  1171 ;;		_invalidCoordinate
  1172 ;;		_xLimit
  1173 ;;		_yLimit
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text4
  1180  000012                     __ptext4:
  1181                           	opt callstack 0
  1182  000012                     _comandos:
  1183                           	opt callstack 24
  1184  000012                     
  1185                           ;Comandos.c: 116:     if(comando[0]=='C'){
  1186  000012  C01B  FFD9         	movff	comandos@comando,fsr2l
  1187  000016  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1188  00001A  0E43               	movlw	67
  1189  00001C  18DE               	xorwf	postinc2,w,c
  1190  00001E  A4D8               	btfss	status,2,c
  1191  000020  EF14  F000         	goto	u1171
  1192  000024  EF16  F000         	goto	u1170
  1193  000028                     u1171:
  1194  000028  EF3F  F001         	goto	l1978
  1195  00002C                     u1170:
  1196  00002C                     
  1197                           ;Comandos.c: 117:         if (comando[1]>='0' && comando[1]<='3'){
  1198  00002C  EE20 F001          	lfsr	2,1
  1199  000030  501B               	movf	comandos@comando^0,w,c
  1200  000032  26D9               	addwf	fsr2l,f,c
  1201  000034  501C               	movf	(comandos@comando+1)^0,w,c
  1202  000036  22DA               	addwfc	fsr2h,f,c
  1203  000038  0E2F               	movlw	47
  1204  00003A  64DF               	cpfsgt	indf2,c
  1205  00003C  EF22  F000         	goto	u1181
  1206  000040  EF24  F000         	goto	u1180
  1207  000044                     u1181:
  1208  000044  EF3B  F001         	goto	l1964
  1209  000048                     u1180:
  1210  000048  EE20 F001          	lfsr	2,1
  1211  00004C  501B               	movf	comandos@comando^0,w,c
  1212  00004E  26D9               	addwf	fsr2l,f,c
  1213  000050  501C               	movf	(comandos@comando+1)^0,w,c
  1214  000052  22DA               	addwfc	fsr2h,f,c
  1215  000054  0E34               	movlw	52
  1216  000056  60DF               	cpfslt	indf2,c
  1217  000058  EF30  F000         	goto	u1191
  1218  00005C  EF32  F000         	goto	u1190
  1219  000060                     u1191:
  1220  000060  EF3B  F001         	goto	l1964
  1221  000064                     u1190:
  1222  000064                     
  1223                           ;Comandos.c: 118:             if (comando[2]>='0' && comando[2]<='9'){
  1224  000064  EE20 F002          	lfsr	2,2
  1225  000068  501B               	movf	comandos@comando^0,w,c
  1226  00006A  26D9               	addwf	fsr2l,f,c
  1227  00006C  501C               	movf	(comandos@comando+1)^0,w,c
  1228  00006E  22DA               	addwfc	fsr2h,f,c
  1229  000070  0E2F               	movlw	47
  1230  000072  64DF               	cpfsgt	indf2,c
  1231  000074  EF3E  F000         	goto	u1201
  1232  000078  EF40  F000         	goto	u1200
  1233  00007C                     u1201:
  1234  00007C  EF3B  F001         	goto	l1964
  1235  000080                     u1200:
  1236  000080  EE20 F002          	lfsr	2,2
  1237  000084  501B               	movf	comandos@comando^0,w,c
  1238  000086  26D9               	addwf	fsr2l,f,c
  1239  000088  501C               	movf	(comandos@comando+1)^0,w,c
  1240  00008A  22DA               	addwfc	fsr2h,f,c
  1241  00008C  0E3A               	movlw	58
  1242  00008E  60DF               	cpfslt	indf2,c
  1243  000090  EF4C  F000         	goto	u1211
  1244  000094  EF4E  F000         	goto	u1210
  1245  000098                     u1211:
  1246  000098  EF3B  F001         	goto	l1964
  1247  00009C                     u1210:
  1248  00009C                     
  1249                           ;Comandos.c: 119:                 if (comando[3]>='0' && comando[3]<='9'){
  1250  00009C  EE20 F003          	lfsr	2,3
  1251  0000A0  501B               	movf	comandos@comando^0,w,c
  1252  0000A2  26D9               	addwf	fsr2l,f,c
  1253  0000A4  501C               	movf	(comandos@comando+1)^0,w,c
  1254  0000A6  22DA               	addwfc	fsr2h,f,c
  1255  0000A8  0E2F               	movlw	47
  1256  0000AA  64DF               	cpfsgt	indf2,c
  1257  0000AC  EF5A  F000         	goto	u1221
  1258  0000B0  EF5C  F000         	goto	u1220
  1259  0000B4                     u1221:
  1260  0000B4  EF3B  F001         	goto	l1964
  1261  0000B8                     u1220:
  1262  0000B8  EE20 F003          	lfsr	2,3
  1263  0000BC  501B               	movf	comandos@comando^0,w,c
  1264  0000BE  26D9               	addwf	fsr2l,f,c
  1265  0000C0  501C               	movf	(comandos@comando+1)^0,w,c
  1266  0000C2  22DA               	addwfc	fsr2h,f,c
  1267  0000C4  0E3A               	movlw	58
  1268  0000C6  60DF               	cpfslt	indf2,c
  1269  0000C8  EF68  F000         	goto	u1231
  1270  0000CC  EF6A  F000         	goto	u1230
  1271  0000D0                     u1231:
  1272  0000D0  EF3B  F001         	goto	l1964
  1273  0000D4                     u1230:
  1274  0000D4                     
  1275                           ;Comandos.c: 120:                     if (comando[4]==','){
  1276  0000D4  EE20 F004          	lfsr	2,4
  1277  0000D8  501B               	movf	comandos@comando^0,w,c
  1278  0000DA  26D9               	addwf	fsr2l,f,c
  1279  0000DC  501C               	movf	(comandos@comando+1)^0,w,c
  1280  0000DE  22DA               	addwfc	fsr2h,f,c
  1281  0000E0  0E2C               	movlw	44
  1282  0000E2  18DE               	xorwf	postinc2,w,c
  1283  0000E4  A4D8               	btfss	status,2,c
  1284  0000E6  EF77  F000         	goto	u1241
  1285  0000EA  EF79  F000         	goto	u1240
  1286  0000EE                     u1241:
  1287  0000EE  EF3B  F001         	goto	l1964
  1288  0000F2                     u1240:
  1289  0000F2                     
  1290                           ;Comandos.c: 121:                         if (comando[5]>='0' && comando[5]<='3'){
  1291  0000F2  EE20 F005          	lfsr	2,5
  1292  0000F6  501B               	movf	comandos@comando^0,w,c
  1293  0000F8  26D9               	addwf	fsr2l,f,c
  1294  0000FA  501C               	movf	(comandos@comando+1)^0,w,c
  1295  0000FC  22DA               	addwfc	fsr2h,f,c
  1296  0000FE  0E2F               	movlw	47
  1297  000100  64DF               	cpfsgt	indf2,c
  1298  000102  EF85  F000         	goto	u1251
  1299  000106  EF87  F000         	goto	u1250
  1300  00010A                     u1251:
  1301  00010A  EF3B  F001         	goto	l1964
  1302  00010E                     u1250:
  1303  00010E  EE20 F005          	lfsr	2,5
  1304  000112  501B               	movf	comandos@comando^0,w,c
  1305  000114  26D9               	addwf	fsr2l,f,c
  1306  000116  501C               	movf	(comandos@comando+1)^0,w,c
  1307  000118  22DA               	addwfc	fsr2h,f,c
  1308  00011A  0E34               	movlw	52
  1309  00011C  60DF               	cpfslt	indf2,c
  1310  00011E  EF93  F000         	goto	u1261
  1311  000122  EF95  F000         	goto	u1260
  1312  000126                     u1261:
  1313  000126  EF3B  F001         	goto	l1964
  1314  00012A                     u1260:
  1315  00012A                     
  1316                           ;Comandos.c: 122:                             if (comando[6]>='0' && comando[6]<='9'){
  1317  00012A  EE20 F006          	lfsr	2,6
  1318  00012E  501B               	movf	comandos@comando^0,w,c
  1319  000130  26D9               	addwf	fsr2l,f,c
  1320  000132  501C               	movf	(comandos@comando+1)^0,w,c
  1321  000134  22DA               	addwfc	fsr2h,f,c
  1322  000136  0E2F               	movlw	47
  1323  000138  64DF               	cpfsgt	indf2,c
  1324  00013A  EFA1  F000         	goto	u1271
  1325  00013E  EFA3  F000         	goto	u1270
  1326  000142                     u1271:
  1327  000142  EF3B  F001         	goto	l1964
  1328  000146                     u1270:
  1329  000146  EE20 F006          	lfsr	2,6
  1330  00014A  501B               	movf	comandos@comando^0,w,c
  1331  00014C  26D9               	addwf	fsr2l,f,c
  1332  00014E  501C               	movf	(comandos@comando+1)^0,w,c
  1333  000150  22DA               	addwfc	fsr2h,f,c
  1334  000152  0E3A               	movlw	58
  1335  000154  60DF               	cpfslt	indf2,c
  1336  000156  EFAF  F000         	goto	u1281
  1337  00015A  EFB1  F000         	goto	u1280
  1338  00015E                     u1281:
  1339  00015E  EF3B  F001         	goto	l1964
  1340  000162                     u1280:
  1341  000162                     
  1342                           ;Comandos.c: 123:                                 if (comando[7]>='0' && comando[7]<='9'
      +                          ){
  1343  000162  EE20 F007          	lfsr	2,7
  1344  000166  501B               	movf	comandos@comando^0,w,c
  1345  000168  26D9               	addwf	fsr2l,f,c
  1346  00016A  501C               	movf	(comandos@comando+1)^0,w,c
  1347  00016C  22DA               	addwfc	fsr2h,f,c
  1348  00016E  0E2F               	movlw	47
  1349  000170  64DF               	cpfsgt	indf2,c
  1350  000172  EFBD  F000         	goto	u1291
  1351  000176  EFBF  F000         	goto	u1290
  1352  00017A                     u1291:
  1353  00017A  EF3B  F001         	goto	l1964
  1354  00017E                     u1290:
  1355  00017E  EE20 F007          	lfsr	2,7
  1356  000182  501B               	movf	comandos@comando^0,w,c
  1357  000184  26D9               	addwf	fsr2l,f,c
  1358  000186  501C               	movf	(comandos@comando+1)^0,w,c
  1359  000188  22DA               	addwfc	fsr2h,f,c
  1360  00018A  0E3A               	movlw	58
  1361  00018C  60DF               	cpfslt	indf2,c
  1362  00018E  EFCB  F000         	goto	u1301
  1363  000192  EFCD  F000         	goto	u1300
  1364  000196                     u1301:
  1365  000196  EF3B  F001         	goto	l1964
  1366  00019A                     u1300:
  1367  00019A                     
  1368                           ;Comandos.c: 124:                                     Ejecutandose();
  1369  00019A  EC15  F007         	call	_Ejecutandose	;wreg free
  1370  00019E                     
  1371                           ;Comandos.c: 125:                                     nvalorx= ((comando[1]-48)*100)+((c
      +                          omando[2]-48)*10)+(comando[3]-48);
  1372  00019E  EE20 F001          	lfsr	2,1
  1373  0001A2  501B               	movf	comandos@comando^0,w,c
  1374  0001A4  26D9               	addwf	fsr2l,f,c
  1375  0001A6  501C               	movf	(comandos@comando+1)^0,w,c
  1376  0001A8  22DA               	addwfc	fsr2h,f,c
  1377  0001AA  50DF               	movf	indf2,w,c
  1378  0001AC  6E1D               	movwf	??_comandos^0,c
  1379  0001AE  501D               	movf	??_comandos^0,w,c
  1380  0001B0  0D64               	mullw	100
  1381  0001B2  CFF3 F01E          	movff	prodl,??_comandos+1
  1382  0001B6  CFF4 F01F          	movff	prodh,??_comandos+2
  1383  0001BA  EE20 F002          	lfsr	2,2
  1384  0001BE  501B               	movf	comandos@comando^0,w,c
  1385  0001C0  26D9               	addwf	fsr2l,f,c
  1386  0001C2  501C               	movf	(comandos@comando+1)^0,w,c
  1387  0001C4  22DA               	addwfc	fsr2h,f,c
  1388  0001C6  50DF               	movf	indf2,w,c
  1389  0001C8  6E20               	movwf	(??_comandos+3)^0,c
  1390  0001CA  5020               	movf	(??_comandos+3)^0,w,c
  1391  0001CC  0D0A               	mullw	10
  1392  0001CE  50F3               	movf	243,w,c
  1393  0001D0  261E               	addwf	(??_comandos+1)^0,f,c
  1394  0001D2  50F4               	movf	244,w,c
  1395  0001D4  221F               	addwfc	(??_comandos+2)^0,f,c
  1396  0001D6  EE20 F003          	lfsr	2,3
  1397  0001DA  501B               	movf	comandos@comando^0,w,c
  1398  0001DC  26D9               	addwf	fsr2l,f,c
  1399  0001DE  501C               	movf	(comandos@comando+1)^0,w,c
  1400  0001E0  22DA               	addwfc	fsr2h,f,c
  1401  0001E2  50DF               	movf	indf2,w,c
  1402  0001E4  6E21               	movwf	(??_comandos+4)^0,c
  1403  0001E6  5021               	movf	(??_comandos+4)^0,w,c
  1404  0001E8  261E               	addwf	(??_comandos+1)^0,f,c
  1405  0001EA  0E00               	movlw	0
  1406  0001EC  221F               	addwfc	(??_comandos+2)^0,f,c
  1407  0001EE  0E30               	movlw	48
  1408  0001F0  241E               	addwf	(??_comandos+1)^0,w,c
  1409  0001F2  6E50               	movwf	_nvalorx^0,c
  1410  0001F4  0EEB               	movlw	235
  1411  0001F6  201F               	addwfc	(??_comandos+2)^0,w,c
  1412  0001F8  6E51               	movwf	(_nvalorx+1)^0,c
  1413  0001FA                     
  1414                           ;Comandos.c: 126:                                     nvalory= ((comando[5]-48)*100)+((c
      +                          omando[6]-48)*10)+(comando[7]-48);
  1415  0001FA  EE20 F005          	lfsr	2,5
  1416  0001FE  501B               	movf	comandos@comando^0,w,c
  1417  000200  26D9               	addwf	fsr2l,f,c
  1418  000202  501C               	movf	(comandos@comando+1)^0,w,c
  1419  000204  22DA               	addwfc	fsr2h,f,c
  1420  000206  50DF               	movf	indf2,w,c
  1421  000208  6E1D               	movwf	??_comandos^0,c
  1422  00020A  501D               	movf	??_comandos^0,w,c
  1423  00020C  0D64               	mullw	100
  1424  00020E  CFF3 F01E          	movff	prodl,??_comandos+1
  1425  000212  CFF4 F01F          	movff	prodh,??_comandos+2
  1426  000216  EE20 F006          	lfsr	2,6
  1427  00021A  501B               	movf	comandos@comando^0,w,c
  1428  00021C  26D9               	addwf	fsr2l,f,c
  1429  00021E  501C               	movf	(comandos@comando+1)^0,w,c
  1430  000220  22DA               	addwfc	fsr2h,f,c
  1431  000222  50DF               	movf	indf2,w,c
  1432  000224  6E20               	movwf	(??_comandos+3)^0,c
  1433  000226  5020               	movf	(??_comandos+3)^0,w,c
  1434  000228  0D0A               	mullw	10
  1435  00022A  50F3               	movf	243,w,c
  1436  00022C  261E               	addwf	(??_comandos+1)^0,f,c
  1437  00022E  50F4               	movf	244,w,c
  1438  000230  221F               	addwfc	(??_comandos+2)^0,f,c
  1439  000232  EE20 F007          	lfsr	2,7
  1440  000236  501B               	movf	comandos@comando^0,w,c
  1441  000238  26D9               	addwf	fsr2l,f,c
  1442  00023A  501C               	movf	(comandos@comando+1)^0,w,c
  1443  00023C  22DA               	addwfc	fsr2h,f,c
  1444  00023E  50DF               	movf	indf2,w,c
  1445  000240  6E21               	movwf	(??_comandos+4)^0,c
  1446  000242  5021               	movf	(??_comandos+4)^0,w,c
  1447  000244  261E               	addwf	(??_comandos+1)^0,f,c
  1448  000246  0E00               	movlw	0
  1449  000248  221F               	addwfc	(??_comandos+2)^0,f,c
  1450  00024A  0E30               	movlw	48
  1451  00024C  241E               	addwf	(??_comandos+1)^0,w,c
  1452  00024E  6E4E               	movwf	_nvalory^0,c
  1453  000250  0EEB               	movlw	235
  1454  000252  201F               	addwfc	(??_comandos+2)^0,w,c
  1455  000254  6E4F               	movwf	(_nvalory+1)^0,c
  1456  000256                     
  1457                           ;Comandos.c: 128:                                     coordinateRefreshX(nvalorx);
  1458  000256  C050  F015         	movff	_nvalorx,coordinateRefreshX@newX
  1459  00025A  C051  F016         	movff	_nvalorx+1,coordinateRefreshX@newX+1
  1460  00025E  ECDE  F004         	call	_coordinateRefreshX	;wreg free
  1461  000262                     
  1462                           ;Comandos.c: 129:                                     coordinateRefreshY(nvalory);
  1463  000262  C04E  F015         	movff	_nvalory,coordinateRefreshY@newY
  1464  000266  C04F  F016         	movff	_nvalory+1,coordinateRefreshY@newY+1
  1465  00026A  EC6B  F004         	call	_coordinateRefreshY	;wreg free
  1466                           
  1467                           ;Comandos.c: 130:                                     Completo();
  1468  00026E  EC3B  F007         	call	_Completo	;wreg free
  1469                           
  1470                           ;Comandos.c: 131:                                 }
  1471  000272  EF66  F003         	goto	l189
  1472  000276                     l1964:
  1473                           
  1474                           ;Comandos.c: 133:                                     invalidCoordinate();
  1475  000276  ECC9  F006         	call	_invalidCoordinate	;wreg free
  1476  00027A  EF66  F003         	goto	l189
  1477  00027E                     l1978:
  1478  00027E  C01B  FFD9         	movff	comandos@comando,fsr2l
  1479  000282  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1480  000286  0E47               	movlw	71
  1481  000288  18DE               	xorwf	postinc2,w,c
  1482  00028A  A4D8               	btfss	status,2,c
  1483  00028C  EF4A  F001         	goto	u1311
  1484  000290  EF4C  F001         	goto	u1310
  1485  000294                     u1311:
  1486  000294  EFE5  F001         	goto	l2034
  1487  000298                     u1310:
  1488  000298                     
  1489                           ;Comandos.c: 162:         if (comando[1]=='O'){
  1490  000298  EE20 F001          	lfsr	2,1
  1491  00029C  501B               	movf	comandos@comando^0,w,c
  1492  00029E  26D9               	addwf	fsr2l,f,c
  1493  0002A0  501C               	movf	(comandos@comando+1)^0,w,c
  1494  0002A2  22DA               	addwfc	fsr2h,f,c
  1495  0002A4  0E4F               	movlw	79
  1496  0002A6  18DE               	xorwf	postinc2,w,c
  1497  0002A8  A4D8               	btfss	status,2,c
  1498  0002AA  EF59  F001         	goto	u1321
  1499  0002AE  EF5B  F001         	goto	u1320
  1500  0002B2                     u1321:
  1501  0002B2  EFE1  F001         	goto	l2020
  1502  0002B6                     u1320:
  1503  0002B6                     
  1504                           ;Comandos.c: 163:             if (comando[2]=='T'){
  1505  0002B6  EE20 F002          	lfsr	2,2
  1506  0002BA  501B               	movf	comandos@comando^0,w,c
  1507  0002BC  26D9               	addwf	fsr2l,f,c
  1508  0002BE  501C               	movf	(comandos@comando+1)^0,w,c
  1509  0002C0  22DA               	addwfc	fsr2h,f,c
  1510  0002C2  0E54               	movlw	84
  1511  0002C4  18DE               	xorwf	postinc2,w,c
  1512  0002C6  A4D8               	btfss	status,2,c
  1513  0002C8  EF68  F001         	goto	u1331
  1514  0002CC  EF6A  F001         	goto	u1330
  1515  0002D0                     u1331:
  1516  0002D0  EFE1  F001         	goto	l2020
  1517  0002D4                     u1330:
  1518  0002D4                     
  1519                           ;Comandos.c: 164:                 if (comando[3]=='O'){
  1520  0002D4  EE20 F003          	lfsr	2,3
  1521  0002D8  501B               	movf	comandos@comando^0,w,c
  1522  0002DA  26D9               	addwf	fsr2l,f,c
  1523  0002DC  501C               	movf	(comandos@comando+1)^0,w,c
  1524  0002DE  22DA               	addwfc	fsr2h,f,c
  1525  0002E0  0E4F               	movlw	79
  1526  0002E2  18DE               	xorwf	postinc2,w,c
  1527  0002E4  A4D8               	btfss	status,2,c
  1528  0002E6  EF77  F001         	goto	u1341
  1529  0002EA  EF79  F001         	goto	u1340
  1530  0002EE                     u1341:
  1531  0002EE  EFE1  F001         	goto	l2020
  1532  0002F2                     u1340:
  1533  0002F2                     
  1534                           ;Comandos.c: 165:                     if (comando[4]=='H'){
  1535  0002F2  EE20 F004          	lfsr	2,4
  1536  0002F6  501B               	movf	comandos@comando^0,w,c
  1537  0002F8  26D9               	addwf	fsr2l,f,c
  1538  0002FA  501C               	movf	(comandos@comando+1)^0,w,c
  1539  0002FC  22DA               	addwfc	fsr2h,f,c
  1540  0002FE  0E48               	movlw	72
  1541  000300  18DE               	xorwf	postinc2,w,c
  1542  000302  A4D8               	btfss	status,2,c
  1543  000304  EF86  F001         	goto	u1351
  1544  000308  EF88  F001         	goto	u1350
  1545  00030C                     u1351:
  1546  00030C  EFE1  F001         	goto	l2020
  1547  000310                     u1350:
  1548  000310                     
  1549                           ;Comandos.c: 166:                         if (comando[5]=='O'){
  1550  000310  EE20 F005          	lfsr	2,5
  1551  000314  501B               	movf	comandos@comando^0,w,c
  1552  000316  26D9               	addwf	fsr2l,f,c
  1553  000318  501C               	movf	(comandos@comando+1)^0,w,c
  1554  00031A  22DA               	addwfc	fsr2h,f,c
  1555  00031C  0E4F               	movlw	79
  1556  00031E  18DE               	xorwf	postinc2,w,c
  1557  000320  A4D8               	btfss	status,2,c
  1558  000322  EF95  F001         	goto	u1361
  1559  000326  EF97  F001         	goto	u1360
  1560  00032A                     u1361:
  1561  00032A  EFE1  F001         	goto	l2020
  1562  00032E                     u1360:
  1563  00032E                     
  1564                           ;Comandos.c: 167:                             if (comando[6]=='M'){
  1565  00032E  EE20 F006          	lfsr	2,6
  1566  000332  501B               	movf	comandos@comando^0,w,c
  1567  000334  26D9               	addwf	fsr2l,f,c
  1568  000336  501C               	movf	(comandos@comando+1)^0,w,c
  1569  000338  22DA               	addwfc	fsr2h,f,c
  1570  00033A  0E4D               	movlw	77
  1571  00033C  18DE               	xorwf	postinc2,w,c
  1572  00033E  A4D8               	btfss	status,2,c
  1573  000340  EFA4  F001         	goto	u1371
  1574  000344  EFA6  F001         	goto	u1370
  1575  000348                     u1371:
  1576  000348  EFE1  F001         	goto	l2020
  1577  00034C                     u1370:
  1578  00034C                     
  1579                           ;Comandos.c: 168:                                 if (comando[7]=='E'){
  1580  00034C  EE20 F007          	lfsr	2,7
  1581  000350  501B               	movf	comandos@comando^0,w,c
  1582  000352  26D9               	addwf	fsr2l,f,c
  1583  000354  501C               	movf	(comandos@comando+1)^0,w,c
  1584  000356  22DA               	addwfc	fsr2h,f,c
  1585  000358  0E45               	movlw	69
  1586  00035A  18DE               	xorwf	postinc2,w,c
  1587  00035C  A4D8               	btfss	status,2,c
  1588  00035E  EFB3  F001         	goto	u1381
  1589  000362  EFB5  F001         	goto	u1380
  1590  000366                     u1381:
  1591  000366  EFE1  F001         	goto	l2020
  1592  00036A                     u1380:
  1593  00036A                     
  1594                           ;Comandos.c: 169:                                     Ejecutandose();
  1595  00036A  EC15  F007         	call	_Ejecutandose	;wreg free
  1596  00036E                     
  1597                           ;Comandos.c: 170:                                      PORTDbits.RD0=1;
  1598  00036E  8083               	bsf	131,0,c	;volatile
  1599  000370                     
  1600                           ;Comandos.c: 171:                                      PORTDbits.RD1=0;
  1601  000370  9283               	bcf	131,1,c	;volatile
  1602  000372                     
  1603                           ;Comandos.c: 172:                                      PORTDbits.RD3=0;
  1604  000372  9683               	bcf	131,3,c	;volatile
  1605  000374                     
  1606                           ;Comandos.c: 173:                                      PORTDbits.RD2=0;
  1607  000374  9483               	bcf	131,2,c	;volatile
  1608  000376                     l127:
  1609  000376  A281               	btfss	129,1,c	;volatile
  1610  000378  EFC0  F001         	goto	u1391
  1611  00037C  EFC2  F001         	goto	u1390
  1612  000380                     u1391:
  1613  000380  EFBB  F001         	goto	l127
  1614  000384                     u1390:
  1615  000384                     
  1616                           ;Comandos.c: 175:                                      PORTDbits.RD3=1;
  1617  000384  8683               	bsf	131,3,c	;volatile
  1618                           
  1619                           ;Comandos.c: 176:                                      PORTDbits.RD2=1;
  1620  000386  8483               	bsf	131,2,c	;volatile
  1621  000388                     
  1622                           ;Comandos.c: 177:                                      xLimit();
  1623  000388  EC84  F007         	call	_xLimit	;wreg free
  1624  00038C                     
  1625                           ;Comandos.c: 178:                                      PORTDbits.RD0=1;
  1626  00038C  8083               	bsf	131,0,c	;volatile
  1627  00038E                     
  1628                           ;Comandos.c: 179:                                      PORTDbits.RD1=1;
  1629  00038E  8283               	bsf	131,1,c	;volatile
  1630  000390                     
  1631                           ;Comandos.c: 180:                                      PORTDbits.RD3=0;
  1632  000390  9683               	bcf	131,3,c	;volatile
  1633  000392                     
  1634                           ;Comandos.c: 181:                                      PORTDbits.RD2=0;
  1635  000392  9483               	bcf	131,2,c	;volatile
  1636  000394                     l130:
  1637  000394  A081               	btfss	129,0,c	;volatile
  1638  000396  EFCF  F001         	goto	u1401
  1639  00039A  EFD1  F001         	goto	u1400
  1640  00039E                     u1401:
  1641  00039E  EFCA  F001         	goto	l130
  1642  0003A2                     u1400:
  1643  0003A2                     
  1644                           ;Comandos.c: 183:                                      PORTDbits.RD3=1;
  1645  0003A2  8683               	bsf	131,3,c	;volatile
  1646                           
  1647                           ;Comandos.c: 184:                                      PORTDbits.RD2=1;
  1648  0003A4  8483               	bsf	131,2,c	;volatile
  1649  0003A6                     
  1650                           ;Comandos.c: 185:                                      yLimit();
  1651  0003A6  EC61  F007         	call	_yLimit	;wreg free
  1652  0003AA                     
  1653                           ;Comandos.c: 186:                                      x=0;
  1654  0003AA  0E00               	movlw	0
  1655  0003AC  6E4D               	movwf	(_x+1)^0,c
  1656  0003AE  0E00               	movlw	0
  1657  0003B0  6E4C               	movwf	_x^0,c
  1658  0003B2                     
  1659                           ;Comandos.c: 187:                                      y=0;
  1660  0003B2  0E00               	movlw	0
  1661  0003B4  6E4B               	movwf	(_y+1)^0,c
  1662  0003B6  0E00               	movlw	0
  1663  0003B8  6E4A               	movwf	_y^0,c
  1664                           
  1665                           ;Comandos.c: 188:                                      Completo();
  1666  0003BA  EC3B  F007         	call	_Completo	;wreg free
  1667                           
  1668                           ;Comandos.c: 189:                                 }
  1669  0003BE  EF66  F003         	goto	l189
  1670  0003C2                     l2020:
  1671                           
  1672                           ;Comandos.c: 191:                                     Error();
  1673  0003C2  ECEF  F006         	call	_Error	;wreg free
  1674  0003C6  EF66  F003         	goto	l189
  1675  0003CA                     l2034:
  1676  0003CA  C01B  FFD9         	movff	comandos@comando,fsr2l
  1677  0003CE  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1678  0003D2  0E53               	movlw	83
  1679  0003D4  18DE               	xorwf	postinc2,w,c
  1680  0003D6  A4D8               	btfss	status,2,c
  1681  0003D8  EFF0  F001         	goto	u1411
  1682  0003DC  EFF2  F001         	goto	u1410
  1683  0003E0                     u1411:
  1684  0003E0  EF62  F002         	goto	l2068
  1685  0003E4                     u1410:
  1686  0003E4                     
  1687                           ;Comandos.c: 220:         if (comando[1]=='T'){
  1688  0003E4  EE20 F001          	lfsr	2,1
  1689  0003E8  501B               	movf	comandos@comando^0,w,c
  1690  0003EA  26D9               	addwf	fsr2l,f,c
  1691  0003EC  501C               	movf	(comandos@comando+1)^0,w,c
  1692  0003EE  22DA               	addwfc	fsr2h,f,c
  1693  0003F0  0E54               	movlw	84
  1694  0003F2  18DE               	xorwf	postinc2,w,c
  1695  0003F4  A4D8               	btfss	status,2,c
  1696  0003F6  EFFF  F001         	goto	u1421
  1697  0003FA  EF01  F002         	goto	u1420
  1698  0003FE                     u1421:
  1699  0003FE  EFE1  F001         	goto	l2020
  1700  000402                     u1420:
  1701  000402                     
  1702                           ;Comandos.c: 221:             if (comando[2]=='C'){
  1703  000402  EE20 F002          	lfsr	2,2
  1704  000406  501B               	movf	comandos@comando^0,w,c
  1705  000408  26D9               	addwf	fsr2l,f,c
  1706  00040A  501C               	movf	(comandos@comando+1)^0,w,c
  1707  00040C  22DA               	addwfc	fsr2h,f,c
  1708  00040E  0E43               	movlw	67
  1709  000410  18DE               	xorwf	postinc2,w,c
  1710  000412  A4D8               	btfss	status,2,c
  1711  000414  EF0E  F002         	goto	u1431
  1712  000418  EF10  F002         	goto	u1430
  1713  00041C                     u1431:
  1714  00041C  EFE1  F001         	goto	l2020
  1715  000420                     u1430:
  1716  000420                     
  1717                           ;Comandos.c: 222:                 if (comando[3]=='T'){
  1718  000420  EE20 F003          	lfsr	2,3
  1719  000424  501B               	movf	comandos@comando^0,w,c
  1720  000426  26D9               	addwf	fsr2l,f,c
  1721  000428  501C               	movf	(comandos@comando+1)^0,w,c
  1722  00042A  22DA               	addwfc	fsr2h,f,c
  1723  00042C  0E54               	movlw	84
  1724  00042E  18DE               	xorwf	postinc2,w,c
  1725  000430  A4D8               	btfss	status,2,c
  1726  000432  EF1D  F002         	goto	u1441
  1727  000436  EF1F  F002         	goto	u1440
  1728  00043A                     u1441:
  1729  00043A  EFE1  F001         	goto	l2020
  1730  00043E                     u1440:
  1731  00043E                     
  1732                           ;Comandos.c: 223:                     if (comando[4]=='O'){
  1733  00043E  EE20 F004          	lfsr	2,4
  1734  000442  501B               	movf	comandos@comando^0,w,c
  1735  000444  26D9               	addwf	fsr2l,f,c
  1736  000446  501C               	movf	(comandos@comando+1)^0,w,c
  1737  000448  22DA               	addwfc	fsr2h,f,c
  1738  00044A  0E4F               	movlw	79
  1739  00044C  18DE               	xorwf	postinc2,w,c
  1740  00044E  A4D8               	btfss	status,2,c
  1741  000450  EF2C  F002         	goto	u1451
  1742  000454  EF2E  F002         	goto	u1450
  1743  000458                     u1451:
  1744  000458  EFE1  F001         	goto	l2020
  1745  00045C                     u1450:
  1746  00045C                     
  1747                           ;Comandos.c: 224:                         if (comando[5]=='U'){
  1748  00045C  EE20 F005          	lfsr	2,5
  1749  000460  501B               	movf	comandos@comando^0,w,c
  1750  000462  26D9               	addwf	fsr2l,f,c
  1751  000464  501C               	movf	(comandos@comando+1)^0,w,c
  1752  000466  22DA               	addwfc	fsr2h,f,c
  1753  000468  0E55               	movlw	85
  1754  00046A  18DE               	xorwf	postinc2,w,c
  1755  00046C  A4D8               	btfss	status,2,c
  1756  00046E  EF3B  F002         	goto	u1461
  1757  000472  EF3D  F002         	goto	u1460
  1758  000476                     u1461:
  1759  000476  EFE1  F001         	goto	l2020
  1760  00047A                     u1460:
  1761  00047A                     
  1762                           ;Comandos.c: 225:                             if (comando[6]=='C'){
  1763  00047A  EE20 F006          	lfsr	2,6
  1764  00047E  501B               	movf	comandos@comando^0,w,c
  1765  000480  26D9               	addwf	fsr2l,f,c
  1766  000482  501C               	movf	(comandos@comando+1)^0,w,c
  1767  000484  22DA               	addwfc	fsr2h,f,c
  1768  000486  0E43               	movlw	67
  1769  000488  18DE               	xorwf	postinc2,w,c
  1770  00048A  A4D8               	btfss	status,2,c
  1771  00048C  EF4A  F002         	goto	u1471
  1772  000490  EF4C  F002         	goto	u1470
  1773  000494                     u1471:
  1774  000494  EFE1  F001         	goto	l2020
  1775  000498                     u1470:
  1776  000498                     
  1777                           ;Comandos.c: 226:                                 if (comando[7]=='H'){
  1778  000498  EE20 F007          	lfsr	2,7
  1779  00049C  501B               	movf	comandos@comando^0,w,c
  1780  00049E  26D9               	addwf	fsr2l,f,c
  1781  0004A0  501C               	movf	(comandos@comando+1)^0,w,c
  1782  0004A2  22DA               	addwfc	fsr2h,f,c
  1783  0004A4  0E48               	movlw	72
  1784  0004A6  18DE               	xorwf	postinc2,w,c
  1785  0004A8  A4D8               	btfss	status,2,c
  1786  0004AA  EF59  F002         	goto	u1481
  1787  0004AE  EF5B  F002         	goto	u1480
  1788  0004B2                     u1481:
  1789  0004B2  EFE1  F001         	goto	l2020
  1790  0004B6                     u1480:
  1791  0004B6                     
  1792                           ;Comandos.c: 227:                                     Ejecutandose();
  1793  0004B6  EC15  F007         	call	_Ejecutandose	;wreg free
  1794  0004BA                     
  1795                           ;Comandos.c: 228:                                     PORTDbits.RD7=1;
  1796  0004BA  8E83               	bsf	131,7,c	;volatile
  1797                           
  1798                           ;Comandos.c: 229:                                     Completo();
  1799  0004BC  EC3B  F007         	call	_Completo	;wreg free
  1800                           
  1801                           ;Comandos.c: 230:                                 }
  1802  0004C0  EF66  F003         	goto	l189
  1803  0004C4                     l2068:
  1804  0004C4  C01B  FFD9         	movff	comandos@comando,fsr2l
  1805  0004C8  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1806  0004CC  0E4D               	movlw	77
  1807  0004CE  18DE               	xorwf	postinc2,w,c
  1808  0004D0  A4D8               	btfss	status,2,c
  1809  0004D2  EF6D  F002         	goto	u1491
  1810  0004D6  EF6F  F002         	goto	u1490
  1811  0004DA                     u1491:
  1812  0004DA  EFEB  F002         	goto	l2108
  1813  0004DE                     u1490:
  1814  0004DE                     
  1815                           ;Comandos.c: 263:         if (comando[1]=='A'){
  1816  0004DE  EE20 F001          	lfsr	2,1
  1817  0004E2  501B               	movf	comandos@comando^0,w,c
  1818  0004E4  26D9               	addwf	fsr2l,f,c
  1819  0004E6  501C               	movf	(comandos@comando+1)^0,w,c
  1820  0004E8  22DA               	addwfc	fsr2h,f,c
  1821  0004EA  0E41               	movlw	65
  1822  0004EC  18DE               	xorwf	postinc2,w,c
  1823  0004EE  A4D8               	btfss	status,2,c
  1824  0004F0  EF7C  F002         	goto	u1501
  1825  0004F4  EF7E  F002         	goto	u1500
  1826  0004F8                     u1501:
  1827  0004F8  EFE1  F001         	goto	l2020
  1828  0004FC                     u1500:
  1829  0004FC                     
  1830                           ;Comandos.c: 264:             if (comando[2]=='K'){
  1831  0004FC  EE20 F002          	lfsr	2,2
  1832  000500  501B               	movf	comandos@comando^0,w,c
  1833  000502  26D9               	addwf	fsr2l,f,c
  1834  000504  501C               	movf	(comandos@comando+1)^0,w,c
  1835  000506  22DA               	addwfc	fsr2h,f,c
  1836  000508  0E4B               	movlw	75
  1837  00050A  18DE               	xorwf	postinc2,w,c
  1838  00050C  A4D8               	btfss	status,2,c
  1839  00050E  EF8B  F002         	goto	u1511
  1840  000512  EF8D  F002         	goto	u1510
  1841  000516                     u1511:
  1842  000516  EFE1  F001         	goto	l2020
  1843  00051A                     u1510:
  1844  00051A                     
  1845                           ;Comandos.c: 265:                 if (comando[3]=='E'){
  1846  00051A  EE20 F003          	lfsr	2,3
  1847  00051E  501B               	movf	comandos@comando^0,w,c
  1848  000520  26D9               	addwf	fsr2l,f,c
  1849  000522  501C               	movf	(comandos@comando+1)^0,w,c
  1850  000524  22DA               	addwfc	fsr2h,f,c
  1851  000526  0E45               	movlw	69
  1852  000528  18DE               	xorwf	postinc2,w,c
  1853  00052A  A4D8               	btfss	status,2,c
  1854  00052C  EF9A  F002         	goto	u1521
  1855  000530  EF9C  F002         	goto	u1520
  1856  000534                     u1521:
  1857  000534  EFE1  F001         	goto	l2020
  1858  000538                     u1520:
  1859  000538                     
  1860                           ;Comandos.c: 266:                     if (comando[4]=='A'){
  1861  000538  EE20 F004          	lfsr	2,4
  1862  00053C  501B               	movf	comandos@comando^0,w,c
  1863  00053E  26D9               	addwf	fsr2l,f,c
  1864  000540  501C               	movf	(comandos@comando+1)^0,w,c
  1865  000542  22DA               	addwfc	fsr2h,f,c
  1866  000544  0E41               	movlw	65
  1867  000546  18DE               	xorwf	postinc2,w,c
  1868  000548  A4D8               	btfss	status,2,c
  1869  00054A  EFA9  F002         	goto	u1531
  1870  00054E  EFAB  F002         	goto	u1530
  1871  000552                     u1531:
  1872  000552  EFE1  F001         	goto	l2020
  1873  000556                     u1530:
  1874  000556                     
  1875                           ;Comandos.c: 267:                         if (comando[5]=='T'){
  1876  000556  EE20 F005          	lfsr	2,5
  1877  00055A  501B               	movf	comandos@comando^0,w,c
  1878  00055C  26D9               	addwf	fsr2l,f,c
  1879  00055E  501C               	movf	(comandos@comando+1)^0,w,c
  1880  000560  22DA               	addwfc	fsr2h,f,c
  1881  000562  0E54               	movlw	84
  1882  000564  18DE               	xorwf	postinc2,w,c
  1883  000566  A4D8               	btfss	status,2,c
  1884  000568  EFB8  F002         	goto	u1541
  1885  00056C  EFBA  F002         	goto	u1540
  1886  000570                     u1541:
  1887  000570  EFE1  F001         	goto	l2020
  1888  000574                     u1540:
  1889  000574                     
  1890                           ;Comandos.c: 268:                             if (comando[6]=='A'){
  1891  000574  EE20 F006          	lfsr	2,6
  1892  000578  501B               	movf	comandos@comando^0,w,c
  1893  00057A  26D9               	addwf	fsr2l,f,c
  1894  00057C  501C               	movf	(comandos@comando+1)^0,w,c
  1895  00057E  22DA               	addwfc	fsr2h,f,c
  1896  000580  0E41               	movlw	65
  1897  000582  18DE               	xorwf	postinc2,w,c
  1898  000584  A4D8               	btfss	status,2,c
  1899  000586  EFC7  F002         	goto	u1551
  1900  00058A  EFC9  F002         	goto	u1550
  1901  00058E                     u1551:
  1902  00058E  EFE1  F001         	goto	l2020
  1903  000592                     u1550:
  1904  000592                     
  1905                           ;Comandos.c: 269:                                 if (comando[7]=='P'){
  1906  000592  EE20 F007          	lfsr	2,7
  1907  000596  501B               	movf	comandos@comando^0,w,c
  1908  000598  26D9               	addwf	fsr2l,f,c
  1909  00059A  501C               	movf	(comandos@comando+1)^0,w,c
  1910  00059C  22DA               	addwfc	fsr2h,f,c
  1911  00059E  0E50               	movlw	80
  1912  0005A0  18DE               	xorwf	postinc2,w,c
  1913  0005A2  A4D8               	btfss	status,2,c
  1914  0005A4  EFD6  F002         	goto	u1561
  1915  0005A8  EFD8  F002         	goto	u1560
  1916  0005AC                     u1561:
  1917  0005AC  EFE1  F001         	goto	l2020
  1918  0005B0                     u1560:
  1919  0005B0                     
  1920                           ;Comandos.c: 270:                                     Ejecutandose();
  1921  0005B0  EC15  F007         	call	_Ejecutandose	;wreg free
  1922  0005B4                     
  1923                           ;Comandos.c: 271:                                     PORTDbits.RD7=1;
  1924  0005B4  8E83               	bsf	131,7,c	;volatile
  1925  0005B6                     
  1926                           ;Comandos.c: 272:                                     _delay((unsigned long)((1000)*(800
      +                          0000L/4000.0)));
  1927  0005B6  0E0B               	movlw	11
  1928  0005B8  6E1E               	movwf	(??_comandos+1)^0,c
  1929  0005BA  0E26               	movlw	38
  1930  0005BC  6E1D               	movwf	??_comandos^0,c
  1931  0005BE  0E5E               	movlw	94
  1932  0005C0                     u1747:
  1933  0005C0  2EE8               	decfsz	wreg,f,c
  1934  0005C2  D7FE               	bra	u1747
  1935  0005C4  2E1D               	decfsz	??_comandos^0,f,c
  1936  0005C6  D7FC               	bra	u1747
  1937  0005C8  2E1E               	decfsz	(??_comandos+1)^0,f,c
  1938  0005CA  D7FA               	bra	u1747
  1939  0005CC                     
  1940                           ;Comandos.c: 273:                                     PORTDbits.RD7=0;
  1941  0005CC  9E83               	bcf	131,7,c	;volatile
  1942  0005CE                     
  1943                           ;Comandos.c: 275:                                     Completo();
  1944  0005CE  EC3B  F007         	call	_Completo	;wreg free
  1945                           
  1946                           ;Comandos.c: 276:                                 }
  1947  0005D2  EF66  F003         	goto	l189
  1948  0005D6                     l2108:
  1949  0005D6  C01B  FFD9         	movff	comandos@comando,fsr2l
  1950  0005DA  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1951  0005DE  0E54               	movlw	84
  1952  0005E0  18DE               	xorwf	postinc2,w,c
  1953  0005E2  A4D8               	btfss	status,2,c
  1954  0005E4  EFF6  F002         	goto	u1571
  1955  0005E8  EFF8  F002         	goto	u1570
  1956  0005EC                     u1571:
  1957  0005EC  EFE1  F001         	goto	l2020
  1958  0005F0                     u1570:
  1959  0005F0                     
  1960                           ;Comandos.c: 309:         if (comando[1]=='A'){
  1961  0005F0  EE20 F001          	lfsr	2,1
  1962  0005F4  501B               	movf	comandos@comando^0,w,c
  1963  0005F6  26D9               	addwf	fsr2l,f,c
  1964  0005F8  501C               	movf	(comandos@comando+1)^0,w,c
  1965  0005FA  22DA               	addwfc	fsr2h,f,c
  1966  0005FC  0E41               	movlw	65
  1967  0005FE  18DE               	xorwf	postinc2,w,c
  1968  000600  A4D8               	btfss	status,2,c
  1969  000602  EF05  F003         	goto	u1581
  1970  000606  EF07  F003         	goto	u1580
  1971  00060A                     u1581:
  1972  00060A  EFE1  F001         	goto	l2020
  1973  00060E                     u1580:
  1974  00060E                     
  1975                           ;Comandos.c: 310:             if (comando[2]=='K'){
  1976  00060E  EE20 F002          	lfsr	2,2
  1977  000612  501B               	movf	comandos@comando^0,w,c
  1978  000614  26D9               	addwf	fsr2l,f,c
  1979  000616  501C               	movf	(comandos@comando+1)^0,w,c
  1980  000618  22DA               	addwfc	fsr2h,f,c
  1981  00061A  0E4B               	movlw	75
  1982  00061C  18DE               	xorwf	postinc2,w,c
  1983  00061E  A4D8               	btfss	status,2,c
  1984  000620  EF14  F003         	goto	u1591
  1985  000624  EF16  F003         	goto	u1590
  1986  000628                     u1591:
  1987  000628  EFE1  F001         	goto	l2020
  1988  00062C                     u1590:
  1989  00062C                     
  1990                           ;Comandos.c: 311:                 if (comando[3]=='E'){
  1991  00062C  EE20 F003          	lfsr	2,3
  1992  000630  501B               	movf	comandos@comando^0,w,c
  1993  000632  26D9               	addwf	fsr2l,f,c
  1994  000634  501C               	movf	(comandos@comando+1)^0,w,c
  1995  000636  22DA               	addwfc	fsr2h,f,c
  1996  000638  0E45               	movlw	69
  1997  00063A  18DE               	xorwf	postinc2,w,c
  1998  00063C  A4D8               	btfss	status,2,c
  1999  00063E  EF23  F003         	goto	u1601
  2000  000642  EF25  F003         	goto	u1600
  2001  000646                     u1601:
  2002  000646  EFE1  F001         	goto	l2020
  2003  00064A                     u1600:
  2004  00064A                     
  2005                           ;Comandos.c: 312:                     if (comando[4]=='L'){
  2006  00064A  EE20 F004          	lfsr	2,4
  2007  00064E  501B               	movf	comandos@comando^0,w,c
  2008  000650  26D9               	addwf	fsr2l,f,c
  2009  000652  501C               	movf	(comandos@comando+1)^0,w,c
  2010  000654  22DA               	addwfc	fsr2h,f,c
  2011  000656  0E4C               	movlw	76
  2012  000658  18DE               	xorwf	postinc2,w,c
  2013  00065A  A4D8               	btfss	status,2,c
  2014  00065C  EF32  F003         	goto	u1611
  2015  000660  EF34  F003         	goto	u1610
  2016  000664                     u1611:
  2017  000664  EFE1  F001         	goto	l2020
  2018  000668                     u1610:
  2019  000668                     
  2020                           ;Comandos.c: 313:                         if (comando[5]=='I'){
  2021  000668  EE20 F005          	lfsr	2,5
  2022  00066C  501B               	movf	comandos@comando^0,w,c
  2023  00066E  26D9               	addwf	fsr2l,f,c
  2024  000670  501C               	movf	(comandos@comando+1)^0,w,c
  2025  000672  22DA               	addwfc	fsr2h,f,c
  2026  000674  0E49               	movlw	73
  2027  000676  18DE               	xorwf	postinc2,w,c
  2028  000678  A4D8               	btfss	status,2,c
  2029  00067A  EF41  F003         	goto	u1621
  2030  00067E  EF43  F003         	goto	u1620
  2031  000682                     u1621:
  2032  000682  EFE1  F001         	goto	l2020
  2033  000686                     u1620:
  2034  000686                     
  2035                           ;Comandos.c: 314:                             if (comando[6]=='F'){
  2036  000686  EE20 F006          	lfsr	2,6
  2037  00068A  501B               	movf	comandos@comando^0,w,c
  2038  00068C  26D9               	addwf	fsr2l,f,c
  2039  00068E  501C               	movf	(comandos@comando+1)^0,w,c
  2040  000690  22DA               	addwfc	fsr2h,f,c
  2041  000692  0E46               	movlw	70
  2042  000694  18DE               	xorwf	postinc2,w,c
  2043  000696  A4D8               	btfss	status,2,c
  2044  000698  EF50  F003         	goto	u1631
  2045  00069C  EF52  F003         	goto	u1630
  2046  0006A0                     u1631:
  2047  0006A0  EFE1  F001         	goto	l2020
  2048  0006A4                     u1630:
  2049  0006A4                     
  2050                           ;Comandos.c: 315:                                 if (comando[7]=='T'){
  2051  0006A4  EE20 F007          	lfsr	2,7
  2052  0006A8  501B               	movf	comandos@comando^0,w,c
  2053  0006AA  26D9               	addwf	fsr2l,f,c
  2054  0006AC  501C               	movf	(comandos@comando+1)^0,w,c
  2055  0006AE  22DA               	addwfc	fsr2h,f,c
  2056  0006B0  0E54               	movlw	84
  2057  0006B2  18DE               	xorwf	postinc2,w,c
  2058  0006B4  A4D8               	btfss	status,2,c
  2059  0006B6  EF5F  F003         	goto	u1641
  2060  0006BA  EF61  F003         	goto	u1640
  2061  0006BE                     u1641:
  2062  0006BE  EFE1  F001         	goto	l2020
  2063  0006C2                     u1640:
  2064  0006C2                     
  2065                           ;Comandos.c: 316:                                     Ejecutandose();
  2066  0006C2  EC15  F007         	call	_Ejecutandose	;wreg free
  2067  0006C6                     
  2068                           ;Comandos.c: 317:                                     PORTDbits.RD7=0;
  2069  0006C6  9E83               	bcf	131,7,c	;volatile
  2070                           
  2071                           ;Comandos.c: 318:                                     Completo();
  2072  0006C8  EC3B  F007         	call	_Completo	;wreg free
  2073  0006CC                     l189:
  2074  0006CC  0012               	return		;funcret
  2075  0006CE                     __end_of_comandos:
  2076                           	opt callstack 0
  2077                           
  2078 ;; *************** function _yLimit *****************
  2079 ;; Defined at:
  2080 ;;		line 26 in file "Comandos.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  i               2   15[COMRAM] int 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0
  2095 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:        2 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    4
  2101 ;; This function calls:
  2102 ;;		_USART_Tx
  2103 ;;		_strlen
  2104 ;; This function is called by:
  2105 ;;		_comandos
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text5
  2111  000EC2                     __ptext5:
  2112                           	opt callstack 0
  2113  000EC2                     _yLimit:
  2114                           	opt callstack 26
  2115  000EC2                     
  2116                           ;Comandos.c: 27:     for(int i=0; i < strlen(yl); i++){
  2117  000EC2  0E00               	movlw	0
  2118  000EC4  6E11               	movwf	(yLimit@i+1)^0,c
  2119  000EC6  0E00               	movlw	0
  2120  000EC8  6E10               	movwf	yLimit@i^0,c
  2121  000ECA  EF72  F007         	goto	l1782
  2122  000ECE                     l1778:
  2123                           
  2124                           ;Comandos.c: 28:     USART_Tx(yl[i]);
  2125  000ECE  0EBE               	movlw	low _yl
  2126  000ED0  2410               	addwf	yLimit@i^0,w,c
  2127  000ED2  6ED9               	movwf	fsr2l,c
  2128  000ED4  0E00               	movlw	high _yl
  2129  000ED6  2011               	addwfc	(yLimit@i+1)^0,w,c
  2130  000ED8  6EDA               	movwf	fsr2h,c
  2131  000EDA  50DF               	movf	indf2,w,c
  2132  000EDC  EC4E  F008         	call	_USART_Tx
  2133  000EE0                     
  2134                           ;Comandos.c: 29:     } return;
  2135  000EE0  4A10               	infsnz	yLimit@i^0,f,c
  2136  000EE2  2A11               	incf	(yLimit@i+1)^0,f,c
  2137  000EE4                     l1782:
  2138  000EE4  0EBE               	movlw	low _yl
  2139  000EE6  6E0C               	movwf	strlen@s^0,c
  2140  000EE8  0E00               	movlw	high _yl
  2141  000EEA  6E0D               	movwf	(strlen@s+1)^0,c
  2142  000EEC  ECC4  F007         	call	_strlen	;wreg free
  2143  000EF0  500C               	movf	?_strlen^0,w,c
  2144  000EF2  5C10               	subwf	yLimit@i^0,w,c
  2145  000EF4  500D               	movf	(?_strlen+1)^0,w,c
  2146  000EF6  5811               	subwfb	(yLimit@i+1)^0,w,c
  2147  000EF8  A0D8               	btfss	status,0,c
  2148  000EFA  EF81  F007         	goto	u971
  2149  000EFE  EF83  F007         	goto	u970
  2150  000F02                     u971:
  2151  000F02  EF67  F007         	goto	l1778
  2152  000F06                     u970:
  2153  000F06  0012               	return		;funcret
  2154  000F08                     __end_of_yLimit:
  2155                           	opt callstack 0
  2156                           
  2157 ;; *************** function _xLimit *****************
  2158 ;; Defined at:
  2159 ;;		line 19 in file "Comandos.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  i               2   15[COMRAM] int 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    4
  2180 ;; This function calls:
  2181 ;;		_USART_Tx
  2182 ;;		_strlen
  2183 ;; This function is called by:
  2184 ;;		_comandos
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text6
  2190  000F08                     __ptext6:
  2191                           	opt callstack 0
  2192  000F08                     _xLimit:
  2193                           	opt callstack 26
  2194  000F08                     
  2195                           ;Comandos.c: 20:     for(int i=0; i < strlen(xl); i++){
  2196  000F08  0E00               	movlw	0
  2197  000F0A  6E11               	movwf	(xLimit@i+1)^0,c
  2198  000F0C  0E00               	movlw	0
  2199  000F0E  6E10               	movwf	xLimit@i^0,c
  2200  000F10  EF95  F007         	goto	l1774
  2201  000F14                     l1770:
  2202                           
  2203                           ;Comandos.c: 21:     USART_Tx(xl[i]);
  2204  000F14  0ECF               	movlw	low _xl
  2205  000F16  2410               	addwf	xLimit@i^0,w,c
  2206  000F18  6ED9               	movwf	fsr2l,c
  2207  000F1A  0E00               	movlw	high _xl
  2208  000F1C  2011               	addwfc	(xLimit@i+1)^0,w,c
  2209  000F1E  6EDA               	movwf	fsr2h,c
  2210  000F20  50DF               	movf	indf2,w,c
  2211  000F22  EC4E  F008         	call	_USART_Tx
  2212  000F26                     
  2213                           ;Comandos.c: 22:     }
  2214  000F26  4A10               	infsnz	xLimit@i^0,f,c
  2215  000F28  2A11               	incf	(xLimit@i+1)^0,f,c
  2216  000F2A                     l1774:
  2217  000F2A  0ECF               	movlw	low _xl
  2218  000F2C  6E0C               	movwf	strlen@s^0,c
  2219  000F2E  0E00               	movlw	high _xl
  2220  000F30  6E0D               	movwf	(strlen@s+1)^0,c
  2221  000F32  ECC4  F007         	call	_strlen	;wreg free
  2222  000F36  500C               	movf	?_strlen^0,w,c
  2223  000F38  5C10               	subwf	xLimit@i^0,w,c
  2224  000F3A  500D               	movf	(?_strlen+1)^0,w,c
  2225  000F3C  5811               	subwfb	(xLimit@i+1)^0,w,c
  2226  000F3E  A0D8               	btfss	status,0,c
  2227  000F40  EFA4  F007         	goto	u961
  2228  000F44  EFA6  F007         	goto	u960
  2229  000F48                     u961:
  2230  000F48  EF8A  F007         	goto	l1770
  2231  000F4C                     u960:
  2232  000F4C  0012               	return		;funcret
  2233  000F4E                     __end_of_xLimit:
  2234                           	opt callstack 0
  2235                           
  2236 ;; *************** function _invalidCoordinate *****************
  2237 ;; Defined at:
  2238 ;;		line 10 in file "Comandos.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  i               2   15[COMRAM] int 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2252 ;;      Params:         0       0       0       0       0       0       0       0       0
  2253 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2255 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2256 ;;Total ram usage:        2 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    4
  2259 ;; This function calls:
  2260 ;;		_USART_Tx
  2261 ;;		_strlen
  2262 ;; This function is called by:
  2263 ;;		_comandos
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text7
  2268  000D92                     __ptext7:
  2269                           	opt callstack 0
  2270  000D92                     _invalidCoordinate:
  2271                           	opt callstack 25
  2272  000D92                     
  2273                           ;Comandos.c: 11: for(int i=0; i < strlen(CE); i++){
  2274  000D92  0E00               	movlw	0
  2275  000D94  6E11               	movwf	(invalidCoordinate@i+1)^0,c
  2276  000D96  0E00               	movlw	0
  2277  000D98  6E10               	movwf	invalidCoordinate@i^0,c
  2278  000D9A  EFDA  F006         	goto	l1766
  2279  000D9E                     l1762:
  2280                           
  2281                           ;Comandos.c: 12:     USART_Tx(CE[i]);
  2282  000D9E  0E00               	movlw	low _CE
  2283  000DA0  2410               	addwf	invalidCoordinate@i^0,w,c
  2284  000DA2  6ED9               	movwf	fsr2l,c
  2285  000DA4  0E01               	movlw	high _CE
  2286  000DA6  2011               	addwfc	(invalidCoordinate@i+1)^0,w,c
  2287  000DA8  6EDA               	movwf	fsr2h,c
  2288  000DAA  50DF               	movf	indf2,w,c
  2289  000DAC  EC4E  F008         	call	_USART_Tx
  2290  000DB0                     
  2291                           ;Comandos.c: 13:     }
  2292  000DB0  4A10               	infsnz	invalidCoordinate@i^0,f,c
  2293  000DB2  2A11               	incf	(invalidCoordinate@i+1)^0,f,c
  2294  000DB4                     l1766:
  2295  000DB4  0E00               	movlw	low _CE
  2296  000DB6  6E0C               	movwf	strlen@s^0,c
  2297  000DB8  0E01               	movlw	high _CE
  2298  000DBA  6E0D               	movwf	(strlen@s+1)^0,c
  2299  000DBC  ECC4  F007         	call	_strlen	;wreg free
  2300  000DC0  500C               	movf	?_strlen^0,w,c
  2301  000DC2  5C10               	subwf	invalidCoordinate@i^0,w,c
  2302  000DC4  500D               	movf	(?_strlen+1)^0,w,c
  2303  000DC6  5811               	subwfb	(invalidCoordinate@i+1)^0,w,c
  2304  000DC8  A0D8               	btfss	status,0,c
  2305  000DCA  EFE9  F006         	goto	u951
  2306  000DCE  EFEB  F006         	goto	u950
  2307  000DD2                     u951:
  2308  000DD2  EFCF  F006         	goto	l1762
  2309  000DD6                     u950:
  2310  000DD6                     
  2311                           ;Comandos.c: 14:     PORTDbits.RD4=1;
  2312  000DD6  8883               	bsf	131,4,c	;volatile
  2313                           
  2314                           ;Comandos.c: 15:     PORTDbits.RD5=0;
  2315  000DD8  9A83               	bcf	131,5,c	;volatile
  2316                           
  2317                           ;Comandos.c: 16:     PORTDbits.RD6=0;
  2318  000DDA  9C83               	bcf	131,6,c	;volatile
  2319  000DDC  0012               	return		;funcret
  2320  000DDE                     __end_of_invalidCoordinate:
  2321                           	opt callstack 0
  2322                           
  2323 ;; *************** function _coordinateRefreshY *****************
  2324 ;; Defined at:
  2325 ;;		line 90 in file "Comandos.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  newY            2   20[COMRAM] int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  j               2   24[COMRAM] int 
  2330 ;;  i               2   22[COMRAM] int 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2340 ;;      Params:         2       0       0       0       0       0       0       0       0
  2341 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2343 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2344 ;;Total ram usage:        6 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    5
  2347 ;; This function calls:
  2348 ;;		_USART_Tx
  2349 ;;		_contador_pulsosD
  2350 ;;		_strlen
  2351 ;; This function is called by:
  2352 ;;		_comandos
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text8
  2357  0008D6                     __ptext8:
  2358                           	opt callstack 0
  2359  0008D6                     _coordinateRefreshY:
  2360                           	opt callstack 24
  2361  0008D6                     
  2362                           ;Comandos.c: 91:     if(newY<y){
  2363  0008D6  504A               	movf	_y^0,w,c
  2364  0008D8  5C15               	subwf	coordinateRefreshY@newY^0,w,c
  2365  0008DA  504B               	movf	(_y+1)^0,w,c
  2366  0008DC  5816               	subwfb	(coordinateRefreshY@newY+1)^0,w,c
  2367  0008DE  B0D8               	btfsc	status,0,c
  2368  0008E0  EF74  F004         	goto	u1051
  2369  0008E4  EF76  F004         	goto	u1050
  2370  0008E8                     u1051:
  2371  0008E8  EFA2  F004         	goto	l1852
  2372  0008EC                     u1050:
  2373  0008EC                     
  2374                           ;Comandos.c: 92:     PORTDbits.RD0=1;
  2375  0008EC  8083               	bsf	131,0,c	;volatile
  2376                           
  2377                           ;Comandos.c: 93:        PORTDbits.RD1=0;
  2378  0008EE  9283               	bcf	131,1,c	;volatile
  2379  0008F0                     
  2380                           ;Comandos.c: 95:        for(int i=0; i < strlen(msdown); i++){
  2381  0008F0  0E00               	movlw	0
  2382  0008F2  6E18               	movwf	(coordinateRefreshY@i+1)^0,c
  2383  0008F4  0E00               	movlw	0
  2384  0008F6  6E17               	movwf	coordinateRefreshY@i^0,c
  2385  0008F8  EF89  F004         	goto	l1848
  2386  0008FC                     l1844:
  2387                           
  2388                           ;Comandos.c: 96:     USART_Tx(msdown[i]);
  2389  0008FC  0EED               	movlw	low _msdown
  2390  0008FE  2417               	addwf	coordinateRefreshY@i^0,w,c
  2391  000900  6ED9               	movwf	fsr2l,c
  2392  000902  0E00               	movlw	high _msdown
  2393  000904  2018               	addwfc	(coordinateRefreshY@i+1)^0,w,c
  2394  000906  6EDA               	movwf	fsr2h,c
  2395  000908  50DF               	movf	indf2,w,c
  2396  00090A  EC4E  F008         	call	_USART_Tx
  2397  00090E                     
  2398                           ;Comandos.c: 97:     }
  2399  00090E  4A17               	infsnz	coordinateRefreshY@i^0,f,c
  2400  000910  2A18               	incf	(coordinateRefreshY@i+1)^0,f,c
  2401  000912                     l1848:
  2402  000912  0EED               	movlw	low _msdown
  2403  000914  6E0C               	movwf	strlen@s^0,c
  2404  000916  0E00               	movlw	high _msdown
  2405  000918  6E0D               	movwf	(strlen@s+1)^0,c
  2406  00091A  ECC4  F007         	call	_strlen	;wreg free
  2407  00091E  500C               	movf	?_strlen^0,w,c
  2408  000920  5C17               	subwf	coordinateRefreshY@i^0,w,c
  2409  000922  500D               	movf	(?_strlen+1)^0,w,c
  2410  000924  5818               	subwfb	(coordinateRefreshY@i+1)^0,w,c
  2411  000926  A0D8               	btfss	status,0,c
  2412  000928  EF98  F004         	goto	u1061
  2413  00092C  EF9A  F004         	goto	u1060
  2414  000930                     u1061:
  2415  000930  EF7E  F004         	goto	l1844
  2416  000934                     u1060:
  2417  000934                     
  2418                           ;Comandos.c: 98:     contador_pulsosD(y-newY);
  2419  000934  5015               	movf	coordinateRefreshY@newY^0,w,c
  2420  000936  5C4A               	subwf	_y^0,w,c
  2421  000938  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2422  00093A  5016               	movf	(coordinateRefreshY@newY+1)^0,w,c
  2423  00093C  584B               	subwfb	(_y+1)^0,w,c
  2424  00093E  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2425  000940  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2426  000944                     l1852:
  2427                           
  2428                           ;Comandos.c: 100:     if(newY>y){
  2429  000944  5015               	movf	coordinateRefreshY@newY^0,w,c
  2430  000946  5C4A               	subwf	_y^0,w,c
  2431  000948  5016               	movf	(coordinateRefreshY@newY+1)^0,w,c
  2432  00094A  584B               	subwfb	(_y+1)^0,w,c
  2433  00094C  B0D8               	btfsc	status,0,c
  2434  00094E  EFAB  F004         	goto	u1071
  2435  000952  EFAD  F004         	goto	u1070
  2436  000956                     u1071:
  2437  000956  EFD9  F004         	goto	l1866
  2438  00095A                     u1070:
  2439  00095A                     
  2440                           ;Comandos.c: 101:         PORTDbits.RD0=0;
  2441  00095A  9083               	bcf	131,0,c	;volatile
  2442                           
  2443                           ;Comandos.c: 102:         PORTDbits.RD1=1;
  2444  00095C  8283               	bsf	131,1,c	;volatile
  2445  00095E                     
  2446                           ;Comandos.c: 104:     for(int j=0; j < strlen(msup); j++){
  2447  00095E  0E00               	movlw	0
  2448  000960  6E1A               	movwf	(coordinateRefreshY@j+1)^0,c
  2449  000962  0E00               	movlw	0
  2450  000964  6E19               	movwf	coordinateRefreshY@j^0,c
  2451  000966  EFC0  F004         	goto	l1862
  2452  00096A                     l1858:
  2453                           
  2454                           ;Comandos.c: 105:     USART_Tx(msup[j]);
  2455  00096A  0E39               	movlw	low _msup
  2456  00096C  2419               	addwf	coordinateRefreshY@j^0,w,c
  2457  00096E  6ED9               	movwf	fsr2l,c
  2458  000970  0E00               	movlw	high _msup
  2459  000972  201A               	addwfc	(coordinateRefreshY@j+1)^0,w,c
  2460  000974  6EDA               	movwf	fsr2h,c
  2461  000976  50DF               	movf	indf2,w,c
  2462  000978  EC4E  F008         	call	_USART_Tx
  2463  00097C                     
  2464                           ;Comandos.c: 106:     }
  2465  00097C  4A19               	infsnz	coordinateRefreshY@j^0,f,c
  2466  00097E  2A1A               	incf	(coordinateRefreshY@j+1)^0,f,c
  2467  000980                     l1862:
  2468  000980  0E39               	movlw	low _msup
  2469  000982  6E0C               	movwf	strlen@s^0,c
  2470  000984  0E00               	movlw	high _msup
  2471  000986  6E0D               	movwf	(strlen@s+1)^0,c
  2472  000988  ECC4  F007         	call	_strlen	;wreg free
  2473  00098C  500C               	movf	?_strlen^0,w,c
  2474  00098E  5C19               	subwf	coordinateRefreshY@j^0,w,c
  2475  000990  500D               	movf	(?_strlen+1)^0,w,c
  2476  000992  581A               	subwfb	(coordinateRefreshY@j+1)^0,w,c
  2477  000994  A0D8               	btfss	status,0,c
  2478  000996  EFCF  F004         	goto	u1081
  2479  00099A  EFD1  F004         	goto	u1080
  2480  00099E                     u1081:
  2481  00099E  EFB5  F004         	goto	l1858
  2482  0009A2                     u1080:
  2483  0009A2                     
  2484                           ;Comandos.c: 108:         contador_pulsosD(newY-y);
  2485  0009A2  504A               	movf	_y^0,w,c
  2486  0009A4  5C15               	subwf	coordinateRefreshY@newY^0,w,c
  2487  0009A6  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2488  0009A8  504B               	movf	(_y+1)^0,w,c
  2489  0009AA  5816               	subwfb	(coordinateRefreshY@newY+1)^0,w,c
  2490  0009AC  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2491  0009AE  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2492  0009B2                     l1866:
  2493                           
  2494                           ;Comandos.c: 110:     y=newY;
  2495  0009B2  C015  F04A         	movff	coordinateRefreshY@newY,_y
  2496  0009B6  C016  F04B         	movff	coordinateRefreshY@newY+1,_y+1
  2497  0009BA  0012               	return		;funcret
  2498  0009BC                     __end_of_coordinateRefreshY:
  2499                           	opt callstack 0
  2500                           
  2501 ;; *************** function _coordinateRefreshX *****************
  2502 ;; Defined at:
  2503 ;;		line 62 in file "Comandos.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  newX            2   20[COMRAM] int 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  j               2   24[COMRAM] int 
  2508 ;;  i               2   22[COMRAM] int 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2518 ;;      Params:         2       0       0       0       0       0       0       0       0
  2519 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2521 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2522 ;;Total ram usage:        6 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    5
  2525 ;; This function calls:
  2526 ;;		_USART_Tx
  2527 ;;		_contador_pulsosD
  2528 ;;		_strlen
  2529 ;; This function is called by:
  2530 ;;		_comandos
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text9
  2535  0009BC                     __ptext9:
  2536                           	opt callstack 0
  2537  0009BC                     _coordinateRefreshX:
  2538                           	opt callstack 24
  2539  0009BC                     
  2540                           ;Comandos.c: 63:     if(newX<x){
  2541  0009BC  504C               	movf	_x^0,w,c
  2542  0009BE  5C15               	subwf	coordinateRefreshX@newX^0,w,c
  2543  0009C0  504D               	movf	(_x+1)^0,w,c
  2544  0009C2  5816               	subwfb	(coordinateRefreshX@newX+1)^0,w,c
  2545  0009C4  B0D8               	btfsc	status,0,c
  2546  0009C6  EFE7  F004         	goto	u1011
  2547  0009CA  EFE9  F004         	goto	u1010
  2548  0009CE                     u1011:
  2549  0009CE  EF15  F005         	goto	l1822
  2550  0009D2                     u1010:
  2551  0009D2                     
  2552                           ;Comandos.c: 64:        PORTDbits.RD0=1;
  2553  0009D2  8083               	bsf	131,0,c	;volatile
  2554                           
  2555                           ;Comandos.c: 67:        PORTDbits.RD1=1;
  2556  0009D4  8283               	bsf	131,1,c	;volatile
  2557  0009D6                     
  2558                           ;Comandos.c: 69:        for(int i=0; i < strlen(msleft); i++){
  2559  0009D6  0E00               	movlw	0
  2560  0009D8  6E18               	movwf	(coordinateRefreshX@i+1)^0,c
  2561  0009DA  0E00               	movlw	0
  2562  0009DC  6E17               	movwf	coordinateRefreshX@i^0,c
  2563  0009DE  EFFC  F004         	goto	l1818
  2564  0009E2                     l1814:
  2565                           
  2566                           ;Comandos.c: 70:     USART_Tx(msleft[i]);
  2567  0009E2  0E2D               	movlw	low _msleft
  2568  0009E4  2417               	addwf	coordinateRefreshX@i^0,w,c
  2569  0009E6  6ED9               	movwf	fsr2l,c
  2570  0009E8  0E00               	movlw	high _msleft
  2571  0009EA  2018               	addwfc	(coordinateRefreshX@i+1)^0,w,c
  2572  0009EC  6EDA               	movwf	fsr2h,c
  2573  0009EE  50DF               	movf	indf2,w,c
  2574  0009F0  EC4E  F008         	call	_USART_Tx
  2575  0009F4                     
  2576                           ;Comandos.c: 71:     }
  2577  0009F4  4A17               	infsnz	coordinateRefreshX@i^0,f,c
  2578  0009F6  2A18               	incf	(coordinateRefreshX@i+1)^0,f,c
  2579  0009F8                     l1818:
  2580  0009F8  0E2D               	movlw	low _msleft
  2581  0009FA  6E0C               	movwf	strlen@s^0,c
  2582  0009FC  0E00               	movlw	high _msleft
  2583  0009FE  6E0D               	movwf	(strlen@s+1)^0,c
  2584  000A00  ECC4  F007         	call	_strlen	;wreg free
  2585  000A04  500C               	movf	?_strlen^0,w,c
  2586  000A06  5C17               	subwf	coordinateRefreshX@i^0,w,c
  2587  000A08  500D               	movf	(?_strlen+1)^0,w,c
  2588  000A0A  5818               	subwfb	(coordinateRefreshX@i+1)^0,w,c
  2589  000A0C  A0D8               	btfss	status,0,c
  2590  000A0E  EF0B  F005         	goto	u1021
  2591  000A12  EF0D  F005         	goto	u1020
  2592  000A16                     u1021:
  2593  000A16  EFF1  F004         	goto	l1814
  2594  000A1A                     u1020:
  2595  000A1A                     
  2596                           ;Comandos.c: 72:        contador_pulsosD(x-newX);
  2597  000A1A  5015               	movf	coordinateRefreshX@newX^0,w,c
  2598  000A1C  5C4C               	subwf	_x^0,w,c
  2599  000A1E  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2600  000A20  5016               	movf	(coordinateRefreshX@newX+1)^0,w,c
  2601  000A22  584D               	subwfb	(_x+1)^0,w,c
  2602  000A24  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2603  000A26  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2604  000A2A                     l1822:
  2605                           
  2606                           ;Comandos.c: 75:     if(newX>x){
  2607  000A2A  5015               	movf	coordinateRefreshX@newX^0,w,c
  2608  000A2C  5C4C               	subwf	_x^0,w,c
  2609  000A2E  5016               	movf	(coordinateRefreshX@newX+1)^0,w,c
  2610  000A30  584D               	subwfb	(_x+1)^0,w,c
  2611  000A32  B0D8               	btfsc	status,0,c
  2612  000A34  EF1E  F005         	goto	u1031
  2613  000A38  EF20  F005         	goto	u1030
  2614  000A3C                     u1031:
  2615  000A3C  EF4C  F005         	goto	l1836
  2616  000A40                     u1030:
  2617  000A40                     
  2618                           ;Comandos.c: 76:        PORTDbits.RD0=0;
  2619  000A40  9083               	bcf	131,0,c	;volatile
  2620                           
  2621                           ;Comandos.c: 77:        PORTDbits.RD1=0;
  2622  000A42  9283               	bcf	131,1,c	;volatile
  2623  000A44                     
  2624                           ;Comandos.c: 81:        for(int j=0; j < strlen(msright); j++){
  2625  000A44  0E00               	movlw	0
  2626  000A46  6E1A               	movwf	(coordinateRefreshX@j+1)^0,c
  2627  000A48  0E00               	movlw	0
  2628  000A4A  6E19               	movwf	coordinateRefreshX@j^0,c
  2629  000A4C  EF33  F005         	goto	l1832
  2630  000A50                     l1828:
  2631                           
  2632                           ;Comandos.c: 82:     USART_Tx(msright[j]);
  2633  000A50  0EE0               	movlw	low _msright
  2634  000A52  2419               	addwf	coordinateRefreshX@j^0,w,c
  2635  000A54  6ED9               	movwf	fsr2l,c
  2636  000A56  0E00               	movlw	high _msright
  2637  000A58  201A               	addwfc	(coordinateRefreshX@j+1)^0,w,c
  2638  000A5A  6EDA               	movwf	fsr2h,c
  2639  000A5C  50DF               	movf	indf2,w,c
  2640  000A5E  EC4E  F008         	call	_USART_Tx
  2641  000A62                     
  2642                           ;Comandos.c: 83:     }
  2643  000A62  4A19               	infsnz	coordinateRefreshX@j^0,f,c
  2644  000A64  2A1A               	incf	(coordinateRefreshX@j+1)^0,f,c
  2645  000A66                     l1832:
  2646  000A66  0EE0               	movlw	low _msright
  2647  000A68  6E0C               	movwf	strlen@s^0,c
  2648  000A6A  0E00               	movlw	high _msright
  2649  000A6C  6E0D               	movwf	(strlen@s+1)^0,c
  2650  000A6E  ECC4  F007         	call	_strlen	;wreg free
  2651  000A72  500C               	movf	?_strlen^0,w,c
  2652  000A74  5C19               	subwf	coordinateRefreshX@j^0,w,c
  2653  000A76  500D               	movf	(?_strlen+1)^0,w,c
  2654  000A78  581A               	subwfb	(coordinateRefreshX@j+1)^0,w,c
  2655  000A7A  A0D8               	btfss	status,0,c
  2656  000A7C  EF42  F005         	goto	u1041
  2657  000A80  EF44  F005         	goto	u1040
  2658  000A84                     u1041:
  2659  000A84  EF28  F005         	goto	l1828
  2660  000A88                     u1040:
  2661  000A88                     
  2662                           ;Comandos.c: 84:         contador_pulsosD(newX-x);
  2663  000A88  504C               	movf	_x^0,w,c
  2664  000A8A  5C15               	subwf	coordinateRefreshX@newX^0,w,c
  2665  000A8C  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2666  000A8E  504D               	movf	(_x+1)^0,w,c
  2667  000A90  5816               	subwfb	(coordinateRefreshX@newX+1)^0,w,c
  2668  000A92  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2669  000A94  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2670  000A98                     l1836:
  2671                           
  2672                           ;Comandos.c: 86:     x=newX;
  2673  000A98  C015  F04C         	movff	coordinateRefreshX@newX,_x
  2674  000A9C  C016  F04D         	movff	coordinateRefreshX@newX+1,_x+1
  2675  000AA0  0012               	return		;funcret
  2676  000AA2                     __end_of_coordinateRefreshX:
  2677                           	opt callstack 0
  2678                           
  2679 ;; *************** function _contador_pulsosD *****************
  2680 ;; Defined at:
  2681 ;;		line 38 in file "pwm.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  pulsoD          2   17[COMRAM] int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2695 ;;      Params:         2       0       0       0       0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2697 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2698 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2699 ;;Total ram usage:        3 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    4
  2702 ;; This function calls:
  2703 ;;		___wmul
  2704 ;;		_clearOneShot
  2705 ;;		_oneShot
  2706 ;; This function is called by:
  2707 ;;		_coordinateRefreshX
  2708 ;;		_coordinateRefreshY
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text10
  2713  000B3C                     __ptext10:
  2714                           	opt callstack 0
  2715  000B3C                     _contador_pulsosD:
  2716                           	opt callstack 24
  2717  000B3C                     
  2718                           ;pwm.c: 39:     ons=0;
  2719  000B3C  0E00               	movlw	0
  2720  000B3E  6E52               	movwf	_ons^0,c
  2721                           
  2722                           ;pwm.c: 40:     cnt=0;
  2723  000B40  0E00               	movlw	0
  2724  000B42  6E45               	movwf	(_cnt+1)^0,c
  2725  000B44  0E00               	movlw	0
  2726  000B46  6E44               	movwf	_cnt^0,c
  2727  000B48                     
  2728                           ;pwm.c: 42:     PORTDbits.RD2= 0;
  2729  000B48  9483               	bcf	131,2,c	;volatile
  2730  000B4A                     
  2731                           ;pwm.c: 43:     PORTDbits.RD3=0;
  2732  000B4A  9683               	bcf	131,3,c	;volatile
  2733                           
  2734                           ;pwm.c: 44:     keepgoing=1;
  2735  000B4C  0E00               	movlw	0
  2736  000B4E  6E49               	movwf	(_keepgoing+1)^0,c
  2737  000B50  0E01               	movlw	1
  2738  000B52  6E48               	movwf	_keepgoing^0,c
  2739                           
  2740                           ;pwm.c: 45:     while(cnt<pulsoD*5){
  2741  000B54  EFBF  F005         	goto	l1756
  2742  000B58                     l259:
  2743                           
  2744                           ;pwm.c: 47:         if (PORTCbits.CCP1==1){
  2745  000B58  A482               	btfss	130,2,c	;volatile
  2746  000B5A  EFB1  F005         	goto	u921
  2747  000B5E  EFB3  F005         	goto	u920
  2748  000B62                     u921:
  2749  000B62  EFB5  F005         	goto	l1752
  2750  000B66                     u920:
  2751  000B66                     
  2752                           ;pwm.c: 48:             oneShot(); }
  2753  000B66  EC33  F008         	call	_oneShot	;wreg free
  2754  000B6A                     l1752:
  2755                           
  2756                           ;pwm.c: 49:             if(ons==1){ clearOneShot();}
  2757  000B6A  0452               	decf	_ons^0,w,c
  2758  000B6C  A4D8               	btfss	status,2,c
  2759  000B6E  EFBB  F005         	goto	u931
  2760  000B72  EFBD  F005         	goto	u930
  2761  000B76                     u931:
  2762  000B76  EFBF  F005         	goto	l1756
  2763  000B7A                     u930:
  2764  000B7A  EC64  F008         	call	_clearOneShot	;wreg free
  2765  000B7E                     l1756:
  2766                           
  2767                           ;pwm.c: 45:     while(cnt<pulsoD*5){
  2768  000B7E  C012  F00C         	movff	contador_pulsosD@pulsoD,___wmul@multiplier
  2769  000B82  C013  F00D         	movff	contador_pulsosD@pulsoD+1,___wmul@multiplier+1
  2770  000B86  0E00               	movlw	0
  2771  000B88  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  2772  000B8A  0E05               	movlw	5
  2773  000B8C  6E0E               	movwf	___wmul@multiplicand^0,c
  2774  000B8E  EC0E  F008         	call	___wmul	;wreg free
  2775  000B92  500C               	movf	?___wmul^0,w,c
  2776  000B94  5C44               	subwf	_cnt^0,w,c
  2777  000B96  5045               	movf	(_cnt+1)^0,w,c
  2778  000B98  0A80               	xorlw	128
  2779  000B9A  6E14               	movwf	??_contador_pulsosD^0,c
  2780  000B9C  500D               	movf	(?___wmul+1)^0,w,c
  2781  000B9E  0A80               	xorlw	128
  2782  000BA0  5814               	subwfb	??_contador_pulsosD^0,w,c
  2783  000BA2  A0D8               	btfss	status,0,c
  2784  000BA4  EFD6  F005         	goto	u941
  2785  000BA8  EFD8  F005         	goto	u940
  2786  000BAC                     u941:
  2787  000BAC  EFAC  F005         	goto	l259
  2788  000BB0                     u940:
  2789  000BB0                     
  2790                           ;pwm.c: 54:     PORTDbits.RD2= 1;
  2791  000BB0  8483               	bsf	131,2,c	;volatile
  2792                           
  2793                           ;pwm.c: 55:     PORTDbits.RD3= 1;
  2794  000BB2  8683               	bsf	131,3,c	;volatile
  2795  000BB4                     
  2796                           ;pwm.c: 56:     keepgoing=0;
  2797  000BB4  0E00               	movlw	0
  2798  000BB6  6E49               	movwf	(_keepgoing+1)^0,c
  2799  000BB8  0E00               	movlw	0
  2800  000BBA  6E48               	movwf	_keepgoing^0,c
  2801  000BBC  0012               	return		;funcret
  2802  000BBE                     __end_of_contador_pulsosD:
  2803                           	opt callstack 0
  2804                           
  2805 ;; *************** function _oneShot *****************
  2806 ;; Defined at:
  2807 ;;		line 58 in file "pwm.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    3
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_contador_pulsosD
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text11
  2836  001066                     __ptext11:
  2837                           	opt callstack 0
  2838  001066                     _oneShot:
  2839                           	opt callstack 24
  2840  001066                     
  2841                           ;pwm.c: 59:     if(ons==1){return;}
  2842  001066  0452               	decf	_ons^0,w,c
  2843  001068  A4D8               	btfss	status,2,c
  2844  00106A  EF39  F008         	goto	u881
  2845  00106E  EF3B  F008         	goto	u880
  2846  001072                     u881:
  2847  001072  EF3D  F008         	goto	l1712
  2848  001076                     u880:
  2849  001076  EF41  F008         	goto	l267
  2850  00107A                     l1712:
  2851                           
  2852                           ;pwm.c: 60:     cnt++;
  2853  00107A  4A44               	infsnz	_cnt^0,f,c
  2854  00107C  2A45               	incf	(_cnt+1)^0,f,c
  2855  00107E                     
  2856                           ;pwm.c: 61:     ons=1;
  2857  00107E  0E01               	movlw	1
  2858  001080  6E52               	movwf	_ons^0,c
  2859  001082                     l267:
  2860  001082  0012               	return		;funcret
  2861  001084                     __end_of_oneShot:
  2862                           	opt callstack 0
  2863                           
  2864 ;; *************** function _clearOneShot *****************
  2865 ;; Defined at:
  2866 ;;		line 65 in file "pwm.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    3
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_contador_pulsosD
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text12
  2895  0010C8                     __ptext12:
  2896                           	opt callstack 0
  2897  0010C8                     _clearOneShot:
  2898                           	opt callstack 24
  2899  0010C8                     
  2900                           ;pwm.c: 66:     if(PORTCbits.CCP1==0){ons=0;}
  2901  0010C8  B482               	btfsc	130,2,c	;volatile
  2902  0010CA  EF69  F008         	goto	u891
  2903  0010CE  EF6B  F008         	goto	u890
  2904  0010D2                     u891:
  2905  0010D2  EF6D  F008         	goto	l271
  2906  0010D6                     u890:
  2907  0010D6  0E00               	movlw	0
  2908  0010D8  6E52               	movwf	_ons^0,c
  2909  0010DA                     l271:
  2910  0010DA  0012               	return		;funcret
  2911  0010DC                     __end_of_clearOneShot:
  2912                           	opt callstack 0
  2913                           
  2914 ;; *************** function ___wmul *****************
  2915 ;; Defined at:
  2916 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  multiplier      2   11[COMRAM] unsigned int 
  2919 ;;  multiplicand    2   13[COMRAM] unsigned int 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  product         2   15[COMRAM] unsigned int 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2   11[COMRAM] unsigned int 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, prodl, prodh
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2931 ;;      Params:         4       0       0       0       0       0       0       0       0
  2932 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2934 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2935 ;;Total ram usage:        6 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    3
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_contador_pulsosD
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text13
  2946  00101C                     __ptext13:
  2947                           	opt callstack 0
  2948  00101C                     ___wmul:
  2949                           	opt callstack 24
  2950  00101C  500C               	movf	___wmul@multiplier^0,w,c
  2951  00101E  020E               	mulwf	___wmul@multiplicand^0,c
  2952  001020  CFF3 F010          	movff	prodl,___wmul@product
  2953  001024  CFF4 F011          	movff	prodh,___wmul@product+1
  2954  001028  500C               	movf	___wmul@multiplier^0,w,c
  2955  00102A  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  2956  00102C  50F3               	movf	243,w,c
  2957  00102E  2611               	addwf	(___wmul@product+1)^0,f,c
  2958  001030  500D               	movf	(___wmul@multiplier+1)^0,w,c
  2959  001032  020E               	mulwf	___wmul@multiplicand^0,c
  2960  001034  50F3               	movf	243,w,c
  2961  001036  2611               	addwf	(___wmul@product+1)^0,f,c
  2962  001038  C010  F00C         	movff	___wmul@product,?___wmul
  2963  00103C  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  2964  001040  0012               	return		;funcret
  2965  001042                     __end_of___wmul:
  2966                           	opt callstack 0
  2967                           
  2968 ;; *************** function _Error *****************
  2969 ;; Defined at:
  2970 ;;		line 32 in file "Comandos.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  i               2   15[COMRAM] int 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0
  2985 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2987 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2988 ;;Total ram usage:        2 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    4
  2991 ;; This function calls:
  2992 ;;		_USART_Tx
  2993 ;;		_strlen
  2994 ;; This function is called by:
  2995 ;;		_comandos
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text14
  3000  000DDE                     __ptext14:
  3001                           	opt callstack 0
  3002  000DDE                     _Error:
  3003                           	opt callstack 25
  3004  000DDE                     
  3005                           ;Comandos.c: 33:     for(int i=0; i< strlen(msgwrong); i++){
  3006  000DDE  0E00               	movlw	0
  3007  000DE0  6E11               	movwf	(Error@i+1)^0,c
  3008  000DE2  0E00               	movlw	0
  3009  000DE4  6E10               	movwf	Error@i^0,c
  3010  000DE6  EF00  F007         	goto	l1790
  3011  000DEA                     l1786:
  3012                           
  3013                           ;Comandos.c: 34:     USART_Tx(msgwrong[i]);
  3014  000DEA  0E1E               	movlw	low _msgwrong
  3015  000DEC  2410               	addwf	Error@i^0,w,c
  3016  000DEE  6ED9               	movwf	fsr2l,c
  3017  000DF0  0E01               	movlw	high _msgwrong
  3018  000DF2  2011               	addwfc	(Error@i+1)^0,w,c
  3019  000DF4  6EDA               	movwf	fsr2h,c
  3020  000DF6  50DF               	movf	indf2,w,c
  3021  000DF8  EC4E  F008         	call	_USART_Tx
  3022  000DFC                     
  3023                           ;Comandos.c: 35:     }
  3024  000DFC  4A10               	infsnz	Error@i^0,f,c
  3025  000DFE  2A11               	incf	(Error@i+1)^0,f,c
  3026  000E00                     l1790:
  3027  000E00  0E1E               	movlw	low _msgwrong
  3028  000E02  6E0C               	movwf	strlen@s^0,c
  3029  000E04  0E01               	movlw	high _msgwrong
  3030  000E06  6E0D               	movwf	(strlen@s+1)^0,c
  3031  000E08  ECC4  F007         	call	_strlen	;wreg free
  3032  000E0C  500C               	movf	?_strlen^0,w,c
  3033  000E0E  5C10               	subwf	Error@i^0,w,c
  3034  000E10  500D               	movf	(?_strlen+1)^0,w,c
  3035  000E12  5811               	subwfb	(Error@i+1)^0,w,c
  3036  000E14  A0D8               	btfss	status,0,c
  3037  000E16  EF0F  F007         	goto	u981
  3038  000E1A  EF11  F007         	goto	u980
  3039  000E1E                     u981:
  3040  000E1E  EFF5  F006         	goto	l1786
  3041  000E22                     u980:
  3042  000E22                     
  3043                           ;Comandos.c: 36:     PORTDbits.RD4=1;
  3044  000E22  8883               	bsf	131,4,c	;volatile
  3045                           
  3046                           ;Comandos.c: 37:     PORTDbits.RD5=0;
  3047  000E24  9A83               	bcf	131,5,c	;volatile
  3048                           
  3049                           ;Comandos.c: 38:     PORTDbits.RD6=0;
  3050  000E26  9C83               	bcf	131,6,c	;volatile
  3051  000E28  0012               	return		;funcret
  3052  000E2A                     __end_of_Error:
  3053                           	opt callstack 0
  3054                           
  3055 ;; *************** function _Ejecutandose *****************
  3056 ;; Defined at:
  3057 ;;		line 42 in file "Comandos.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  i               2   15[COMRAM] int 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3071 ;;      Params:         0       0       0       0       0       0       0       0       0
  3072 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3074 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3075 ;;Total ram usage:        2 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    4
  3078 ;; This function calls:
  3079 ;;		_USART_Tx
  3080 ;;		_strlen
  3081 ;; This function is called by:
  3082 ;;		_comandos
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text15
  3087  000E2A                     __ptext15:
  3088                           	opt callstack 0
  3089  000E2A                     _Ejecutandose:
  3090                           	opt callstack 25
  3091  000E2A                     
  3092                           ;Comandos.c: 43:     for(int i=0; i < strlen(msgeje); i++){
  3093  000E2A  0E00               	movlw	0
  3094  000E2C  6E11               	movwf	(Ejecutandose@i+1)^0,c
  3095  000E2E  0E00               	movlw	0
  3096  000E30  6E10               	movwf	Ejecutandose@i^0,c
  3097  000E32  EF26  F007         	goto	l1798
  3098  000E36                     l1794:
  3099                           
  3100                           ;Comandos.c: 44:     USART_Tx(msgeje[i]);
  3101  000E36  0EA8               	movlw	low _msgeje
  3102  000E38  2410               	addwf	Ejecutandose@i^0,w,c
  3103  000E3A  6ED9               	movwf	fsr2l,c
  3104  000E3C  0E00               	movlw	high _msgeje
  3105  000E3E  2011               	addwfc	(Ejecutandose@i+1)^0,w,c
  3106  000E40  6EDA               	movwf	fsr2h,c
  3107  000E42  50DF               	movf	indf2,w,c
  3108  000E44  EC4E  F008         	call	_USART_Tx
  3109  000E48                     
  3110                           ;Comandos.c: 45:     }
  3111  000E48  4A10               	infsnz	Ejecutandose@i^0,f,c
  3112  000E4A  2A11               	incf	(Ejecutandose@i+1)^0,f,c
  3113  000E4C                     l1798:
  3114  000E4C  0EA8               	movlw	low _msgeje
  3115  000E4E  6E0C               	movwf	strlen@s^0,c
  3116  000E50  0E00               	movlw	high _msgeje
  3117  000E52  6E0D               	movwf	(strlen@s+1)^0,c
  3118  000E54  ECC4  F007         	call	_strlen	;wreg free
  3119  000E58  500C               	movf	?_strlen^0,w,c
  3120  000E5A  5C10               	subwf	Ejecutandose@i^0,w,c
  3121  000E5C  500D               	movf	(?_strlen+1)^0,w,c
  3122  000E5E  5811               	subwfb	(Ejecutandose@i+1)^0,w,c
  3123  000E60  A0D8               	btfss	status,0,c
  3124  000E62  EF35  F007         	goto	u991
  3125  000E66  EF37  F007         	goto	u990
  3126  000E6A                     u991:
  3127  000E6A  EF1B  F007         	goto	l1794
  3128  000E6E                     u990:
  3129  000E6E                     
  3130                           ;Comandos.c: 46:       PORTDbits.RD4=0;
  3131  000E6E  9883               	bcf	131,4,c	;volatile
  3132                           
  3133                           ;Comandos.c: 47:     PORTDbits.RD5=0;
  3134  000E70  9A83               	bcf	131,5,c	;volatile
  3135                           
  3136                           ;Comandos.c: 48:     PORTDbits.RD6=1;
  3137  000E72  8C83               	bsf	131,6,c	;volatile
  3138  000E74  0012               	return		;funcret
  3139  000E76                     __end_of_Ejecutandose:
  3140                           	opt callstack 0
  3141                           
  3142 ;; *************** function _Completo *****************
  3143 ;; Defined at:
  3144 ;;		line 52 in file "Comandos.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  i               2   15[COMRAM] int 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0
  3159 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3161 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3162 ;;Total ram usage:        2 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    4
  3165 ;; This function calls:
  3166 ;;		_USART_Tx
  3167 ;;		_strlen
  3168 ;; This function is called by:
  3169 ;;		_comandos
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text16
  3175  000E76                     __ptext16:
  3176                           	opt callstack 0
  3177  000E76                     _Completo:
  3178                           	opt callstack 25
  3179  000E76                     
  3180                           ;Comandos.c: 53:     for(int i=0; i < strlen(msgcomp); i++){
  3181  000E76  0E00               	movlw	0
  3182  000E78  6E11               	movwf	(Completo@i+1)^0,c
  3183  000E7A  0E00               	movlw	0
  3184  000E7C  6E10               	movwf	Completo@i^0,c
  3185  000E7E  EF4C  F007         	goto	l1806
  3186  000E82                     l1802:
  3187                           
  3188                           ;Comandos.c: 54:     USART_Tx(msgcomp[i]);
  3189  000E82  0E91               	movlw	low _msgcomp
  3190  000E84  2410               	addwf	Completo@i^0,w,c
  3191  000E86  6ED9               	movwf	fsr2l,c
  3192  000E88  0E00               	movlw	high _msgcomp
  3193  000E8A  2011               	addwfc	(Completo@i+1)^0,w,c
  3194  000E8C  6EDA               	movwf	fsr2h,c
  3195  000E8E  50DF               	movf	indf2,w,c
  3196  000E90  EC4E  F008         	call	_USART_Tx
  3197  000E94                     
  3198                           ;Comandos.c: 55:     }
  3199  000E94  4A10               	infsnz	Completo@i^0,f,c
  3200  000E96  2A11               	incf	(Completo@i+1)^0,f,c
  3201  000E98                     l1806:
  3202  000E98  0E91               	movlw	low _msgcomp
  3203  000E9A  6E0C               	movwf	strlen@s^0,c
  3204  000E9C  0E00               	movlw	high _msgcomp
  3205  000E9E  6E0D               	movwf	(strlen@s+1)^0,c
  3206  000EA0  ECC4  F007         	call	_strlen	;wreg free
  3207  000EA4  500C               	movf	?_strlen^0,w,c
  3208  000EA6  5C10               	subwf	Completo@i^0,w,c
  3209  000EA8  500D               	movf	(?_strlen+1)^0,w,c
  3210  000EAA  5811               	subwfb	(Completo@i+1)^0,w,c
  3211  000EAC  A0D8               	btfss	status,0,c
  3212  000EAE  EF5B  F007         	goto	u1001
  3213  000EB2  EF5D  F007         	goto	u1000
  3214  000EB6                     u1001:
  3215  000EB6  EF41  F007         	goto	l1802
  3216  000EBA                     u1000:
  3217  000EBA                     
  3218                           ;Comandos.c: 56:       PORTDbits.RD4=0;
  3219  000EBA  9883               	bcf	131,4,c	;volatile
  3220                           
  3221                           ;Comandos.c: 57:     PORTDbits.RD5=1;
  3222  000EBC  8A83               	bsf	131,5,c	;volatile
  3223                           
  3224                           ;Comandos.c: 58:     PORTDbits.RD6=0;
  3225  000EBE  9C83               	bcf	131,6,c	;volatile
  3226  000EC0  0012               	return		;funcret
  3227  000EC2                     __end_of_Completo:
  3228                           	opt callstack 0
  3229                           
  3230 ;; *************** function _strlen *****************
  3231 ;; Defined at:
  3232 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3235 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3236 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3237 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3240 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3241 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3242 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2   11[COMRAM] unsigned int 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3252 ;;      Params:         2       0       0       0       0       0       0       0       0
  3253 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3255 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3256 ;;Total ram usage:        4 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    3
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_invalidCoordinate
  3263 ;;		_xLimit
  3264 ;;		_yLimit
  3265 ;;		_Error
  3266 ;;		_Ejecutandose
  3267 ;;		_Completo
  3268 ;;		_coordinateRefreshX
  3269 ;;		_coordinateRefreshY
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text17
  3274  000F88                     __ptext17:
  3275                           	opt callstack 0
  3276  000F88                     _strlen:
  3277                           	opt callstack 26
  3278  000F88  C00C  F00E         	movff	strlen@s,strlen@a
  3279  000F8C  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3280  000F90  EFCC  F007         	goto	l1738
  3281  000F94                     l1736:
  3282  000F94  4A0C               	infsnz	strlen@s^0,f,c
  3283  000F96  2A0D               	incf	(strlen@s+1)^0,f,c
  3284  000F98                     l1738:
  3285  000F98  C00C  FFD9         	movff	strlen@s,fsr2l
  3286  000F9C  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3287  000FA0  50DF               	movf	indf2,w,c
  3288  000FA2  A4D8               	btfss	status,2,c
  3289  000FA4  EFD6  F007         	goto	u911
  3290  000FA8  EFD8  F007         	goto	u910
  3291  000FAC                     u911:
  3292  000FAC  EFCA  F007         	goto	l1736
  3293  000FB0                     u910:
  3294  000FB0  500E               	movf	strlen@a^0,w,c
  3295  000FB2  5C0C               	subwf	strlen@s^0,w,c
  3296  000FB4  6E0C               	movwf	?_strlen^0,c
  3297  000FB6  500F               	movf	(strlen@a+1)^0,w,c
  3298  000FB8  580D               	subwfb	(strlen@s+1)^0,w,c
  3299  000FBA  6E0D               	movwf	(?_strlen+1)^0,c
  3300  000FBC  0012               	return		;funcret
  3301  000FBE                     __end_of_strlen:
  3302                           	opt callstack 0
  3303                           
  3304 ;; *************** function _USART_Tx *****************
  3305 ;; Defined at:
  3306 ;;		line 27 in file "USART.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  data            1    wreg     unsigned char 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  data            1   11[COMRAM] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0
  3321 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3323 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3324 ;;Total ram usage:        1 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    3
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_invalidCoordinate
  3331 ;;		_xLimit
  3332 ;;		_yLimit
  3333 ;;		_Error
  3334 ;;		_Ejecutandose
  3335 ;;		_Completo
  3336 ;;		_coordinateRefreshX
  3337 ;;		_coordinateRefreshY
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text18
  3343  00109C                     __ptext18:
  3344                           	opt callstack 0
  3345  00109C                     _USART_Tx:
  3346                           	opt callstack 26
  3347                           
  3348                           ;incstack = 0
  3349                           ;USART_Tx@data stored from wreg
  3350  00109C  6E0C               	movwf	USART_Tx@data^0,c
  3351  00109E                     l394:
  3352  00109E  A89E               	btfss	158,4,c	;volatile
  3353  0010A0  EF54  F008         	goto	u901
  3354  0010A4  EF56  F008         	goto	u900
  3355  0010A8                     u901:
  3356  0010A8  EF4F  F008         	goto	l394
  3357  0010AC                     u900:
  3358  0010AC                     
  3359                           ;USART.c: 29:     TXREG= data;
  3360  0010AC  C00C  FFAD         	movff	USART_Tx@data,4013	;volatile
  3361  0010B0  0012               	return		;funcret
  3362  0010B2                     __end_of_USART_Tx:
  3363                           	opt callstack 0
  3364                           
  3365 ;; *************** function _USART_Rx *****************
  3366 ;; Defined at:
  3367 ;;		line 32 in file "USART.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      unsigned char 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    3
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text19
  3396  0010DC                     __ptext19:
  3397                           	opt callstack 0
  3398  0010DC                     _USART_Rx:
  3399                           	opt callstack 27
  3400  0010DC                     l400:
  3401  0010DC  AA9E               	btfss	3998,5,c	;volatile
  3402  0010DE  EF73  F008         	goto	u811
  3403  0010E2  EF75  F008         	goto	u810
  3404  0010E6                     u811:
  3405  0010E6  EF6E  F008         	goto	l400
  3406  0010EA                     u810:
  3407  0010EA                     
  3408                           ;USART.c: 34:     return RCREG;
  3409  0010EA  50AE               	movf	174,w,c	;volatile
  3410  0010EC  0012               	return		;funcret
  3411  0010EE                     __end_of_USART_Rx:
  3412                           	opt callstack 0
  3413                           
  3414 ;; *************** function _USART_Init *****************
  3415 ;; Defined at:
  3416 ;;		line 6 in file "USART.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  BAUD            4   25[COMRAM] long 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3430 ;;      Params:         4       0       0       0       0       0       0       0       0
  3431 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3433 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:        8 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    4
  3437 ;; This function calls:
  3438 ;;		___aldiv
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text20
  3445  000CB4                     __ptext20:
  3446                           	opt callstack 0
  3447  000CB4                     _USART_Init:
  3448                           	opt callstack 26
  3449  000CB4                     
  3450                           ;USART.c: 8:     TRISCbits.RC6=0;
  3451  000CB4  9C94               	bcf	148,6,c	;volatile
  3452                           
  3453                           ;USART.c: 9:     TRISCbits.RC7=1;
  3454  000CB6  8E94               	bsf	148,7,c	;volatile
  3455  000CB8                     
  3456                           ;USART.c: 11:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3457  000CB8  C01A  F010         	movff	USART_Init@BAUD,___aldiv@divisor
  3458  000CBC  C01B  F011         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
  3459  000CC0  C01C  F012         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
  3460  000CC4  C01D  F013         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
  3461  000CC8  0E00               	movlw	0
  3462  000CCA  6E0C               	movwf	___aldiv@dividend^0,c
  3463  000CCC  0E12               	movlw	18
  3464  000CCE  6E0D               	movwf	(___aldiv@dividend+1)^0,c
  3465  000CD0  0E7A               	movlw	122
  3466  000CD2  6E0E               	movwf	(___aldiv@dividend+2)^0,c
  3467  000CD4  0E00               	movlw	0
  3468  000CD6  6E0F               	movwf	(___aldiv@dividend+3)^0,c
  3469  000CD8  EC67  F003         	call	___aldiv	;wreg free
  3470  000CDC  C00C  F01E         	movff	?___aldiv,_USART_Init$1769
  3471  000CE0  C00D  F01F         	movff	?___aldiv+1,_USART_Init$1769+1
  3472  000CE4  C00E  F020         	movff	?___aldiv+2,_USART_Init$1769+2
  3473  000CE8  C00F  F021         	movff	?___aldiv+3,_USART_Init$1769+3
  3474                           
  3475                           ;USART.c: 11:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3476  000CEC  C01E  F00C         	movff	_USART_Init$1769,___aldiv@dividend
  3477  000CF0  C01F  F00D         	movff	_USART_Init$1769+1,___aldiv@dividend+1
  3478  000CF4  C020  F00E         	movff	_USART_Init$1769+2,___aldiv@dividend+2
  3479  000CF8  C021  F00F         	movff	_USART_Init$1769+3,___aldiv@dividend+3
  3480  000CFC  0E40               	movlw	64
  3481  000CFE  6E10               	movwf	___aldiv@divisor^0,c
  3482  000D00  0E00               	movlw	0
  3483  000D02  6E11               	movwf	(___aldiv@divisor+1)^0,c
  3484  000D04  0E00               	movlw	0
  3485  000D06  6E12               	movwf	(___aldiv@divisor+2)^0,c
  3486  000D08  0E00               	movlw	0
  3487  000D0A  6E13               	movwf	(___aldiv@divisor+3)^0,c
  3488  000D0C  EC67  F003         	call	___aldiv	;wreg free
  3489  000D10  040C               	decf	?___aldiv^0,w,c
  3490  000D12  6EAF               	movwf	175,c	;volatile
  3491  000D14                     
  3492                           ;USART.c: 12:     TXSTAbits.BRGH = 0;
  3493  000D14  94AC               	bcf	172,2,c	;volatile
  3494  000D16                     
  3495                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  3496  000D16  98AC               	bcf	172,4,c	;volatile
  3497  000D18                     
  3498                           ;USART.c: 14:     RCSTAbits.SPEN = 1;
  3499  000D18  8EAB               	bsf	171,7,c	;volatile
  3500  000D1A                     
  3501                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  3502  000D1A  9CAC               	bcf	172,6,c	;volatile
  3503  000D1C                     
  3504                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  3505  000D1C  8AAC               	bsf	172,5,c	;volatile
  3506  000D1E                     
  3507                           ;USART.c: 21:     RCSTAbits.RC9 = 0;
  3508  000D1E  9CAB               	bcf	171,6,c	;volatile
  3509  000D20                     
  3510                           ;USART.c: 22:    RCSTAbits.CREN = 1;
  3511  000D20  88AB               	bsf	171,4,c	;volatile
  3512  000D22  0012               	return		;funcret
  3513  000D24                     __end_of_USART_Init:
  3514                           	opt callstack 0
  3515                           
  3516 ;; *************** function ___aldiv *****************
  3517 ;; Defined at:
  3518 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  dividend        4   11[COMRAM] long 
  3521 ;;  divisor         4   15[COMRAM] long 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  quotient        4   21[COMRAM] long 
  3524 ;;  sign            1   20[COMRAM] unsigned char 
  3525 ;;  counter         1   19[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  4   11[COMRAM] long 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         8       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3538 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:       14 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    3
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_USART_Init
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text21
  3550  0006CE                     __ptext21:
  3551                           	opt callstack 0
  3552  0006CE                     ___aldiv:
  3553                           	opt callstack 26
  3554  0006CE  0E00               	movlw	0
  3555  0006D0  6E15               	movwf	___aldiv@sign^0,c
  3556  0006D2  BE13               	btfsc	(___aldiv@divisor+3)^0,7,c
  3557  0006D4  EF70  F003         	goto	u1090
  3558  0006D8  EF6E  F003         	goto	u1091
  3559  0006DC                     u1091:
  3560  0006DC  EF7A  F003         	goto	l1876
  3561  0006E0                     u1090:
  3562  0006E0  1E13               	comf	(___aldiv@divisor+3)^0,f,c
  3563  0006E2  1E12               	comf	(___aldiv@divisor+2)^0,f,c
  3564  0006E4  1E11               	comf	(___aldiv@divisor+1)^0,f,c
  3565  0006E6  6C10               	negf	___aldiv@divisor^0,c
  3566  0006E8  0E00               	movlw	0
  3567  0006EA  2211               	addwfc	(___aldiv@divisor+1)^0,f,c
  3568  0006EC  2212               	addwfc	(___aldiv@divisor+2)^0,f,c
  3569  0006EE  2213               	addwfc	(___aldiv@divisor+3)^0,f,c
  3570  0006F0  0E01               	movlw	1
  3571  0006F2  6E15               	movwf	___aldiv@sign^0,c
  3572  0006F4                     l1876:
  3573  0006F4  BE0F               	btfsc	(___aldiv@dividend+3)^0,7,c
  3574  0006F6  EF81  F003         	goto	u1100
  3575  0006FA  EF7F  F003         	goto	u1101
  3576  0006FE                     u1101:
  3577  0006FE  EF8B  F003         	goto	l1882
  3578  000702                     u1100:
  3579  000702  1E0F               	comf	(___aldiv@dividend+3)^0,f,c
  3580  000704  1E0E               	comf	(___aldiv@dividend+2)^0,f,c
  3581  000706  1E0D               	comf	(___aldiv@dividend+1)^0,f,c
  3582  000708  6C0C               	negf	___aldiv@dividend^0,c
  3583  00070A  0E00               	movlw	0
  3584  00070C  220D               	addwfc	(___aldiv@dividend+1)^0,f,c
  3585  00070E  220E               	addwfc	(___aldiv@dividend+2)^0,f,c
  3586  000710  220F               	addwfc	(___aldiv@dividend+3)^0,f,c
  3587  000712  0E01               	movlw	1
  3588  000714  1A15               	xorwf	___aldiv@sign^0,f,c
  3589  000716                     l1882:
  3590  000716  0E00               	movlw	0
  3591  000718  6E16               	movwf	___aldiv@quotient^0,c
  3592  00071A  0E00               	movlw	0
  3593  00071C  6E17               	movwf	(___aldiv@quotient+1)^0,c
  3594  00071E  0E00               	movlw	0
  3595  000720  6E18               	movwf	(___aldiv@quotient+2)^0,c
  3596  000722  0E00               	movlw	0
  3597  000724  6E19               	movwf	(___aldiv@quotient+3)^0,c
  3598  000726  5010               	movf	___aldiv@divisor^0,w,c
  3599  000728  1011               	iorwf	(___aldiv@divisor+1)^0,w,c
  3600  00072A  1012               	iorwf	(___aldiv@divisor+2)^0,w,c
  3601  00072C  1013               	iorwf	(___aldiv@divisor+3)^0,w,c
  3602  00072E  B4D8               	btfsc	status,2,c
  3603  000730  EF9C  F003         	goto	u1111
  3604  000734  EF9E  F003         	goto	u1110
  3605  000738                     u1111:
  3606  000738  EFD4  F003         	goto	l1904
  3607  00073C                     u1110:
  3608  00073C  0E01               	movlw	1
  3609  00073E  6E14               	movwf	___aldiv@counter^0,c
  3610  000740  EFA8  F003         	goto	l1890
  3611  000744                     l1888:
  3612  000744  90D8               	bcf	status,0,c
  3613  000746  3610               	rlcf	___aldiv@divisor^0,f,c
  3614  000748  3611               	rlcf	(___aldiv@divisor+1)^0,f,c
  3615  00074A  3612               	rlcf	(___aldiv@divisor+2)^0,f,c
  3616  00074C  3613               	rlcf	(___aldiv@divisor+3)^0,f,c
  3617  00074E  2A14               	incf	___aldiv@counter^0,f,c
  3618  000750                     l1890:
  3619  000750  AE13               	btfss	(___aldiv@divisor+3)^0,7,c
  3620  000752  EFAD  F003         	goto	u1121
  3621  000756  EFAF  F003         	goto	u1120
  3622  00075A                     u1121:
  3623  00075A  EFA2  F003         	goto	l1888
  3624  00075E                     u1120:
  3625  00075E                     l1892:
  3626  00075E  90D8               	bcf	status,0,c
  3627  000760  3616               	rlcf	___aldiv@quotient^0,f,c
  3628  000762  3617               	rlcf	(___aldiv@quotient+1)^0,f,c
  3629  000764  3618               	rlcf	(___aldiv@quotient+2)^0,f,c
  3630  000766  3619               	rlcf	(___aldiv@quotient+3)^0,f,c
  3631  000768  5010               	movf	___aldiv@divisor^0,w,c
  3632  00076A  5C0C               	subwf	___aldiv@dividend^0,w,c
  3633  00076C  5011               	movf	(___aldiv@divisor+1)^0,w,c
  3634  00076E  580D               	subwfb	(___aldiv@dividend+1)^0,w,c
  3635  000770  5012               	movf	(___aldiv@divisor+2)^0,w,c
  3636  000772  580E               	subwfb	(___aldiv@dividend+2)^0,w,c
  3637  000774  5013               	movf	(___aldiv@divisor+3)^0,w,c
  3638  000776  580F               	subwfb	(___aldiv@dividend+3)^0,w,c
  3639  000778  A0D8               	btfss	status,0,c
  3640  00077A  EFC1  F003         	goto	u1131
  3641  00077E  EFC3  F003         	goto	u1130
  3642  000782                     u1131:
  3643  000782  EFCC  F003         	goto	l1900
  3644  000786                     u1130:
  3645  000786  5010               	movf	___aldiv@divisor^0,w,c
  3646  000788  5E0C               	subwf	___aldiv@dividend^0,f,c
  3647  00078A  5011               	movf	(___aldiv@divisor+1)^0,w,c
  3648  00078C  5A0D               	subwfb	(___aldiv@dividend+1)^0,f,c
  3649  00078E  5012               	movf	(___aldiv@divisor+2)^0,w,c
  3650  000790  5A0E               	subwfb	(___aldiv@dividend+2)^0,f,c
  3651  000792  5013               	movf	(___aldiv@divisor+3)^0,w,c
  3652  000794  5A0F               	subwfb	(___aldiv@dividend+3)^0,f,c
  3653  000796  8016               	bsf	___aldiv@quotient^0,0,c
  3654  000798                     l1900:
  3655  000798  90D8               	bcf	status,0,c
  3656  00079A  3213               	rrcf	(___aldiv@divisor+3)^0,f,c
  3657  00079C  3212               	rrcf	(___aldiv@divisor+2)^0,f,c
  3658  00079E  3211               	rrcf	(___aldiv@divisor+1)^0,f,c
  3659  0007A0  3210               	rrcf	___aldiv@divisor^0,f,c
  3660  0007A2  2E14               	decfsz	___aldiv@counter^0,f,c
  3661  0007A4  EFAF  F003         	goto	l1892
  3662  0007A8                     l1904:
  3663  0007A8  5015               	movf	___aldiv@sign^0,w,c
  3664  0007AA  B4D8               	btfsc	status,2,c
  3665  0007AC  EFDA  F003         	goto	u1141
  3666  0007B0  EFDC  F003         	goto	u1140
  3667  0007B4                     u1141:
  3668  0007B4  EFE4  F003         	goto	l1908
  3669  0007B8                     u1140:
  3670  0007B8  1E19               	comf	(___aldiv@quotient+3)^0,f,c
  3671  0007BA  1E18               	comf	(___aldiv@quotient+2)^0,f,c
  3672  0007BC  1E17               	comf	(___aldiv@quotient+1)^0,f,c
  3673  0007BE  6C16               	negf	___aldiv@quotient^0,c
  3674  0007C0  0E00               	movlw	0
  3675  0007C2  2217               	addwfc	(___aldiv@quotient+1)^0,f,c
  3676  0007C4  2218               	addwfc	(___aldiv@quotient+2)^0,f,c
  3677  0007C6  2219               	addwfc	(___aldiv@quotient+3)^0,f,c
  3678  0007C8                     l1908:
  3679  0007C8  C016  F00C         	movff	___aldiv@quotient,?___aldiv
  3680  0007CC  C017  F00D         	movff	___aldiv@quotient+1,?___aldiv+1
  3681  0007D0  C018  F00E         	movff	___aldiv@quotient+2,?___aldiv+2
  3682  0007D4  C019  F00F         	movff	___aldiv@quotient+3,?___aldiv+3
  3683  0007D8  0012               	return		;funcret
  3684  0007DA                     __end_of___aldiv:
  3685                           	opt callstack 0
  3686                           
  3687 ;; *************** function _INT_isr *****************
  3688 ;; Defined at:
  3689 ;;		line 21 in file "MAINSPARC.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  i               2    9[COMRAM] int 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0
  3704 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3705 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3706 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3707 ;;Total ram usage:        5 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    2
  3710 ;; This function calls:
  3711 ;;		_emergencyButton
  3712 ;;		i2_USART_Tx
  3713 ;;		i2_strlen
  3714 ;; This function is called by:
  3715 ;;		Interrupt level 2
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	intcode
  3720  000008                     __pintcode:
  3721                           	opt callstack 0
  3722  000008                     _INT_isr:
  3723                           	opt callstack 24
  3724                           
  3725                           ;incstack = 0
  3726  000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3727  00000A  EDDF  F005         	call	int_func,f	;refresh shadow registers
  3728                           
  3729                           	psect	intcode_body
  3730  000BBE                     __pintcode_body:
  3731                           	opt callstack 24
  3732  000BBE                     int_func:
  3733                           	opt callstack 24
  3734  000BBE  0006               	pop		; remove dummy address from shadow register refresh
  3735  000BC0  CFD9 F008          	movff	fsr2l,??_INT_isr+1
  3736  000BC4  CFDA F009          	movff	fsr2h,??_INT_isr+2
  3737  000BC8                     
  3738                           ;MAINSPARC.c: 22: _delay((unsigned long)((10)*(8000000L/4000.0)));
  3739  000BC8  0E1A               	movlw	26
  3740  000BCA  6E07               	movwf	??_INT_isr^0,c
  3741  000BCC  0EF8               	movlw	248
  3742  000BCE                     i2u175_47:
  3743  000BCE  2EE8               	decfsz	wreg,f,c
  3744  000BD0  D7FE               	bra	i2u175_47
  3745  000BD2  2E07               	decfsz	??_INT_isr^0,f,c
  3746  000BD4  D7FC               	bra	i2u175_47
  3747  000BD6  D000               	nop2	
  3748  000BD8                     
  3749                           ;MAINSPARC.c: 25:     if(INTCON3bits.INT2IF==1){
  3750  000BD8  A2F0               	btfss	240,1,c	;volatile
  3751  000BDA  EFF1  F005         	goto	i2u168_41
  3752  000BDE  EFF3  F005         	goto	i2u168_40
  3753  000BE2                     i2u168_41:
  3754  000BE2  EFF6  F005         	goto	i2l2182
  3755  000BE6                     i2u168_40:
  3756  000BE6                     
  3757                           ;MAINSPARC.c: 26:        emergencyButton();
  3758  000BE6  EC92  F006         	call	_emergencyButton	;wreg free
  3759  000BEA                     
  3760                           ;MAINSPARC.c: 28:        INTCON3bits.INT2IF=0;
  3761  000BEA  92F0               	bcf	240,1,c	;volatile
  3762  000BEC                     i2l2182:
  3763                           
  3764                           ;MAINSPARC.c: 30: INTCON3bits.INT2IF=0;
  3765  000BEC  92F0               	bcf	240,1,c	;volatile
  3766  000BEE                     
  3767                           ;MAINSPARC.c: 31: for(int i=0; i < strlen(check); i++){
  3768  000BEE  0E00               	movlw	0
  3769  000BF0  6E0B               	movwf	(INT_isr@i+1)^0,c
  3770  000BF2  0E00               	movlw	0
  3771  000BF4  6E0A               	movwf	INT_isr@i^0,c
  3772  000BF6  EF08  F006         	goto	i2l2190
  3773  000BFA                     i2l2186:
  3774                           
  3775                           ;MAINSPARC.c: 32:     USART_Tx(check[i]);
  3776  000BFA  0E7A               	movlw	low _check
  3777  000BFC  240A               	addwf	INT_isr@i^0,w,c
  3778  000BFE  6ED9               	movwf	fsr2l,c
  3779  000C00  0E00               	movlw	high _check
  3780  000C02  200B               	addwfc	(INT_isr@i+1)^0,w,c
  3781  000C04  6EDA               	movwf	fsr2h,c
  3782  000C06  50DF               	movf	indf2,w,c
  3783  000C08  EC59  F008         	call	i2_USART_Tx
  3784  000C0C                     
  3785                           ;MAINSPARC.c: 33:     }
  3786  000C0C  4A0A               	infsnz	INT_isr@i^0,f,c
  3787  000C0E  2A0B               	incf	(INT_isr@i+1)^0,f,c
  3788  000C10                     i2l2190:
  3789  000C10  0E7A               	movlw	low _check
  3790  000C12  6E01               	movwf	i2strlen@s^0,c
  3791  000C14  0E00               	movlw	high _check
  3792  000C16  6E02               	movwf	(i2strlen@s+1)^0,c
  3793  000C18  ECDF  F007         	call	i2_strlen	;wreg free
  3794  000C1C  5001               	movf	?i2_strlen^0,w,c
  3795  000C1E  5C0A               	subwf	INT_isr@i^0,w,c
  3796  000C20  5002               	movf	(?i2_strlen+1)^0,w,c
  3797  000C22  580B               	subwfb	(INT_isr@i+1)^0,w,c
  3798  000C24  A0D8               	btfss	status,0,c
  3799  000C26  EF17  F006         	goto	i2u169_41
  3800  000C2A  EF19  F006         	goto	i2u169_40
  3801  000C2E                     i2u169_41:
  3802  000C2E  EFFD  F005         	goto	i2l2186
  3803  000C32                     i2u169_40:
  3804  000C32  C009  FFDA         	movff	??_INT_isr+2,fsr2h
  3805  000C36  C008  FFD9         	movff	??_INT_isr+1,fsr2l
  3806  000C3A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3807  000C3C  0011               	retfie		f
  3808  000C3E                     __end_of_INT_isr:
  3809                           	opt callstack 0
  3810                           
  3811 ;; *************** function _emergencyButton *****************
  3812 ;; Defined at:
  3813 ;;		line 26 in file "Interruptions.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  i               2    4[COMRAM] int 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0
  3828 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3830 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3831 ;;Total ram usage:        2 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    1
  3834 ;; This function calls:
  3835 ;;		i2_USART_Tx
  3836 ;;		i2_strlen
  3837 ;; This function is called by:
  3838 ;;		_INT_isr
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text23
  3843  000D24                     __ptext23:
  3844                           	opt callstack 0
  3845  000D24                     _emergencyButton:
  3846                           	opt callstack 24
  3847  000D24                     
  3848                           ;Interruptions.c: 27:     for(int i=0; i < strlen(emergency); i++){
  3849  000D24  0E00               	movlw	0
  3850  000D26  6E06               	movwf	(emergencyButton@i+1)^0,c
  3851  000D28  0E00               	movlw	0
  3852  000D2A  6E05               	movwf	emergencyButton@i^0,c
  3853  000D2C  EFA3  F006         	goto	i2l2150
  3854  000D30                     i2l2146:
  3855                           
  3856                           ;Interruptions.c: 28:     USART_Tx(emergency[i]);
  3857  000D30  0E60               	movlw	low _emergency
  3858  000D32  2405               	addwf	emergencyButton@i^0,w,c
  3859  000D34  6ED9               	movwf	fsr2l,c
  3860  000D36  0E00               	movlw	high _emergency
  3861  000D38  2006               	addwfc	(emergencyButton@i+1)^0,w,c
  3862  000D3A  6EDA               	movwf	fsr2h,c
  3863  000D3C  50DF               	movf	indf2,w,c
  3864  000D3E  EC59  F008         	call	i2_USART_Tx
  3865  000D42                     
  3866                           ;Interruptions.c: 29:     }
  3867  000D42  4A05               	infsnz	emergencyButton@i^0,f,c
  3868  000D44  2A06               	incf	(emergencyButton@i+1)^0,f,c
  3869  000D46                     i2l2150:
  3870  000D46  0E60               	movlw	low _emergency
  3871  000D48  6E01               	movwf	i2strlen@s^0,c
  3872  000D4A  0E00               	movlw	high _emergency
  3873  000D4C  6E02               	movwf	(i2strlen@s+1)^0,c
  3874  000D4E  ECDF  F007         	call	i2_strlen	;wreg free
  3875  000D52  5001               	movf	?i2_strlen^0,w,c
  3876  000D54  5C05               	subwf	emergencyButton@i^0,w,c
  3877  000D56  5002               	movf	(?i2_strlen+1)^0,w,c
  3878  000D58  5806               	subwfb	(emergencyButton@i+1)^0,w,c
  3879  000D5A  A0D8               	btfss	status,0,c
  3880  000D5C  EFB2  F006         	goto	i2u165_41
  3881  000D60  EFB4  F006         	goto	i2u165_40
  3882  000D64                     i2u165_41:
  3883  000D64  EF98  F006         	goto	i2l2146
  3884  000D68                     i2u165_40:
  3885  000D68                     
  3886                           ;Interruptions.c: 30:     PORTDbits.RD2= 1;
  3887  000D68  8483               	bsf	131,2,c	;volatile
  3888                           
  3889                           ;Interruptions.c: 31:     PORTDbits.RD3= 1;
  3890  000D6A  8683               	bsf	131,3,c	;volatile
  3891  000D6C                     i2l438:
  3892                           
  3893                           ;Interruptions.c: 32:     while(PORTBbits.RB2==1){
  3894  000D6C  B481               	btfsc	129,2,c	;volatile
  3895  000D6E  EFBB  F006         	goto	i2u166_41
  3896  000D72  EFBD  F006         	goto	i2u166_40
  3897  000D76                     i2u166_41:
  3898  000D76  EFB6  F006         	goto	i2l438
  3899  000D7A                     i2u166_40:
  3900  000D7A                     
  3901                           ;Interruptions.c: 34:     }if(keepgoing==1){
  3902  000D7A  0448               	decf	_keepgoing^0,w,c
  3903  000D7C  1049               	iorwf	(_keepgoing+1)^0,w,c
  3904  000D7E  A4D8               	btfss	status,2,c
  3905  000D80  EFC4  F006         	goto	i2u167_41
  3906  000D84  EFC6  F006         	goto	i2u167_40
  3907  000D88                     i2u167_41:
  3908  000D88  EFC8  F006         	goto	i2l442
  3909  000D8C                     i2u167_40:
  3910  000D8C                     
  3911                           ;Interruptions.c: 35:     PORTDbits.RD2= 0;
  3912  000D8C  9483               	bcf	131,2,c	;volatile
  3913                           
  3914                           ;Interruptions.c: 36:     PORTDbits.RD3= 0;}
  3915  000D8E  9683               	bcf	131,3,c	;volatile
  3916  000D90                     i2l442:
  3917  000D90  0012               	return		;funcret
  3918  000D92                     __end_of_emergencyButton:
  3919                           	opt callstack 0
  3920                           
  3921 ;; *************** function i2_strlen *****************
  3922 ;; Defined at:
  3923 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3926 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3927 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3928 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  3931 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3932 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3933 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  2    0[COMRAM] unsigned int 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3943 ;;      Params:         2       0       0       0       0       0       0       0       0
  3944 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3946 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3947 ;;Total ram usage:        4 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_INT_isr
  3953 ;;		_emergencyButton
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text24
  3958  000FBE                     __ptext24:
  3959                           	opt callstack 0
  3960  000FBE                     i2_strlen:
  3961                           	opt callstack 25
  3962  000FBE  C001  F003         	movff	i2strlen@s,i2strlen@a
  3963  000FC2  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  3964  000FC6  EFE7  F007         	goto	i2l1920
  3965  000FCA                     i2l1918:
  3966  000FCA  4A01               	infsnz	i2strlen@s^0,f,c
  3967  000FCC  2A02               	incf	(i2strlen@s+1)^0,f,c
  3968  000FCE                     i2l1920:
  3969  000FCE  C001  FFD9         	movff	i2strlen@s,fsr2l
  3970  000FD2  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  3971  000FD6  50DF               	movf	indf2,w,c
  3972  000FD8  A4D8               	btfss	status,2,c
  3973  000FDA  EFF1  F007         	goto	i2u116_41
  3974  000FDE  EFF3  F007         	goto	i2u116_40
  3975  000FE2                     i2u116_41:
  3976  000FE2  EFE5  F007         	goto	i2l1918
  3977  000FE6                     i2u116_40:
  3978  000FE6  5003               	movf	i2strlen@a^0,w,c
  3979  000FE8  5C01               	subwf	i2strlen@s^0,w,c
  3980  000FEA  6E01               	movwf	?i2_strlen^0,c
  3981  000FEC  5004               	movf	(i2strlen@a+1)^0,w,c
  3982  000FEE  5802               	subwfb	(i2strlen@s+1)^0,w,c
  3983  000FF0  6E02               	movwf	(?i2_strlen+1)^0,c
  3984  000FF2  0012               	return		;funcret
  3985  000FF4                     __end_ofi2_strlen:
  3986                           	opt callstack 0
  3987                           
  3988 ;; *************** function i2_USART_Tx *****************
  3989 ;; Defined at:
  3990 ;;		line 27 in file "USART.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  data            1    wreg     unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  data            1    0[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4004 ;;      Params:         0       0       0       0       0       0       0       0       0
  4005 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4007 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4008 ;;Total ram usage:        1 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_INT_isr
  4014 ;;		_emergencyButton
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text25
  4019  0010B2                     __ptext25:
  4020                           	opt callstack 0
  4021  0010B2                     i2_USART_Tx:
  4022                           	opt callstack 25
  4023                           
  4024                           ;incstack = 0
  4025                           ;i2USART_Tx@data stored from wreg
  4026  0010B2  6E01               	movwf	i2USART_Tx@data^0,c
  4027  0010B4                     i2l394:
  4028  0010B4  A89E               	btfss	158,4,c	;volatile
  4029  0010B6  EF5F  F008         	goto	i2u115_41
  4030  0010BA  EF61  F008         	goto	i2u115_40
  4031  0010BE                     i2u115_41:
  4032  0010BE  EF5A  F008         	goto	i2l394
  4033  0010C2                     i2u115_40:
  4034  0010C2                     
  4035                           ;USART.c: 29:     TXREG= data;
  4036  0010C2  C001  FFAD         	movff	i2USART_Tx@data,4013	;volatile
  4037  0010C6  0012               	return		;funcret
  4038  0010C8                     __end_ofi2_USART_Tx:
  4039                           	opt callstack 0
  4040  0000                     
  4041                           	psect	rparam
  4042  0000                     
  4043                           	psect	temp
  4044  000053                     btemp:
  4045                           	opt callstack 0
  4046  000053                     	ds	1
  4047  0000                     int$flags	set	btemp
  4048  0000                     wtemp8	set	btemp+1
  4049  0000                     ttemp5	set	btemp+1
  4050  0000                     ttemp6	set	btemp+4
  4051  0000                     ttemp7	set	btemp+8
  4052                           tosu	equ	0xFFF
  4053                           tosh	equ	0xFFE
  4054                           tosl	equ	0xFFD
  4055                           stkptr	equ	0xFFC
  4056                           pclatu	equ	0xFFB
  4057                           pclath	equ	0xFFA
  4058                           pcl	equ	0xFF9
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           prodh	equ	0xFF4
  4064                           prodl	equ	0xFF3
  4065                           indf0	equ	0xFEF
  4066                           postinc0	equ	0xFEE
  4067                           postdec0	equ	0xFED
  4068                           preinc0	equ	0xFEC
  4069                           plusw0	equ	0xFEB
  4070                           fsr0h	equ	0xFEA
  4071                           fsr0l	equ	0xFE9
  4072                           wreg	equ	0xFE8
  4073                           indf1	equ	0xFE7
  4074                           postinc1	equ	0xFE6
  4075                           postdec1	equ	0xFE5
  4076                           preinc1	equ	0xFE4
  4077                           plusw1	equ	0xFE3
  4078                           fsr1h	equ	0xFE2
  4079                           fsr1l	equ	0xFE1
  4080                           bsr	equ	0xFE0
  4081                           indf2	equ	0xFDF
  4082                           postinc2	equ	0xFDE
  4083                           postdec2	equ	0xFDD
  4084                           preinc2	equ	0xFDC
  4085                           plusw2	equ	0xFDB
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        234
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      82
    BANK0           160      0     154
    BANK1           256      0      57
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 30
		 -> emergency(BANK0[26]), check(BANK0[23]), msup(COMRAM[11]), msdown(BANK0[13]), 
		 -> msright(BANK0[13]), msleft(COMRAM[12]), msgcomp(BANK0[23]), msgeje(BANK0[22]), 
		 -> msgwrong(BANK1[27]), yl(BANK0[17]), xl(BANK0[17]), CE(BANK1[30]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 30
		 -> emergency(BANK0[26]), check(BANK0[23]), msup(COMRAM[11]), msdown(BANK0[13]), 
		 -> msright(BANK0[13]), msleft(COMRAM[12]), msgcomp(BANK0[23]), msgeje(BANK0[22]), 
		 -> msgwrong(BANK1[27]), yl(BANK0[17]), xl(BANK0[17]), CE(BANK1[30]), 

    comandos@comando	PTR unsigned char  size(2) Largest target is 8
		 -> main@instruccion(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _main->_comandos
    _comandos->_coordinateRefreshX
    _comandos->_coordinateRefreshY
    _yLimit->_strlen
    _xLimit->_strlen
    _invalidCoordinate->_strlen
    _coordinateRefreshY->_contador_pulsosD
    _coordinateRefreshX->_contador_pulsosD
    _contador_pulsosD->___wmul
    _Error->_strlen
    _Ejecutandose->_strlen
    _Completo->_strlen
    _USART_Init->___aldiv

Critical Paths under _INT_isr in COMRAM

    _INT_isr->_emergencyButton
    _emergencyButton->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   15160
                                             33 COMRAM    11    11      0
                           _Completo
                         _USART_Init
                           _USART_Rx
                           _USART_Tx
                           _comandos
                           _gpioInit
                  _interruptionsInit
                           _pwm_init
                             _xLimit
                             _yLimit
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptionsInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gpioInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _comandos                                             7     5      2   11102
                                             26 COMRAM     7     5      2
                           _Completo
                       _Ejecutandose
                              _Error
                 _coordinateRefreshX
                 _coordinateRefreshY
                  _invalidCoordinate
                             _xLimit
                             _yLimit
 ---------------------------------------------------------------------------------
 (1) _yLimit                                               2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _xLimit                                               2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _invalidCoordinate                                    2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _coordinateRefreshY                                   6     4      2    1887
                                             20 COMRAM     6     4      2
                           _USART_Tx
                   _contador_pulsosD
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _coordinateRefreshX                                   6     4      2    1887
                                             20 COMRAM     6     4      2
                           _USART_Tx
                   _contador_pulsosD
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _contador_pulsosD                                     3     1      2     637
                                             17 COMRAM     3     1      2
                             ___wmul
                       _clearOneShot
                            _oneShot
 ---------------------------------------------------------------------------------
 (4) _oneShot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _clearOneShot                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Error                                                2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Ejecutandose                                         2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Completo                                             2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     950
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             25 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                             11 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT_isr                                              5     5      0     420
                                              6 COMRAM     5     5      0
                    _emergencyButton
                         i2_USART_Tx
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) _emergencyButton                                      2     2      0     210
                                              4 COMRAM     2     2      0
                         i2_USART_Tx
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) i2_USART_Tx                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Completo
     _USART_Tx
     _strlen
   _USART_Init
     ___aldiv
   _USART_Rx
   _USART_Tx
   _comandos
     _Completo
       _USART_Tx
       _strlen
     _Ejecutandose
       _USART_Tx
       _strlen
     _Error
       _USART_Tx
       _strlen
     _coordinateRefreshX
       _USART_Tx
       _contador_pulsosD
         ___wmul
         _clearOneShot
         _oneShot
       _strlen
     _coordinateRefreshY
       _USART_Tx
       _contador_pulsosD
         ___wmul
         _clearOneShot
         _oneShot
       _strlen
     _invalidCoordinate
       _USART_Tx
       _strlen
     _xLimit
       _USART_Tx
       _strlen
     _yLimit
       _USART_Tx
       _strlen
   _gpioInit
   _interruptionsInit
   _pwm_init
   _xLimit
     _USART_Tx
     _strlen
   _yLimit
     _USART_Tx
     _strlen

 _INT_isr (ROOT)
   _emergencyButton
     i2_USART_Tx
     i2_strlen
   i2_USART_Tx
   i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      39       7       22.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     125      20        0.0%
DATA                 0      0     125       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 17:48:01 2019

                          _x 004C                            _y 004A                           _CE 0100  
                         l60 0F06                           l54 0F4C                           l71 0E6E  
                         l47 0DD6                           l72 0E74                           l48 0DDC  
                         l65 0E22                           l66 0E28                           l77 0EBA  
                         l78 0EC0                           l89 0AA0                           _xl 00CF  
                         _yl 00BE          ___wmul@multiplicand 000E                          l100 09BA  
                        l130 0394                          l132 03A2                          l212 101A  
                        l127 0376                          l400 10DC                          l129 0384  
                        l403 10EC                          l262 0BB0                          l271 10DA  
                        l263 0BBC                          l255 1064                          l432 10FC  
                        l361 0822                          l362 0832                          l267 1082  
                        l259 0B58                          l524 07D8                          l364 0840  
                        l445 1040                          l189 06CC                          l391 0D22  
                        l359 0814                          l369 08C0                          l394 109E  
                        l397 10B0                          _PR2 000FCB                          u810 10EA  
                        u811 10E6                          u900 10AC             ?_emergencyButton 0001  
                        u901 10A8                          u910 0FB0                          u911 0FAC  
                        u920 0B66                          u921 0B62                          u930 0B7A  
                        u931 0B76                          u940 0BB0                          u941 0BAC  
                        u950 0DD6                          u951 0DD2                          u880 1076  
                        u960 0F4C                          u881 1072                          u961 0F48  
                        u890 10D6                          u970 0F06                          u891 10D2  
                        u971 0F02                          u980 0E22                          u981 0E1E  
                        u990 0E6E                          u991 0E6A                          _cnt 0044  
                        _ons 0052                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         l2000 0372                         l1122 0FBC  
                       l2010 0390                         l2002 0374                         l2012 0392  
                       l2004 0388                         l2020 03C2                         l2110 05F0  
                       l2014 03A6                         l2006 038C                         l2120 0686  
                       l2112 060E                         l2040 0420                         l2016 03AA  
                       l2008 038E                         l2200 07F8                         l2122 06A4  
                       l2114 062C                         l2050 04B6                         l2042 043E  
                       l2018 03B2                         l2034 03CA                         l2210 0806  
                       l2202 07FC                         l2124 06C2                         l2116 064A  
                       l2108 05D6                         l2052 04BA                         l2044 045C  
                       l2036 03E4                         l2220 0810                         l2212 0808  
                       l2204 0800                         l2126 06C6                         l2118 0668  
                       l2070 04DE                         l2046 047A                         l2038 0402  
                       l2230 082E                         l2222 0812                         l2214 080A  
                       l2206 0802                         l2160 0D14                         l2080 0574  
                       l2072 04FC                         l2048 0498                         l2240 085C  
                       l2232 0830                         l2224 0826                         l2216 080C  
                       l2208 0804                         l2170 0D1E                         l2162 0D16  
                       l1610 10EA                         l2090 05CC                         l2082 0592  
                       l2074 051A                         l2250 0874                         l2242 085E  
                       l2234 0844                         l2226 082A                         l2218 080E  
                       l2172 0D20                         l2164 0D18                         l2156 0CB4  
                       l2092 05CE                         l2084 05B0                         l2076 0538  
                       l2068 04C4                         l2260 088E                         l2252 0876  
                       l2236 0848                         l2228 082C                         l2166 0D1A  
                       l2158 0CB8                         l2086 05B4                         l2078 0556  
                       l1606 10EE                         l2262 08A0                         l2254 0886  
                       l2238 0850                         l2168 0D1C                         l1608 10DC  
                       l1800 0E76                         l1720 10D6                         l1712 107A  
                       l2088 05B6                         l1560 0FF4                         l2264 08A4  
                       l2248 0862                         l2192 07DA                         l1730 109E  
                       l1802 0E82                         l1714 107E                         l1810 09D2  
                       l1562 1014                         l1570 104E                         l2266 08C2  
                       l2194 07DE                         l1900 0798                         l1732 10AC  
                       l1740 0FB0                         l1804 0E94                         l1724 101C  
                       l1708 1066                         l1820 0A1A                         l1812 09D6  
                       l1564 1016                         l1572 1050                         l2196 07F2  
                       l1902 07A2                         l1734 0F88                         l1806 0E98  
                       l1726 1038                         l1718 10C8                         l1750 0B66  
                       l1830 0A62                         l1814 09E2                         l1822 0A2A  
                       l1566 1018                         l1574 1062                         l2198 07F4  
                       l1904 07A8                         l1736 0F94                         l1752 0B6A  
                       l1744 0B3C                         l1832 0A66                         l1824 0A40  
                       l1816 09F4                         l1808 09BC                         l1840 08EC  
                       l1760 0D92                         l1568 1042                         l1906 07B8  
                       l1738 0F98                         l1754 0B7A                         l1746 0B48  
                       l1834 0A88                         l1826 0A44                         l1818 09F8  
                       l1850 0934                         l1842 08F0                         l1762 0D9E  
                       l1770 0F14                         l1930 0048                         l1908 07C8  
                       l1756 0B7E                         l1748 0B4A                         l1828 0A50  
                       l1836 0A98                         l1860 097C                         l1844 08FC  
                       l1852 0944                         l1764 0DB0                         l1772 0F26  
                       l1780 0EE0                         l1940 00D4                         l1932 0064  
                       l1870 06D2                         l1790 0E00                         l1758 0BB4  
                       l1862 0980                         l1854 095A                         l1846 090E  
                       l1838 08D6                         l1766 0DB4                         l1774 0F2A  
                       l1782 0EE4                         l1950 0162                         l1942 00F2  
                       l1934 0080                         l1926 0012                         l1880 0712  
                       l1872 06E0                         l1792 0E2A                         l1784 0DDE  
                       l1864 09A2                         l1856 095E                         l1848 0912  
                       l1768 0F08                         l1776 0EC2                         l1960 0256  
                       l1952 017E                         l1944 010E                         l1936 009C  
                       l1928 002C                         l1890 0750                         l1882 0716  
                       l1874 06F0                         l1794 0E36                         l1786 0DEA  
                       l1858 096A                         l1866 09B2                         l1778 0ECE  
                       l1962 0262                         l1954 019A                         l1946 012A  
                       l1938 00B8                         l1892 075E                         l1884 0726  
                       l1876 06F4                         l1868 06CE                         l1796 0E48  
                       l1788 0DFC                         l1980 0298                         l1956 019E  
                       l1948 0146                         l1964 0276                         l1894 0768  
                       l1886 073C                         l1878 0702                         l1798 0E4C  
                       l1990 032E                         l1982 02B6                         l1958 01FA  
                       l1896 0786                         l1888 0744                         l1992 034C  
                       l1984 02D4                         l1898 0796                         l1994 036A  
                       l1986 02F2                         l1978 027E                         l1996 036E  
                       l1988 0310                         l1998 0370                         u1000 0EBA  
                       u1001 0EB6                         u1010 09D2                         u1011 09CE  
                       u1100 0702                         u1020 0A1A                         u1101 06FE  
                       u1021 0A16                         u1110 073C                         u1030 0A40  
                       u1111 0738                         u1031 0A3C                         u1120 075E  
                       u1040 0A88                         u1200 0080                         u1121 075A  
                       u1041 0A84                         u1201 007C                         u1130 0786  
                       u1050 08EC                         u1210 009C                         u1131 0782  
                       u1051 08E8                         u1211 0098                         u1140 07B8  
                       u1060 0934                         u1300 019A                         u1220 00B8  
                       u1141 07B4                         u1061 0930                         u1301 0196  
                       u1221 00B4                         u1070 095A                         u1310 0298  
                       u1230 00D4                         u1071 0956                         u1311 0294  
                       u1231 00D0                         u1080 09A2                         u1400 03A2  
                       u1320 02B6                         u1240 00F2                         u1081 099E  
                       u1401 039E                         u1321 02B2                         u1241 00EE  
                       u1090 06E0                         u1410 03E4                         u1330 02D4  
                       u1250 010E                         u1170 002C                         u1091 06DC  
                       u1411 03E0                         u1331 02D0                         u1251 010A  
                       u1171 0028                         u1500 04FC                         u1420 0402  
                       u1340 02F2                         u1260 012A                         u1180 0048  
                       u1501 04F8                         u1421 03FE                         u1341 02EE  
                       u1261 0126                         u1181 0044                         u1510 051A  
                       u1430 0420                         u1350 0310                         u1270 0146  
                       u1190 0064                         _LATB 000F8A                         u1511 0516  
                       u1431 041C                         u1351 030C                         u1271 0142  
                       u1191 0060                         _LATC 000F8B                         u1600 064A  
                       u1520 0538                         u1440 043E                         u1360 032E  
                       u1280 0162                         _LATD 000F8C                         u1601 0646  
                       u1521 0534                         u1441 043A                         u1361 032A  
                       u1281 015E                         u1610 0668                         u1530 0556  
                       u1450 045C                         u1370 034C                         u1290 017E  
                       u1611 0664                         u1531 0552                         u1451 0458  
                       u1371 0348                         u1291 017A                         u1620 0686  
                       u1540 0574                         u1460 047A                         u1380 036A  
                       u1700 0822                         u1621 0682                         u1541 0570  
                       u1461 0476                         u1381 0366                         u1701 081E  
                       u1630 06A4                         u1550 0592                         u1470 0498  
                       u1390 0384                         u1710 0840                         u1631 06A0  
                       u1551 058E                         u1471 0494                         u1391 0380  
                       u1711 083C                         u1640 06C2                         u1560 05B0  
                       u1480 04B6                         u1720 0886                         u1641 06BE  
                       u1561 05AC                         u1481 04B2                         u1721 0882  
                       u1570 05F0                         u1490 04DE                         u1730 08C0  
                       u1571 05EC                         u1491 04DA                         u1731 08BC  
                       u1580 060E                         u1581 060A                         u1590 062C  
                       u1591 0628                         u1747 05C0                         _RCIF 007CF5  
                       _TMR2 000FCC              __end_of_INT_isr 0C3E                         _main 07DA  
                       _msup 0039                         fsr2h 000FDA                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 0053  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
               ___param_bank 000000         __end_of_clearOneShot 10DC         __end_of_Ejecutandose 0E76  
                ?i2_USART_Tx 0001              __end_of___aldiv 07DA                 main@contador 002C  
                      ?_main 0001                        _CMCON 000FB4                        _T2CON 000FCA  
                      i2l442 0D90                        i2l354 0C32                        i2l437 0D68  
                      i2l438 0D6C                        i2l394 10B4                        i2l397 10C6  
                      _RCREG 000FAE                        _SPBRG 000FAF                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _TRISB 000F93  
                      _TRISD 000F95                        _TXREG 000FAD                        _Error 0DDE  
                      _check 007A              __end_of_oneShot 1084             __end_of_USART_Rx 10EE  
           __end_of_USART_Tx 10B2                        main@i 002A                 USART_Tx@data 000C  
                      tablat 000FF5                        ttemp5 0054                        ttemp6 0057  
                      ttemp7 005B                        status 000FD8                        wtemp8 0054  
                ?_USART_Init 001A             __end_ofi2_strlen 0FF4               __CFG_MCLRE$OFF 000000  
            __initialization 0C3E             __end_of_Completo 0EC2                 __end_of_main 08D6  
                     ??_main 0022                __activetblptr 000000                       ?_Error 0001  
                  ??_INT_isr 0007                       _CCPR1L 000FBE                       _CCPR2L 000FBB  
                     i2l1122 0FF2                       i2l2150 0D46                       i2l2152 0D7A  
                     i2l2144 0D24                       i2l2154 0D8C                       i2l2146 0D30  
                     i2l2148 0D42                       i2l2180 0BEA                       i2l2190 0C10  
                     i2l2182 0BEC                       i2l2174 0BC8                       i2l2184 0BEE  
                     i2l2176 0BD8                       i2l2186 0BFA                       i2l2178 0BE6  
                     i2l2188 0C0C                       i2l1912 10B4                       i2l1920 0FCE  
                     i2l1914 10C2                       i2l1922 0FE6                       i2l1916 0FBE  
                     i2l1918 0FCA                       _OSCCON 000FD3          __size_ofi2_USART_Tx 0016  
                     Error@i 0010             _contador_pulsosD 0B3C             __end_of_comandos 06CE  
                  ??___aldiv 0014                       ___wmul 101C             __end_of_gpioInit 101C  
                     _xLimit 0F08                       _yLimit 0EC2                       clear_0 0CA4  
                     _msgeje 00A8              comandos@comando 001B                       _msleft 002D  
                     _msdown 00ED                       _strlen 0F88                 __pdataCOMRAM 002D  
                  ??_oneShot 000C                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8          __size_of_USART_Init 0070             __end_of_pwm_init 1066  
           emergencyButton@i 0005                   __accesstop 0060      __end_of__initialization 0CAA  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001           _coordinateRefreshX 09BC  
         _coordinateRefreshY 08D6        __size_of_clearOneShot 0014        __size_of_Ejecutandose 004C  
              __end_of_Error 0E2A               __pcstackCOMRAM 0001                 __pidataBANK0 0AA2  
               __pidataBANK1 0F4E          ?_coordinateRefreshX 0015          ?_coordinateRefreshY 0015  
                  ?_USART_Rx 0001                    ?_USART_Tx 0001                      ??_Error 0010  
                  ?i2_strlen 0001         ??_coordinateRefreshX 0017         ??_coordinateRefreshY 0017  
                  ?_Completo 0001                 _clearOneShot 10C8                 _Ejecutandose 0E2A  
             i2USART_Tx@data 0001          coordinateRefreshX@i 0017          coordinateRefreshX@j 0019  
        coordinateRefreshY@i 0017          coordinateRefreshY@j 0019            _invalidCoordinate 0D92  
                    ?___wmul 000C           ?_invalidCoordinate 0001                      _CCP1CON 000FBD  
                    _CCP2CON 000FBA                      ?_xLimit 0001                      ?_yLimit 0001  
               ??i2_USART_Tx 0001                   ??_USART_Rx 000C                   ??_USART_Tx 000C  
                    ?_strlen 000C          ??_invalidCoordinate 0010                      _INT_isr 0008  
                 ??i2_strlen 0003                    ?_comandos 001B                   ??_Completo 0010  
   __size_of_emergencyButton 006E                    ?_gpioInit 0001           __end_ofi2_USART_Tx 10C8  
  __end_of_invalidCoordinate 0DDE                 ??_USART_Init 001E                      __Hparam 0000  
                    __Lparam 0000                      ___aldiv 06CE              __size_of___wmul 0026  
                  ?_pwm_init 0001               USART_Init@BAUD 001A              __size_of_xLimit 0046  
            __size_of_yLimit 0046                      __pcinit 0C3E                      __ramtop 0800  
                    __ptext0 07DA                      __ptext1 1042                      __ptext2 10EE  
                    __ptext3 0FF4                      __ptext4 0012                      __ptext5 0EC2  
                    __ptext6 0F08                      __ptext7 0D92                      __ptext8 08D6  
                    __ptext9 09BC              __size_of_strlen 0036                    _T2CONbits 000FCA  
                    _oneShot 1066             ___aldiv@dividend 000C                      _msgcomp 0091  
   __end_of_contador_pulsosD 0BBE                      _nvalorx 0050                      _nvalory 004E  
                    _msright 00E0           __end_of_USART_Init 0D24                   ??_comandos 001D  
             __pintcode_body 0BBE         end_of_initialization 0CAA                      xLimit@i 0010  
                 ??_gpioInit 000C                      yLimit@i 0010                      int_func 0BBE  
                  _RCSTAbits 000FAB             ___aldiv@quotient 0016                      postdec1 000FE5  
                    postinc0 000FEE                      postinc2 000FDE                   ??_pwm_init 000C  
                    strlen@a 000E                      strlen@s 000C                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    Completo@i 0010  
                  _TRISCbits 000F94                    _TXSTAbits 000FAC   __size_of_invalidCoordinate 004C  
          ??_emergencyButton 0005                Ejecutandose@i 0010               __end_of___wmul 1042  
              __pidataCOMRAM 1084               __end_of_xLimit 0F4E               __end_of_yLimit 0F08  
          __size_of_USART_Rx 0012            __size_of_USART_Tx 0016               __end_of_strlen 0FBE  
        start_initialization 0C3E            __size_ofi2_strlen 0036                    i2strlen@a 0003  
                  i2strlen@s 0001            __size_of_Completo 004C       coordinateRefreshX@newX 0015  
     coordinateRefreshY@newY 0015       contador_pulsosD@pulsoD 0012                     ??___wmul 0010  
                __pdataBANK0 0060                  __pdataBANK1 0100                     ??_xLimit 0010  
                   ??_yLimit 0010                     ??_strlen 000E                  __pbssCOMRAM 0044  
                   ?_INT_isr 0001  __size_of_coordinateRefreshX 00E6  __size_of_coordinateRefreshY 00E6  
          __size_of_comandos 06BC            __size_of_gpioInit 0028                     INT_isr@i 000A  
                  __pintcode 0008                     ?___aldiv 000C                    _emergency 0060  
          __size_of_pwm_init 0024                    _keepgoing 0048                     ?_oneShot 0001  
             __size_of_Error 004C            ?_contador_pulsosD 0012           ??_contador_pulsosD 0014  
            ___aldiv@divisor 0010              ___aldiv@counter 0014               ___wmul@product 0010  
          _interruptionsInit 10EE                     i2u115_40 10C2                     i2u115_41 10BE  
                   i2u116_40 0FE6                     i2u116_41 0FE2           ?_interruptionsInit 0001  
                   i2u165_40 0D68                     i2u165_41 0D64                     i2u166_40 0D7A  
                   i2u166_41 0D76                     i2u167_40 0D8C                     i2u167_41 0D88  
                   i2u175_47 0BCE                     i2u168_40 0BE6                     i2u168_41 0BE2  
                   i2u169_40 0C32                     i2u169_41 0C2E                     _PIR1bits 000F9E  
                   _RCONbits 000FD0          ??_interruptionsInit 000C                     _USART_Rx 10DC  
                   _USART_Tx 109C            ___wmul@multiplier 000C                     i2_strlen 0FBE  
            _emergencyButton 0D24             __size_of_INT_isr 0C36                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0                    copy_data0 0C52                    copy_data1 0C72  
                  copy_data2 0C92                     _Completo 0E76              _emergencySwitch 0046  
  __end_of_interruptionsInit 10FE                     __Hrparam 0000                     __Lrparam 0000  
           __size_of___aldiv 010C              main@instruccion 0022             __size_of_oneShot 001E  
                   __ptext10 0B3C                     __ptext11 1066                     __ptext20 0CB4  
                   __ptext12 10C8                     __ptext21 06CE                     __ptext13 101C  
                   __ptext14 0DDE                     __ptext23 0D24                     __ptext15 0E2A  
                   __ptext24 0FBE                     __ptext16 0E76                     __ptext25 10B2  
                   __ptext17 0F88                     __ptext18 109C                     __ptext19 10DC  
                   _comandos 0012                ?_clearOneShot 0001                ?_Ejecutandose 0001  
                   _gpioInit 0FF4                __size_of_main 00FC              _USART_Init$1769 001E  
                   _msgwrong 011E                     int$flags 0053                     _pwm_init 1042  
    __end_of_emergencyButton 0D92                   _INTCONbits 000FF2               ??_clearOneShot 000C  
             ??_Ejecutandose 0010                     intlevel2 0000   __size_of_interruptionsInit 0010  
                 i2_USART_Tx 10B2          __CFG_FOSC$INTOSC_HS 000000                 ___aldiv@sign 0015  
 __end_of_coordinateRefreshX 0AA2   __end_of_coordinateRefreshY 09BC           invalidCoordinate@i 0010  
                 _USART_Init 0CB4    __size_of_contador_pulsosD 0082  
