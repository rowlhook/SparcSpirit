

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 04 12:20:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  000FFE                     __pidataCOMRAM:
    82                           	opt callstack 0
    83                           
    84                           ;initializer for _msup
    85  000FFE  48                 	db	72
    86  000FFF  41                 	db	65
    87  001000  43                 	db	67
    88  001001  49                 	db	73
    89  001002  41                 	db	65
    90  001003  20                 	db	32
    91  001004  41                 	db	65
    92  001005  52                 	db	82
    93  001006  52                 	db	82
    94  001007  49                 	db	73
    95  001008  42                 	db	66
    96  001009  41                 	db	65
    97  00100A  20                 	db	32
    98  00100B  00                 	db	0
    99                           
   100                           ;initializer for _msdown
   101  00100C  48                 	db	72
   102  00100D  41                 	db	65
   103  00100E  43                 	db	67
   104  00100F  49                 	db	73
   105  001010  41                 	db	65
   106  001011  20                 	db	32
   107  001012  41                 	db	65
   108  001013  42                 	db	66
   109  001014  41                 	db	65
   110  001015  4A                 	db	74
   111  001016  4F                 	db	79
   112  001017  20                 	db	32
   113  001018  00                 	db	0
   114                           
   115                           	psect	idataBANK0
   116  000AA0                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _check
   120  000AA0  53                 	db	83
   121  000AA1  54                 	db	84
   122  000AA2  49                 	db	73
   123  000AA3  4C                 	db	76
   124  000AA4  4C                 	db	76
   125  000AA5  20                 	db	32
   126  000AA6  49                 	db	73
   127  000AA7  4E                 	db	78
   128  000AA8  20                 	db	32
   129  000AA9  49                 	db	73
   130  000AAA  4E                 	db	78
   131  000AAB  54                 	db	84
   132  000AAC  45                 	db	69
   133  000AAD  52                 	db	82
   134  000AAE  52                 	db	82
   135  000AAF  55                 	db	85
   136  000AB0  50                 	db	80
   137  000AB1  54                 	db	84
   138  000AB2  49                 	db	73
   139  000AB3  4F                 	db	79
   140  000AB4  4E                 	db	78
   141  000AB5  0A                 	db	10
   142  000AB6  00                 	db	0
   143                           
   144                           ;initializer for _msgeje
   145  000AB7  43                 	db	67
   146  000AB8  4F                 	db	79
   147  000AB9  4D                 	db	77
   148  000ABA  41                 	db	65
   149  000ABB  4E                 	db	78
   150  000ABC  44                 	db	68
   151  000ABD  4F                 	db	79
   152  000ABE  20                 	db	32
   153  000ABF  45                 	db	69
   154  000AC0  4A                 	db	74
   155  000AC1  45                 	db	69
   156  000AC2  43                 	db	67
   157  000AC3  55                 	db	85
   158  000AC4  54                 	db	84
   159  000AC5  41                 	db	65
   160  000AC6  4E                 	db	78
   161  000AC7  44                 	db	68
   162  000AC8  4F                 	db	79
   163  000AC9  53                 	db	83
   164  000ACA  45                 	db	69
   165  000ACB  0A                 	db	10
   166  000ACC  00                 	db	0
   167                           
   168                           ;initializer for _msleft
   169  000ACD  48                 	db	72
   170  000ACE  41                 	db	65
   171  000ACF  43                 	db	67
   172  000AD0  49                 	db	73
   173  000AD1  41                 	db	65
   174  000AD2  20                 	db	32
   175  000AD3  4C                 	db	76
   176  000AD4  41                 	db	65
   177  000AD5  20                 	db	32
   178  000AD6  49                 	db	73
   179  000AD7  5A                 	db	90
   180  000AD8  51                 	db	81
   181  000AD9  55                 	db	85
   182  000ADA  49                 	db	73
   183  000ADB  45                 	db	69
   184  000ADC  52                 	db	82
   185  000ADD  44                 	db	68
   186  000ADE  41                 	db	65
   187  000ADF  20                 	db	32
   188  000AE0  00                 	db	0
   189                           
   190                           ;initializer for _msgwrong
   191  000AE1  43                 	db	67
   192  000AE2  4F                 	db	79
   193  000AE3  4D                 	db	77
   194  000AE4  41                 	db	65
   195  000AE5  4E                 	db	78
   196  000AE6  44                 	db	68
   197  000AE7  4F                 	db	79
   198  000AE8  20                 	db	32
   199  000AE9  49                 	db	73
   200  000AEA  4E                 	db	78
   201  000AEB  43                 	db	67
   202  000AEC  4F                 	db	79
   203  000AED  52                 	db	82
   204  000AEE  52                 	db	82
   205  000AEF  45                 	db	69
   206  000AF0  43                 	db	67
   207  000AF1  54                 	db	84
   208  000AF2  4F                 	db	79
   209  000AF3  0A                 	db	10
   210  000AF4  00                 	db	0
   211                           
   212                           ;initializer for _msgcomp
   213  000AF5  43                 	db	67
   214  000AF6  4F                 	db	79
   215  000AF7  4D                 	db	77
   216  000AF8  41                 	db	65
   217  000AF9  4E                 	db	78
   218  000AFA  44                 	db	68
   219  000AFB  4F                 	db	79
   220  000AFC  20                 	db	32
   221  000AFD  45                 	db	69
   222  000AFE  4A                 	db	74
   223  000AFF  45                 	db	69
   224  000B00  43                 	db	67
   225  000B01  55                 	db	85
   226  000B02  54                 	db	84
   227  000B03  41                 	db	65
   228  000B04  44                 	db	68
   229  000B05  4F                 	db	79
   230  000B06  0A                 	db	10
   231  000B07  00                 	db	0
   232                           
   233                           ;initializer for _msright
   234  000B08  48                 	db	72
   235  000B09  41                 	db	65
   236  000B0A  43                 	db	67
   237  000B0B  49                 	db	73
   238  000B0C  41                 	db	65
   239  000B0D  20                 	db	32
   240  000B0E  4C                 	db	76
   241  000B0F  41                 	db	65
   242  000B10  20                 	db	32
   243  000B11  44                 	db	68
   244  000B12  45                 	db	69
   245  000B13  52                 	db	82
   246  000B14  45                 	db	69
   247  000B15  43                 	db	67
   248  000B16  48                 	db	72
   249  000B17  41                 	db	65
   250  000B18  20                 	db	32
   251  000B19  00                 	db	0
   252                           
   253                           ;initializer for _yl
   254  000B1A  4C                 	db	76
   255  000B1B  69                 	db	105
   256  000B1C  6D                 	db	109
   257  000B1D  69                 	db	105
   258  000B1E  74                 	db	116
   259  000B1F  20                 	db	32
   260  000B20  79                 	db	121
   261  000B21  20                 	db	32
   262  000B22  52                 	db	82
   263  000B23  65                 	db	101
   264  000B24  61                 	db	97
   265  000B25  63                 	db	99
   266  000B26  68                 	db	104
   267  000B27  65                 	db	101
   268  000B28  64                 	db	100
   269  000B29  0A                 	db	10
   270  000B2A  00                 	db	0
   271                           
   272                           ;initializer for _xl
   273  000B2B  4C                 	db	76
   274  000B2C  69                 	db	105
   275  000B2D  6D                 	db	109
   276  000B2E  69                 	db	105
   277  000B2F  74                 	db	116
   278  000B30  20                 	db	32
   279  000B31  78                 	db	120
   280  000B32  20                 	db	32
   281  000B33  52                 	db	82
   282  000B34  65                 	db	101
   283  000B35  61                 	db	97
   284  000B36  63                 	db	99
   285  000B37  68                 	db	104
   286  000B38  65                 	db	101
   287  000B39  64                 	db	100
   288  000B3A  0A                 	db	10
   289  000B3B  00                 	db	0
   290                           
   291                           	psect	idataBANK1
   292  001019                     __pidataBANK1:
   293                           	opt callstack 0
   294                           
   295                           ;initializer for _emergency
   296  001019  45                 	db	69
   297  00101A  6D                 	db	109
   298  00101B  65                 	db	101
   299  00101C  72                 	db	114
   300  00101D  67                 	db	103
   301  00101E  65                 	db	101
   302  00101F  6E                 	db	110
   303  001020  63                 	db	99
   304  001021  79                 	db	121
   305  001022  20                 	db	32
   306  001023  42                 	db	66
   307  001024  75                 	db	117
   308  001025  74                 	db	116
   309  001026  74                 	db	116
   310  001027  6F                 	db	111
   311  001028  6E                 	db	110
   312  001029  20                 	db	32
   313  00102A  50                 	db	80
   314  00102B  72                 	db	114
   315  00102C  65                 	db	101
   316  00102D  73                 	db	115
   317  00102E  73                 	db	115
   318  00102F  65                 	db	101
   319  001030  64                 	db	100
   320  001031  0A                 	db	10
   321  001032  00                 	db	0
   322  0000                     _INTCONbits	set	4082
   323  0000                     _RCONbits	set	4048
   324  0000                     _RCREG	set	4014
   325  0000                     _TXREG	set	4013
   326  0000                     _PIR1bits	set	3998
   327  0000                     _TXSTAbits	set	4012
   328  0000                     _SPBRG	set	4015
   329  0000                     _RCSTAbits	set	4011
   330  0000                     _INTCON2bits	set	4081
   331  0000                     _OSCCON	set	4051
   332  0000                     _INTCON3bits	set	4080
   333  0000                     _PORTCbits	set	3970
   334  0000                     _T2CONbits	set	4042
   335  0000                     _TMR2	set	4044
   336  0000                     _CCP2CON	set	4026
   337  0000                     _CCP1CON	set	4029
   338  0000                     _T2CON	set	4042
   339  0000                     _TRISCbits	set	3988
   340  0000                     _CCPR2L	set	4027
   341  0000                     _CCPR1L	set	4030
   342  0000                     _PR2	set	4043
   343  0000                     _TRISB	set	3987
   344  0000                     _LATB	set	3978
   345  0000                     _PORTB	set	3969
   346  0000                     _LATC	set	3979
   347  0000                     _PORTC	set	3970
   348  0000                     _TRISD	set	3989
   349  0000                     _LATD	set	3980
   350  0000                     _PORTD	set	3971
   351  0000                     _CMCON	set	4020
   352  0000                     _PORTBbits	set	3969
   353  0000                     _PORTDbits	set	3971
   354  0000                     _RCIF	set	31989
   355                           
   356                           ; #config settings
   357  0000                     
   358                           	psect	cinit
   359  000C3E                     __pcinit:
   360                           	opt callstack 0
   361  000C3E                     start_initialization:
   362                           	opt callstack 0
   363  000C3E                     __initialization:
   364                           	opt callstack 0
   365                           
   366                           ; Initialize objects allocated to BANK1 (26 bytes)
   367                           ; load TBLPTR registers with __pidataBANK1
   368  000C3E  0E19               	movlw	low __pidataBANK1
   369  000C40  6EF6               	movwf	tblptrl,c
   370  000C42  0E10               	movlw	high __pidataBANK1
   371  000C44  6EF7               	movwf	tblptrh,c
   372  000C46  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   373  000C48  6EF8               	movwf	tblptru,c
   374  000C4A  EE01  F000         	lfsr	0,__pdataBANK1
   375  000C4E  EE10 F01A          	lfsr	1,26
   376  000C52                     copy_data0:
   377  000C52  0009               	tblrd		*+
   378  000C54  CFF5 FFEE          	movff	tablat,postinc0
   379  000C58  50E5               	movf	postdec1,w,c
   380  000C5A  50E1               	movf	fsr1l,w,c
   381  000C5C  E1FA               	bnz	copy_data0
   382                           
   383                           ; Initialize objects allocated to BANK0 (156 bytes)
   384                           ; load TBLPTR registers with __pidataBANK0
   385  000C5E  0EA0               	movlw	low __pidataBANK0
   386  000C60  6EF6               	movwf	tblptrl,c
   387  000C62  0E0A               	movlw	high __pidataBANK0
   388  000C64  6EF7               	movwf	tblptrh,c
   389  000C66  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   390  000C68  6EF8               	movwf	tblptru,c
   391  000C6A  EE00  F060         	lfsr	0,__pdataBANK0
   392  000C6E  EE10 F09C          	lfsr	1,156
   393  000C72                     copy_data1:
   394  000C72  0009               	tblrd		*+
   395  000C74  CFF5 FFEE          	movff	tablat,postinc0
   396  000C78  50E5               	movf	postdec1,w,c
   397  000C7A  50E1               	movf	fsr1l,w,c
   398  000C7C  E1FA               	bnz	copy_data1
   399                           
   400                           ; Initialize objects allocated to COMRAM (27 bytes)
   401                           ; load TBLPTR registers with __pidataCOMRAM
   402  000C7E  0EFE               	movlw	low __pidataCOMRAM
   403  000C80  6EF6               	movwf	tblptrl,c
   404  000C82  0E0F               	movlw	high __pidataCOMRAM
   405  000C84  6EF7               	movwf	tblptrh,c
   406  000C86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   407  000C88  6EF8               	movwf	tblptru,c
   408  000C8A  EE00  F022         	lfsr	0,__pdataCOMRAM
   409  000C8E  EE10 F01B          	lfsr	1,27
   410  000C92                     copy_data2:
   411  000C92  0009               	tblrd		*+
   412  000C94  CFF5 FFEE          	movff	tablat,postinc0
   413  000C98  50E5               	movf	postdec1,w,c
   414  000C9A  50E1               	movf	fsr1l,w,c
   415  000C9C  E1FA               	bnz	copy_data2
   416                           
   417                           ; Clear objects allocated to COMRAM (15 bytes)
   418  000C9E  EE00  F03D         	lfsr	0,__pbssCOMRAM
   419  000CA2  0E0F               	movlw	15
   420  000CA4                     clear_0:
   421  000CA4  6AEE               	clrf	postinc0,c
   422  000CA6  06E8               	decf	wreg,f,c
   423  000CA8  E1FD               	bnz	clear_0
   424  000CAA                     end_of_initialization:
   425                           	opt callstack 0
   426  000CAA                     __end_of__initialization:
   427                           	opt callstack 0
   428  000CAA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   429  000CAC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   430  000CAE  0100               	movlb	0
   431  000CB0  EFEA  F003         	goto	_main	;jump to C main() function
   432                           
   433                           	psect	bssCOMRAM
   434  00003D                     __pbssCOMRAM:
   435                           	opt callstack 0
   436  00003D                     _cnt:
   437                           	opt callstack 0
   438  00003D                     	ds	2
   439  00003F                     _emergencySwitch:
   440                           	opt callstack 0
   441  00003F                     	ds	2
   442  000041                     _keepgoing:
   443                           	opt callstack 0
   444  000041                     	ds	2
   445  000043                     _y:
   446                           	opt callstack 0
   447  000043                     	ds	2
   448  000045                     _x:
   449                           	opt callstack 0
   450  000045                     	ds	2
   451  000047                     _nvalory:
   452                           	opt callstack 0
   453  000047                     	ds	2
   454  000049                     _nvalorx:
   455                           	opt callstack 0
   456  000049                     	ds	2
   457  00004B                     _ons:
   458                           	opt callstack 0
   459  00004B                     	ds	1
   460                           
   461                           	psect	dataCOMRAM
   462  000022                     __pdataCOMRAM:
   463                           	opt callstack 0
   464  000022                     _msup:
   465                           	opt callstack 0
   466  000022                     	ds	14
   467  000030                     _msdown:
   468                           	opt callstack 0
   469  000030                     	ds	13
   470                           
   471                           	psect	dataBANK0
   472  000060                     __pdataBANK0:
   473                           	opt callstack 0
   474  000060                     _check:
   475                           	opt callstack 0
   476  000060                     	ds	23
   477  000077                     _msgeje:
   478                           	opt callstack 0
   479  000077                     	ds	22
   480  00008D                     _msleft:
   481                           	opt callstack 0
   482  00008D                     	ds	20
   483  0000A1                     _msgwrong:
   484                           	opt callstack 0
   485  0000A1                     	ds	20
   486  0000B5                     _msgcomp:
   487                           	opt callstack 0
   488  0000B5                     	ds	19
   489  0000C8                     _msright:
   490                           	opt callstack 0
   491  0000C8                     	ds	18
   492  0000DA                     _yl:
   493                           	opt callstack 0
   494  0000DA                     	ds	17
   495  0000EB                     _xl:
   496                           	opt callstack 0
   497  0000EB                     	ds	17
   498                           
   499                           	psect	dataBANK1
   500  000100                     __pdataBANK1:
   501                           	opt callstack 0
   502  000100                     _emergency:
   503                           	opt callstack 0
   504  000100                     	ds	26
   505                           
   506                           	psect	cstackBANK1
   507  00011A                     __pcstackBANK1:
   508                           	opt callstack 0
   509  00011A                     main@instruccion:
   510                           	opt callstack 0
   511                           
   512                           ; 8 bytes @ 0x0
   513  00011A                     	ds	8
   514  000122                     main@i:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x8
   518  000122                     	ds	2
   519  000124                     main@contador:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0xA
   523  000124                     	ds	1
   524                           
   525                           	psect	cstackCOMRAM
   526  000001                     __pcstackCOMRAM:
   527                           	opt callstack 0
   528  000001                     ?i2_strlen:
   529                           	opt callstack 0
   530  000001                     i2USART_Tx@data:
   531                           	opt callstack 0
   532  000001                     i2strlen@s:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x0
   536  000001                     	ds	2
   537  000003                     i2strlen@a:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x2
   541  000003                     	ds	2
   542  000005                     emergencyButton@i:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x4
   546  000005                     	ds	2
   547  000007                     ??_INT_isr:
   548                           
   549                           ; 1 bytes @ 0x6
   550  000007                     	ds	3
   551  00000A                     INT_isr@i:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x9
   555  00000A                     	ds	2
   556  00000C                     ?_strlen:
   557                           	opt callstack 0
   558  00000C                     ?___wmul:
   559                           	opt callstack 0
   560  00000C                     ?___aldiv:
   561                           	opt callstack 0
   562  00000C                     USART_Tx@data:
   563                           	opt callstack 0
   564  00000C                     ___wmul@multiplier:
   565                           	opt callstack 0
   566  00000C                     strlen@s:
   567                           	opt callstack 0
   568  00000C                     ___aldiv@dividend:
   569                           	opt callstack 0
   570                           
   571                           ; 4 bytes @ 0xB
   572  00000C                     	ds	2
   573  00000E                     ___wmul@multiplicand:
   574                           	opt callstack 0
   575  00000E                     strlen@a:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0xD
   579  00000E                     	ds	2
   580  000010                     xLimit@i:
   581                           	opt callstack 0
   582  000010                     yLimit@i:
   583                           	opt callstack 0
   584  000010                     Error@i:
   585                           	opt callstack 0
   586  000010                     Ejecutandose@i:
   587                           	opt callstack 0
   588  000010                     Completo@i:
   589                           	opt callstack 0
   590  000010                     ___wmul@product:
   591                           	opt callstack 0
   592  000010                     ___aldiv@divisor:
   593                           	opt callstack 0
   594                           
   595                           ; 4 bytes @ 0xF
   596  000010                     	ds	2
   597  000012                     contador_pulsosD@pulsoD:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x11
   601  000012                     	ds	2
   602  000014                     ??_contador_pulsosD:
   603  000014                     ___aldiv@counter:
   604                           	opt callstack 0
   605                           
   606                           ; 1 bytes @ 0x13
   607  000014                     	ds	1
   608  000015                     ___aldiv@sign:
   609                           	opt callstack 0
   610  000015                     coordinateRefreshX@newX:
   611                           	opt callstack 0
   612  000015                     coordinateRefreshY@newY:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x14
   616  000015                     	ds	1
   617  000016                     ___aldiv@quotient:
   618                           	opt callstack 0
   619                           
   620                           ; 4 bytes @ 0x15
   621  000016                     	ds	1
   622  000017                     coordinateRefreshX@i:
   623                           	opt callstack 0
   624  000017                     coordinateRefreshY@i:
   625                           	opt callstack 0
   626                           
   627                           ; 2 bytes @ 0x16
   628  000017                     	ds	2
   629  000019                     coordinateRefreshX@j:
   630                           	opt callstack 0
   631  000019                     coordinateRefreshY@j:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0x18
   635  000019                     	ds	1
   636  00001A                     USART_Init@BAUD:
   637                           	opt callstack 0
   638                           
   639                           ; 4 bytes @ 0x19
   640  00001A                     	ds	1
   641  00001B                     comandos@comando:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x1A
   645  00001B                     	ds	2
   646  00001D                     ??_comandos:
   647                           
   648                           ; 1 bytes @ 0x1C
   649  00001D                     	ds	1
   650  00001E                     _USART_Init$1762:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x1D
   654  00001E                     	ds	4
   655  000022                     
   656                           ; 1 bytes @ 0x21
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 35 in file "MAINSPARC.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  i               2    8[BANK1 ] int 
   667 ;;  contador        1   10[BANK1 ] unsigned char 
   668 ;;  instruccion     8    0[BANK1 ] unsigned char [8]
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   678 ;;      Params:         0       0       0       0       0       0       0       0       0
   679 ;;      Locals:         0       0      11       0       0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0
   681 ;;      Totals:         0       0      11       0       0       0       0       0       0
   682 ;;Total ram usage:       11 bytes
   683 ;; Hardware stack levels required when called:    7
   684 ;; This function calls:
   685 ;;		_Completo
   686 ;;		_USART_Init
   687 ;;		_USART_Rx
   688 ;;		_USART_Tx
   689 ;;		_comandos
   690 ;;		_gpioInit
   691 ;;		_interruptionsInit
   692 ;;		_pwm_init
   693 ;;		_xLimit
   694 ;;		_yLimit
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701  0007D4                     __ptext0:
   702                           	opt callstack 0
   703  0007D4                     _main:
   704                           	opt callstack 24
   705  0007D4                     
   706                           ;MAINSPARC.c: 36:     OSCCON=0x72;
   707  0007D4  0E72               	movlw	114
   708  0007D6  6ED3               	movwf	211,c	;volatile
   709  0007D8                     
   710                           ;MAINSPARC.c: 38:     USART_Init(9600);
   711  0007D8  0E80               	movlw	128
   712  0007DA  6E1A               	movwf	USART_Init@BAUD^0,c
   713  0007DC  0E25               	movlw	37
   714  0007DE  6E1B               	movwf	(USART_Init@BAUD+1)^0,c
   715  0007E0  0E00               	movlw	0
   716  0007E2  6E1C               	movwf	(USART_Init@BAUD+2)^0,c
   717  0007E4  0E00               	movlw	0
   718  0007E6  6E1D               	movwf	(USART_Init@BAUD+3)^0,c
   719  0007E8  EC5A  F006         	call	_USART_Init	;wreg free
   720  0007EC                     
   721                           ;MAINSPARC.c: 39:     INTCON2bits.RBPU=0;
   722  0007EC  9EF1               	bcf	241,7,c	;volatile
   723  0007EE                     
   724                           ;MAINSPARC.c: 40:     gpioInit();
   725  0007EE  ECB7  F007         	call	_gpioInit	;wreg free
   726  0007F2                     
   727                           ;MAINSPARC.c: 41:    pwm_init();
   728  0007F2  ECDE  F007         	call	_pwm_init	;wreg free
   729  0007F6                     
   730                           ;MAINSPARC.c: 42:    interruptionsInit();
   731  0007F6  EC43  F008         	call	_interruptionsInit	;wreg free
   732  0007FA                     
   733                           ;MAINSPARC.c: 43:     PORTDbits.RD2= 1;
   734  0007FA  8483               	bsf	131,2,c	;volatile
   735  0007FC                     
   736                           ;MAINSPARC.c: 44:     PORTDbits.RD3= 1;
   737  0007FC  8683               	bsf	131,3,c	;volatile
   738  0007FE                     
   739                           ;MAINSPARC.c: 45:     char instruccion[8];;MAINSPARC.c: 46:     PORTDbits.RD4=1;
   740  0007FE  8883               	bsf	131,4,c	;volatile
   741  000800                     
   742                           ;MAINSPARC.c: 47:     PORTDbits.RD5=0;
   743  000800  9A83               	bcf	131,5,c	;volatile
   744  000802                     
   745                           ;MAINSPARC.c: 48:     PORTDbits.RD6=0;
   746  000802  9C83               	bcf	131,6,c	;volatile
   747  000804                     
   748                           ;MAINSPARC.c: 49:     PORTDbits.RD0=1;
   749  000804  8083               	bsf	131,0,c	;volatile
   750  000806                     
   751                           ;MAINSPARC.c: 50:     PORTDbits.RD1=0;
   752  000806  9283               	bcf	131,1,c	;volatile
   753  000808                     
   754                           ;MAINSPARC.c: 51:     PORTDbits.RD3=0;
   755  000808  9683               	bcf	131,3,c	;volatile
   756  00080A                     
   757                           ;MAINSPARC.c: 52:     PORTDbits.RD2=0;
   758  00080A  9483               	bcf	131,2,c	;volatile
   759  00080C                     l349:
   760  00080C  A281               	btfss	129,1,c	;volatile
   761  00080E  EF0B  F004         	goto	u2471
   762  000812  EF0D  F004         	goto	u2470
   763  000816                     u2471:
   764  000816  EF06  F004         	goto	l349
   765  00081A                     u2470:
   766  00081A                     
   767                           ;MAINSPARC.c: 54:     PORTDbits.RD3=1;
   768  00081A  8683               	bsf	131,3,c	;volatile
   769                           
   770                           ;MAINSPARC.c: 55:     PORTDbits.RD2=1;
   771  00081C  8483               	bsf	131,2,c	;volatile
   772  00081E                     
   773                           ;MAINSPARC.c: 56:     xLimit();
   774  00081E  EC5E  F007         	call	_xLimit	;wreg free
   775  000822                     
   776                           ;MAINSPARC.c: 57:     PORTDbits.RD0=0;
   777  000822  9083               	bcf	131,0,c	;volatile
   778  000824                     
   779                           ;MAINSPARC.c: 58:     PORTDbits.RD1=0;
   780  000824  9283               	bcf	131,1,c	;volatile
   781  000826                     
   782                           ;MAINSPARC.c: 59:     PORTDbits.RD3=0;
   783  000826  9683               	bcf	131,3,c	;volatile
   784  000828                     
   785                           ;MAINSPARC.c: 60:     PORTDbits.RD2=0;
   786  000828  9483               	bcf	131,2,c	;volatile
   787  00082A                     l352:
   788  00082A  A081               	btfss	129,0,c	;volatile
   789  00082C  EF1A  F004         	goto	u2481
   790  000830  EF1C  F004         	goto	u2480
   791  000834                     u2481:
   792  000834  EF15  F004         	goto	l352
   793  000838                     u2480:
   794  000838                     
   795                           ;MAINSPARC.c: 62:     PORTDbits.RD3=1;
   796  000838  8683               	bsf	131,3,c	;volatile
   797                           
   798                           ;MAINSPARC.c: 63:     PORTDbits.RD2=1;
   799  00083A  8483               	bsf	131,2,c	;volatile
   800  00083C                     
   801                           ;MAINSPARC.c: 64:     yLimit();
   802  00083C  EC3B  F007         	call	_yLimit	;wreg free
   803  000840                     
   804                           ;MAINSPARC.c: 65:     x=0;
   805  000840  0E00               	movlw	0
   806  000842  6E46               	movwf	(_x+1)^0,c
   807  000844  0E00               	movlw	0
   808  000846  6E45               	movwf	_x^0,c
   809  000848                     
   810                           ;MAINSPARC.c: 66:     y=0;
   811  000848  0E00               	movlw	0
   812  00084A  6E44               	movwf	(_y+1)^0,c
   813  00084C  0E00               	movlw	0
   814  00084E  6E43               	movwf	_y^0,c
   815                           
   816                           ;MAINSPARC.c: 67:     Completo();
   817  000850  EC15  F007         	call	_Completo	;wreg free
   818  000854                     l2740:
   819                           
   820                           ;MAINSPARC.c: 73:          RCSTAbits.CREN=1;;
   821  000854  88AB               	bsf	171,4,c	;volatile
   822  000856                     
   823                           ;MAINSPARC.c: 74:         for(uint8_t contador=0; contador<9; contador++){
   824  000856  0E00               	movlw	0
   825  000858  0101               	movlb	1	; () banked
   826  00085A  6F24               	movwf	main@contador& (0+255),b
   827  00085C                     l2748:
   828                           
   829                           ; BSR set to: 1
   830                           ;MAINSPARC.c: 75:             instruccion[contador]=USART_Rx();
   831  00085C  0E1A               	movlw	low main@instruccion
   832  00085E  2524               	addwf	main@contador& (0+255),w,b
   833  000860  6ED9               	movwf	fsr2l,c
   834  000862  6ADA               	clrf	fsr2h,c
   835  000864  0E01               	movlw	high main@instruccion
   836  000866  22DA               	addwfc	fsr2h,f,c
   837  000868  EC3A  F008         	call	_USART_Rx	;wreg free
   838  00086C  6EDF               	movwf	indf2,c
   839  00086E                     
   840                           ;MAINSPARC.c: 76:         }
   841  00086E  0101               	movlb	1	; () banked
   842  000870  2B24               	incf	main@contador& (0+255),f,b
   843  000872                     
   844                           ; BSR set to: 1
   845  000872  0E08               	movlw	8
   846  000874  6524               	cpfsgt	main@contador& (0+255),b
   847  000876  EF3F  F004         	goto	u2491
   848  00087A  EF41  F004         	goto	u2490
   849  00087E                     u2491:
   850  00087E  EF2E  F004         	goto	l2748
   851  000882                     u2490:
   852  000882                     
   853                           ; BSR set to: 1
   854                           ;MAINSPARC.c: 79:        for(int i=0; i < 9; i++){
   855  000882  0E00               	movlw	0
   856  000884  6F23               	movwf	(main@i+1)& (0+255),b
   857  000886  0E00               	movlw	0
   858  000888  6F22               	movwf	main@i& (0+255),b
   859  00088A                     l2760:
   860                           
   861                           ; BSR set to: 1
   862                           ;MAINSPARC.c: 80:     USART_Tx(instruccion[i]);
   863  00088A  0E1A               	movlw	low main@instruccion
   864  00088C  2522               	addwf	main@i& (0+255),w,b
   865  00088E  6ED9               	movwf	fsr2l,c
   866  000890  0E01               	movlw	high main@instruccion
   867  000892  2123               	addwfc	(main@i+1)& (0+255),w,b
   868  000894  6EDA               	movwf	fsr2h,c
   869  000896  50DF               	movf	indf2,w,c
   870  000898  EC1A  F008         	call	_USART_Tx
   871  00089C                     
   872                           ;MAINSPARC.c: 81:     }
   873  00089C  0101               	movlb	1	; () banked
   874  00089E  4B22               	infsnz	main@i& (0+255),f,b
   875  0008A0  2B23               	incf	(main@i+1)& (0+255),f,b
   876  0008A2                     
   877                           ; BSR set to: 1
   878  0008A2  BF23               	btfsc	(main@i+1)& (0+255),7,b
   879  0008A4  EF5D  F004         	goto	u2501
   880  0008A8  5123               	movf	(main@i+1)& (0+255),w,b
   881  0008AA  E109               	bnz	u2500
   882  0008AC  0E09               	movlw	9
   883  0008AE  5D22               	subwf	main@i& (0+255),w,b
   884  0008B0  A0D8               	btfss	status,0,c
   885  0008B2  EF5D  F004         	goto	u2501
   886  0008B6  EF5F  F004         	goto	u2500
   887  0008BA                     u2501:
   888  0008BA  EF45  F004         	goto	l2760
   889  0008BE                     u2500:
   890  0008BE                     
   891                           ; BSR set to: 1
   892                           ;MAINSPARC.c: 82:           RCSTAbits.CREN=0;;
   893  0008BE  98AB               	bcf	171,4,c	;volatile
   894  0008C0                     
   895                           ; BSR set to: 1
   896                           ;MAINSPARC.c: 83:         comandos(instruccion);
   897  0008C0  0E1A               	movlw	low main@instruccion
   898  0008C2  6E1B               	movwf	comandos@comando^0,c
   899  0008C4  0E01               	movlw	high main@instruccion
   900  0008C6  6E1C               	movwf	(comandos@comando+1)^0,c
   901  0008C8  EC09  F000         	call	_comandos	;wreg free
   902  0008CC  EF2A  F004         	goto	l2740
   903  0008D0  EF07  F000         	goto	start
   904  0008D4                     __end_of_main:
   905                           	opt callstack 0
   906                           
   907 ;; *************** function _pwm_init *****************
   908 ;; Defined at:
   909 ;;		line 23 in file "pwm.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    3
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text1
   938  000FBC                     __ptext1:
   939                           	opt callstack 0
   940  000FBC                     _pwm_init:
   941                           	opt callstack 27
   942  000FBC                     
   943                           ;pwm.c: 25:     PR2 = 249;
   944  000FBC  0EF9               	movlw	249
   945  000FBE  6ECB               	movwf	203,c	;volatile
   946                           
   947                           ;pwm.c: 26:     CCPR1L= (500>>2 & (0x3FF));
   948  000FC0  0E7D               	movlw	125
   949  000FC2  6EBE               	movwf	190,c	;volatile
   950                           
   951                           ;pwm.c: 27:     CCPR2L= (500>>2 & (0x3FF));
   952  000FC4  0E7D               	movlw	125
   953  000FC6  6EBB               	movwf	187,c	;volatile
   954  000FC8                     
   955                           ;pwm.c: 28:     TRISCbits.RC1=0;
   956  000FC8  9294               	bcf	148,1,c	;volatile
   957  000FCA                     
   958                           ;pwm.c: 29:     TRISCbits.RC2=0;
   959  000FCA  9494               	bcf	148,2,c	;volatile
   960                           
   961                           ;pwm.c: 30:     T2CON = 0x03;
   962  000FCC  0E03               	movlw	3
   963  000FCE  6ECA               	movwf	202,c	;volatile
   964                           
   965                           ;pwm.c: 31:     CCP1CON = 0x0C;
   966  000FD0  0E0C               	movlw	12
   967  000FD2  6EBD               	movwf	189,c	;volatile
   968                           
   969                           ;pwm.c: 32:     CCP2CON=0x0C;
   970  000FD4  0E0C               	movlw	12
   971  000FD6  6EBA               	movwf	186,c	;volatile
   972                           
   973                           ;pwm.c: 33:     TMR2=0;
   974  000FD8  0E00               	movlw	0
   975  000FDA  6ECC               	movwf	204,c	;volatile
   976  000FDC                     
   977                           ;pwm.c: 34:     T2CONbits.TMR2ON =1;
   978  000FDC  84CA               	bsf	202,2,c	;volatile
   979  000FDE  0012               	return		;funcret
   980  000FE0                     __end_of_pwm_init:
   981                           	opt callstack 0
   982                           
   983 ;; *************** function _interruptionsInit *****************
   984 ;; Defined at:
   985 ;;		line 10 in file "Interruptions.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		None
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         0       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    3
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text2
  1014  001086                     __ptext2:
  1015                           	opt callstack 0
  1016  001086                     _interruptionsInit:
  1017                           	opt callstack 27
  1018  001086                     
  1019                           ;Interruptions.c: 11:     RCONbits.IPEN=0;
  1020  001086  9ED0               	bcf	208,7,c	;volatile
  1021                           
  1022                           ;Interruptions.c: 12:     INTCONbits.PEIE=1;
  1023  001088  8CF2               	bsf	242,6,c	;volatile
  1024                           
  1025                           ;Interruptions.c: 13:     INTCONbits.GIE=1;
  1026  00108A  8EF2               	bsf	242,7,c	;volatile
  1027                           
  1028                           ;Interruptions.c: 14:     INTCON3bits.INT2F=0;
  1029  00108C  92F0               	bcf	240,1,c	;volatile
  1030                           
  1031                           ;Interruptions.c: 16:     INTCON2bits.INTEDG2=1;
  1032  00108E  88F1               	bsf	241,4,c	;volatile
  1033                           
  1034                           ;Interruptions.c: 17:     INTCON3bits.INT2E=1;
  1035  001090  88F0               	bsf	240,4,c	;volatile
  1036                           
  1037                           ;Interruptions.c: 21:     INTCON3bits.INT2IF=0;
  1038  001092  92F0               	bcf	240,1,c	;volatile
  1039  001094  0012               	return		;funcret
  1040  001096                     __end_of_interruptionsInit:
  1041                           	opt callstack 0
  1042                           
  1043 ;; *************** function _gpioInit *****************
  1044 ;; Defined at:
  1045 ;;		line 2 in file "GPIO.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    3
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text3
  1074  000F6E                     __ptext3:
  1075                           	opt callstack 0
  1076  000F6E                     _gpioInit:
  1077                           	opt callstack 27
  1078  000F6E                     
  1079                           ;GPIO.c: 3:     CMCON=0x07;
  1080  000F6E  0E07               	movlw	7
  1081  000F70  6EB4               	movwf	180,c	;volatile
  1082                           
  1083                           ;GPIO.c: 4:     PORTD=0x00;
  1084  000F72  0E00               	movlw	0
  1085  000F74  6E83               	movwf	131,c	;volatile
  1086                           
  1087                           ;GPIO.c: 5:     LATD=0x00;
  1088  000F76  0E00               	movlw	0
  1089  000F78  6E8C               	movwf	140,c	;volatile
  1090                           
  1091                           ;GPIO.c: 6:     TRISD=0x00;
  1092  000F7A  0E00               	movlw	0
  1093  000F7C  6E95               	movwf	149,c	;volatile
  1094                           
  1095                           ;GPIO.c: 7:     PORTC=0x00;
  1096  000F7E  0E00               	movlw	0
  1097  000F80  6E82               	movwf	130,c	;volatile
  1098                           
  1099                           ;GPIO.c: 8:     LATC=0x00;
  1100  000F82  0E00               	movlw	0
  1101  000F84  6E8B               	movwf	139,c	;volatile
  1102                           
  1103                           ;GPIO.c: 9:     PORTB=0x00;
  1104  000F86  0E00               	movlw	0
  1105  000F88  6E81               	movwf	129,c	;volatile
  1106                           
  1107                           ;GPIO.c: 10:     LATB=0x00;
  1108  000F8A  0E00               	movlw	0
  1109  000F8C  6E8A               	movwf	138,c	;volatile
  1110  000F8E                     
  1111                           ;GPIO.c: 11:     TRISB=0xFF;
  1112  000F8E  6893               	setf	147,c	;volatile
  1113  000F90                     
  1114                           ;GPIO.c: 12:     PORTDbits.RD3=1;
  1115  000F90  8683               	bsf	131,3,c	;volatile
  1116  000F92                     
  1117                           ;GPIO.c: 13:     PORTDbits.RD2=1;
  1118  000F92  8483               	bsf	131,2,c	;volatile
  1119  000F94  0012               	return		;funcret
  1120  000F96                     __end_of_gpioInit:
  1121                           	opt callstack 0
  1122                           
  1123 ;; *************** function _comandos *****************
  1124 ;; Defined at:
  1125 ;;		line 106 in file "Comandos.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  comando         2   26[COMRAM] PTR unsigned char 
  1128 ;;		 -> main@instruccion(8), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   26[COMRAM] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         2       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1143 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:        7 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    6
  1147 ;; This function calls:
  1148 ;;		_Completo
  1149 ;;		_Ejecutandose
  1150 ;;		_Error
  1151 ;;		_coordinateRefreshX
  1152 ;;		_coordinateRefreshY
  1153 ;;		_xLimit
  1154 ;;		_yLimit
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text4
  1161  000012                     __ptext4:
  1162                           	opt callstack 0
  1163  000012                     _comandos:
  1164                           	opt callstack 24
  1165  000012                     
  1166                           ;Comandos.c: 107:     if(comando[0]=='C'){
  1167  000012  C01B  FFD9         	movff	comandos@comando,fsr2l
  1168  000016  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1169  00001A  0E43               	movlw	67
  1170  00001C  18DE               	xorwf	postinc2,w,c
  1171  00001E  A4D8               	btfss	status,2,c
  1172  000020  EF14  F000         	goto	u1981
  1173  000024  EF16  F000         	goto	u1980
  1174  000028                     u1981:
  1175  000028  EF3F  F001         	goto	l2486
  1176  00002C                     u1980:
  1177  00002C                     
  1178                           ;Comandos.c: 108:         if (comando[1]>='0' && comando[1]<='3'){
  1179  00002C  EE20 F001          	lfsr	2,1
  1180  000030  501B               	movf	comandos@comando^0,w,c
  1181  000032  26D9               	addwf	fsr2l,f,c
  1182  000034  501C               	movf	(comandos@comando+1)^0,w,c
  1183  000036  22DA               	addwfc	fsr2h,f,c
  1184  000038  0E2F               	movlw	47
  1185  00003A  64DF               	cpfsgt	indf2,c
  1186  00003C  EF22  F000         	goto	u1991
  1187  000040  EF24  F000         	goto	u1990
  1188  000044                     u1991:
  1189  000044  EF3B  F001         	goto	l2472
  1190  000048                     u1990:
  1191  000048  EE20 F001          	lfsr	2,1
  1192  00004C  501B               	movf	comandos@comando^0,w,c
  1193  00004E  26D9               	addwf	fsr2l,f,c
  1194  000050  501C               	movf	(comandos@comando+1)^0,w,c
  1195  000052  22DA               	addwfc	fsr2h,f,c
  1196  000054  0E34               	movlw	52
  1197  000056  60DF               	cpfslt	indf2,c
  1198  000058  EF30  F000         	goto	u2001
  1199  00005C  EF32  F000         	goto	u2000
  1200  000060                     u2001:
  1201  000060  EF3B  F001         	goto	l2472
  1202  000064                     u2000:
  1203  000064                     
  1204                           ;Comandos.c: 109:             if (comando[2]>='0' && comando[2]<='9'){
  1205  000064  EE20 F002          	lfsr	2,2
  1206  000068  501B               	movf	comandos@comando^0,w,c
  1207  00006A  26D9               	addwf	fsr2l,f,c
  1208  00006C  501C               	movf	(comandos@comando+1)^0,w,c
  1209  00006E  22DA               	addwfc	fsr2h,f,c
  1210  000070  0E2F               	movlw	47
  1211  000072  64DF               	cpfsgt	indf2,c
  1212  000074  EF3E  F000         	goto	u2011
  1213  000078  EF40  F000         	goto	u2010
  1214  00007C                     u2011:
  1215  00007C  EF3B  F001         	goto	l2472
  1216  000080                     u2010:
  1217  000080  EE20 F002          	lfsr	2,2
  1218  000084  501B               	movf	comandos@comando^0,w,c
  1219  000086  26D9               	addwf	fsr2l,f,c
  1220  000088  501C               	movf	(comandos@comando+1)^0,w,c
  1221  00008A  22DA               	addwfc	fsr2h,f,c
  1222  00008C  0E3A               	movlw	58
  1223  00008E  60DF               	cpfslt	indf2,c
  1224  000090  EF4C  F000         	goto	u2021
  1225  000094  EF4E  F000         	goto	u2020
  1226  000098                     u2021:
  1227  000098  EF3B  F001         	goto	l2472
  1228  00009C                     u2020:
  1229  00009C                     
  1230                           ;Comandos.c: 110:                 if (comando[3]>='0' && comando[3]<='9'){
  1231  00009C  EE20 F003          	lfsr	2,3
  1232  0000A0  501B               	movf	comandos@comando^0,w,c
  1233  0000A2  26D9               	addwf	fsr2l,f,c
  1234  0000A4  501C               	movf	(comandos@comando+1)^0,w,c
  1235  0000A6  22DA               	addwfc	fsr2h,f,c
  1236  0000A8  0E2F               	movlw	47
  1237  0000AA  64DF               	cpfsgt	indf2,c
  1238  0000AC  EF5A  F000         	goto	u2031
  1239  0000B0  EF5C  F000         	goto	u2030
  1240  0000B4                     u2031:
  1241  0000B4  EF3B  F001         	goto	l2472
  1242  0000B8                     u2030:
  1243  0000B8  EE20 F003          	lfsr	2,3
  1244  0000BC  501B               	movf	comandos@comando^0,w,c
  1245  0000BE  26D9               	addwf	fsr2l,f,c
  1246  0000C0  501C               	movf	(comandos@comando+1)^0,w,c
  1247  0000C2  22DA               	addwfc	fsr2h,f,c
  1248  0000C4  0E3A               	movlw	58
  1249  0000C6  60DF               	cpfslt	indf2,c
  1250  0000C8  EF68  F000         	goto	u2041
  1251  0000CC  EF6A  F000         	goto	u2040
  1252  0000D0                     u2041:
  1253  0000D0  EF3B  F001         	goto	l2472
  1254  0000D4                     u2040:
  1255  0000D4                     
  1256                           ;Comandos.c: 111:                     if (comando[4]==','){
  1257  0000D4  EE20 F004          	lfsr	2,4
  1258  0000D8  501B               	movf	comandos@comando^0,w,c
  1259  0000DA  26D9               	addwf	fsr2l,f,c
  1260  0000DC  501C               	movf	(comandos@comando+1)^0,w,c
  1261  0000DE  22DA               	addwfc	fsr2h,f,c
  1262  0000E0  0E2C               	movlw	44
  1263  0000E2  18DE               	xorwf	postinc2,w,c
  1264  0000E4  A4D8               	btfss	status,2,c
  1265  0000E6  EF77  F000         	goto	u2051
  1266  0000EA  EF79  F000         	goto	u2050
  1267  0000EE                     u2051:
  1268  0000EE  EF3B  F001         	goto	l2472
  1269  0000F2                     u2050:
  1270  0000F2                     
  1271                           ;Comandos.c: 112:                         if (comando[5]>='0' && comando[5]<='3'){
  1272  0000F2  EE20 F005          	lfsr	2,5
  1273  0000F6  501B               	movf	comandos@comando^0,w,c
  1274  0000F8  26D9               	addwf	fsr2l,f,c
  1275  0000FA  501C               	movf	(comandos@comando+1)^0,w,c
  1276  0000FC  22DA               	addwfc	fsr2h,f,c
  1277  0000FE  0E2F               	movlw	47
  1278  000100  64DF               	cpfsgt	indf2,c
  1279  000102  EF85  F000         	goto	u2061
  1280  000106  EF87  F000         	goto	u2060
  1281  00010A                     u2061:
  1282  00010A  EF3B  F001         	goto	l2472
  1283  00010E                     u2060:
  1284  00010E  EE20 F005          	lfsr	2,5
  1285  000112  501B               	movf	comandos@comando^0,w,c
  1286  000114  26D9               	addwf	fsr2l,f,c
  1287  000116  501C               	movf	(comandos@comando+1)^0,w,c
  1288  000118  22DA               	addwfc	fsr2h,f,c
  1289  00011A  0E34               	movlw	52
  1290  00011C  60DF               	cpfslt	indf2,c
  1291  00011E  EF93  F000         	goto	u2071
  1292  000122  EF95  F000         	goto	u2070
  1293  000126                     u2071:
  1294  000126  EF3B  F001         	goto	l2472
  1295  00012A                     u2070:
  1296  00012A                     
  1297                           ;Comandos.c: 113:                             if (comando[6]>='0' && comando[6]<='9'){
  1298  00012A  EE20 F006          	lfsr	2,6
  1299  00012E  501B               	movf	comandos@comando^0,w,c
  1300  000130  26D9               	addwf	fsr2l,f,c
  1301  000132  501C               	movf	(comandos@comando+1)^0,w,c
  1302  000134  22DA               	addwfc	fsr2h,f,c
  1303  000136  0E2F               	movlw	47
  1304  000138  64DF               	cpfsgt	indf2,c
  1305  00013A  EFA1  F000         	goto	u2081
  1306  00013E  EFA3  F000         	goto	u2080
  1307  000142                     u2081:
  1308  000142  EF3B  F001         	goto	l2472
  1309  000146                     u2080:
  1310  000146  EE20 F006          	lfsr	2,6
  1311  00014A  501B               	movf	comandos@comando^0,w,c
  1312  00014C  26D9               	addwf	fsr2l,f,c
  1313  00014E  501C               	movf	(comandos@comando+1)^0,w,c
  1314  000150  22DA               	addwfc	fsr2h,f,c
  1315  000152  0E3A               	movlw	58
  1316  000154  60DF               	cpfslt	indf2,c
  1317  000156  EFAF  F000         	goto	u2091
  1318  00015A  EFB1  F000         	goto	u2090
  1319  00015E                     u2091:
  1320  00015E  EF3B  F001         	goto	l2472
  1321  000162                     u2090:
  1322  000162                     
  1323                           ;Comandos.c: 114:                                 if (comando[7]>='0' && comando[7]<='9'
      +                          ){
  1324  000162  EE20 F007          	lfsr	2,7
  1325  000166  501B               	movf	comandos@comando^0,w,c
  1326  000168  26D9               	addwf	fsr2l,f,c
  1327  00016A  501C               	movf	(comandos@comando+1)^0,w,c
  1328  00016C  22DA               	addwfc	fsr2h,f,c
  1329  00016E  0E2F               	movlw	47
  1330  000170  64DF               	cpfsgt	indf2,c
  1331  000172  EFBD  F000         	goto	u2101
  1332  000176  EFBF  F000         	goto	u2100
  1333  00017A                     u2101:
  1334  00017A  EF3B  F001         	goto	l2472
  1335  00017E                     u2100:
  1336  00017E  EE20 F007          	lfsr	2,7
  1337  000182  501B               	movf	comandos@comando^0,w,c
  1338  000184  26D9               	addwf	fsr2l,f,c
  1339  000186  501C               	movf	(comandos@comando+1)^0,w,c
  1340  000188  22DA               	addwfc	fsr2h,f,c
  1341  00018A  0E3A               	movlw	58
  1342  00018C  60DF               	cpfslt	indf2,c
  1343  00018E  EFCB  F000         	goto	u2111
  1344  000192  EFCD  F000         	goto	u2110
  1345  000196                     u2111:
  1346  000196  EF3B  F001         	goto	l2472
  1347  00019A                     u2110:
  1348  00019A                     
  1349                           ;Comandos.c: 115:                                     Ejecutandose();
  1350  00019A  ECEF  F006         	call	_Ejecutandose	;wreg free
  1351  00019E                     
  1352                           ;Comandos.c: 116:                                     nvalorx= ((comando[1]-48)*100)+((c
      +                          omando[2]-48)*10)+(comando[3]-48);
  1353  00019E  EE20 F001          	lfsr	2,1
  1354  0001A2  501B               	movf	comandos@comando^0,w,c
  1355  0001A4  26D9               	addwf	fsr2l,f,c
  1356  0001A6  501C               	movf	(comandos@comando+1)^0,w,c
  1357  0001A8  22DA               	addwfc	fsr2h,f,c
  1358  0001AA  50DF               	movf	indf2,w,c
  1359  0001AC  6E1D               	movwf	??_comandos^0,c
  1360  0001AE  501D               	movf	??_comandos^0,w,c
  1361  0001B0  0D64               	mullw	100
  1362  0001B2  CFF3 F01E          	movff	prodl,??_comandos+1
  1363  0001B6  CFF4 F01F          	movff	prodh,??_comandos+2
  1364  0001BA  EE20 F002          	lfsr	2,2
  1365  0001BE  501B               	movf	comandos@comando^0,w,c
  1366  0001C0  26D9               	addwf	fsr2l,f,c
  1367  0001C2  501C               	movf	(comandos@comando+1)^0,w,c
  1368  0001C4  22DA               	addwfc	fsr2h,f,c
  1369  0001C6  50DF               	movf	indf2,w,c
  1370  0001C8  6E20               	movwf	(??_comandos+3)^0,c
  1371  0001CA  5020               	movf	(??_comandos+3)^0,w,c
  1372  0001CC  0D0A               	mullw	10
  1373  0001CE  50F3               	movf	243,w,c
  1374  0001D0  261E               	addwf	(??_comandos+1)^0,f,c
  1375  0001D2  50F4               	movf	244,w,c
  1376  0001D4  221F               	addwfc	(??_comandos+2)^0,f,c
  1377  0001D6  EE20 F003          	lfsr	2,3
  1378  0001DA  501B               	movf	comandos@comando^0,w,c
  1379  0001DC  26D9               	addwf	fsr2l,f,c
  1380  0001DE  501C               	movf	(comandos@comando+1)^0,w,c
  1381  0001E0  22DA               	addwfc	fsr2h,f,c
  1382  0001E2  50DF               	movf	indf2,w,c
  1383  0001E4  6E21               	movwf	(??_comandos+4)^0,c
  1384  0001E6  5021               	movf	(??_comandos+4)^0,w,c
  1385  0001E8  261E               	addwf	(??_comandos+1)^0,f,c
  1386  0001EA  0E00               	movlw	0
  1387  0001EC  221F               	addwfc	(??_comandos+2)^0,f,c
  1388  0001EE  0E30               	movlw	48
  1389  0001F0  241E               	addwf	(??_comandos+1)^0,w,c
  1390  0001F2  6E49               	movwf	_nvalorx^0,c
  1391  0001F4  0EEB               	movlw	235
  1392  0001F6  201F               	addwfc	(??_comandos+2)^0,w,c
  1393  0001F8  6E4A               	movwf	(_nvalorx+1)^0,c
  1394  0001FA                     
  1395                           ;Comandos.c: 117:                                     nvalory= ((comando[5]-48)*100)+((c
      +                          omando[6]-48)*10)+(comando[7]-48);
  1396  0001FA  EE20 F005          	lfsr	2,5
  1397  0001FE  501B               	movf	comandos@comando^0,w,c
  1398  000200  26D9               	addwf	fsr2l,f,c
  1399  000202  501C               	movf	(comandos@comando+1)^0,w,c
  1400  000204  22DA               	addwfc	fsr2h,f,c
  1401  000206  50DF               	movf	indf2,w,c
  1402  000208  6E1D               	movwf	??_comandos^0,c
  1403  00020A  501D               	movf	??_comandos^0,w,c
  1404  00020C  0D64               	mullw	100
  1405  00020E  CFF3 F01E          	movff	prodl,??_comandos+1
  1406  000212  CFF4 F01F          	movff	prodh,??_comandos+2
  1407  000216  EE20 F006          	lfsr	2,6
  1408  00021A  501B               	movf	comandos@comando^0,w,c
  1409  00021C  26D9               	addwf	fsr2l,f,c
  1410  00021E  501C               	movf	(comandos@comando+1)^0,w,c
  1411  000220  22DA               	addwfc	fsr2h,f,c
  1412  000222  50DF               	movf	indf2,w,c
  1413  000224  6E20               	movwf	(??_comandos+3)^0,c
  1414  000226  5020               	movf	(??_comandos+3)^0,w,c
  1415  000228  0D0A               	mullw	10
  1416  00022A  50F3               	movf	243,w,c
  1417  00022C  261E               	addwf	(??_comandos+1)^0,f,c
  1418  00022E  50F4               	movf	244,w,c
  1419  000230  221F               	addwfc	(??_comandos+2)^0,f,c
  1420  000232  EE20 F007          	lfsr	2,7
  1421  000236  501B               	movf	comandos@comando^0,w,c
  1422  000238  26D9               	addwf	fsr2l,f,c
  1423  00023A  501C               	movf	(comandos@comando+1)^0,w,c
  1424  00023C  22DA               	addwfc	fsr2h,f,c
  1425  00023E  50DF               	movf	indf2,w,c
  1426  000240  6E21               	movwf	(??_comandos+4)^0,c
  1427  000242  5021               	movf	(??_comandos+4)^0,w,c
  1428  000244  261E               	addwf	(??_comandos+1)^0,f,c
  1429  000246  0E00               	movlw	0
  1430  000248  221F               	addwfc	(??_comandos+2)^0,f,c
  1431  00024A  0E30               	movlw	48
  1432  00024C  241E               	addwf	(??_comandos+1)^0,w,c
  1433  00024E  6E47               	movwf	_nvalory^0,c
  1434  000250  0EEB               	movlw	235
  1435  000252  201F               	addwfc	(??_comandos+2)^0,w,c
  1436  000254  6E48               	movwf	(_nvalory+1)^0,c
  1437  000256                     
  1438                           ;Comandos.c: 119:                                     coordinateRefreshX(nvalorx);
  1439  000256  C049  F015         	movff	_nvalorx,coordinateRefreshX@newX
  1440  00025A  C04A  F016         	movff	_nvalorx+1,coordinateRefreshX@newX+1
  1441  00025E  ECDD  F004         	call	_coordinateRefreshX	;wreg free
  1442  000262                     
  1443                           ;Comandos.c: 120:                                     coordinateRefreshY(nvalory);
  1444  000262  C047  F015         	movff	_nvalory,coordinateRefreshY@newY
  1445  000266  C048  F016         	movff	_nvalory+1,coordinateRefreshY@newY+1
  1446  00026A  EC6A  F004         	call	_coordinateRefreshY	;wreg free
  1447                           
  1448                           ;Comandos.c: 121:                                     Completo();
  1449  00026E  EC15  F007         	call	_Completo	;wreg free
  1450                           
  1451                           ;Comandos.c: 122:                                 }
  1452  000272  EF63  F003         	goto	l181
  1453  000276                     l2472:
  1454                           
  1455                           ;Comandos.c: 124:                                     Error();
  1456  000276  ECC9  F006         	call	_Error	;wreg free
  1457  00027A  EF63  F003         	goto	l181
  1458  00027E                     l2486:
  1459  00027E  C01B  FFD9         	movff	comandos@comando,fsr2l
  1460  000282  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1461  000286  0E47               	movlw	71
  1462  000288  18DE               	xorwf	postinc2,w,c
  1463  00028A  A4D8               	btfss	status,2,c
  1464  00028C  EF4A  F001         	goto	u2121
  1465  000290  EF4C  F001         	goto	u2120
  1466  000294                     u2121:
  1467  000294  EFE1  F001         	goto	l2542
  1468  000298                     u2120:
  1469  000298                     
  1470                           ;Comandos.c: 153:         if (comando[1]=='O'){
  1471  000298  EE20 F001          	lfsr	2,1
  1472  00029C  501B               	movf	comandos@comando^0,w,c
  1473  00029E  26D9               	addwf	fsr2l,f,c
  1474  0002A0  501C               	movf	(comandos@comando+1)^0,w,c
  1475  0002A2  22DA               	addwfc	fsr2h,f,c
  1476  0002A4  0E4F               	movlw	79
  1477  0002A6  18DE               	xorwf	postinc2,w,c
  1478  0002A8  A4D8               	btfss	status,2,c
  1479  0002AA  EF59  F001         	goto	u2131
  1480  0002AE  EF5B  F001         	goto	u2130
  1481  0002B2                     u2131:
  1482  0002B2  EF3B  F001         	goto	l2472
  1483  0002B6                     u2130:
  1484  0002B6                     
  1485                           ;Comandos.c: 154:             if (comando[2]=='T'){
  1486  0002B6  EE20 F002          	lfsr	2,2
  1487  0002BA  501B               	movf	comandos@comando^0,w,c
  1488  0002BC  26D9               	addwf	fsr2l,f,c
  1489  0002BE  501C               	movf	(comandos@comando+1)^0,w,c
  1490  0002C0  22DA               	addwfc	fsr2h,f,c
  1491  0002C2  0E54               	movlw	84
  1492  0002C4  18DE               	xorwf	postinc2,w,c
  1493  0002C6  A4D8               	btfss	status,2,c
  1494  0002C8  EF68  F001         	goto	u2141
  1495  0002CC  EF6A  F001         	goto	u2140
  1496  0002D0                     u2141:
  1497  0002D0  EF3B  F001         	goto	l2472
  1498  0002D4                     u2140:
  1499  0002D4                     
  1500                           ;Comandos.c: 155:                 if (comando[3]=='O'){
  1501  0002D4  EE20 F003          	lfsr	2,3
  1502  0002D8  501B               	movf	comandos@comando^0,w,c
  1503  0002DA  26D9               	addwf	fsr2l,f,c
  1504  0002DC  501C               	movf	(comandos@comando+1)^0,w,c
  1505  0002DE  22DA               	addwfc	fsr2h,f,c
  1506  0002E0  0E4F               	movlw	79
  1507  0002E2  18DE               	xorwf	postinc2,w,c
  1508  0002E4  A4D8               	btfss	status,2,c
  1509  0002E6  EF77  F001         	goto	u2151
  1510  0002EA  EF79  F001         	goto	u2150
  1511  0002EE                     u2151:
  1512  0002EE  EF3B  F001         	goto	l2472
  1513  0002F2                     u2150:
  1514  0002F2                     
  1515                           ;Comandos.c: 156:                     if (comando[4]=='H'){
  1516  0002F2  EE20 F004          	lfsr	2,4
  1517  0002F6  501B               	movf	comandos@comando^0,w,c
  1518  0002F8  26D9               	addwf	fsr2l,f,c
  1519  0002FA  501C               	movf	(comandos@comando+1)^0,w,c
  1520  0002FC  22DA               	addwfc	fsr2h,f,c
  1521  0002FE  0E48               	movlw	72
  1522  000300  18DE               	xorwf	postinc2,w,c
  1523  000302  A4D8               	btfss	status,2,c
  1524  000304  EF86  F001         	goto	u2161
  1525  000308  EF88  F001         	goto	u2160
  1526  00030C                     u2161:
  1527  00030C  EF3B  F001         	goto	l2472
  1528  000310                     u2160:
  1529  000310                     
  1530                           ;Comandos.c: 157:                         if (comando[5]=='O'){
  1531  000310  EE20 F005          	lfsr	2,5
  1532  000314  501B               	movf	comandos@comando^0,w,c
  1533  000316  26D9               	addwf	fsr2l,f,c
  1534  000318  501C               	movf	(comandos@comando+1)^0,w,c
  1535  00031A  22DA               	addwfc	fsr2h,f,c
  1536  00031C  0E4F               	movlw	79
  1537  00031E  18DE               	xorwf	postinc2,w,c
  1538  000320  A4D8               	btfss	status,2,c
  1539  000322  EF95  F001         	goto	u2171
  1540  000326  EF97  F001         	goto	u2170
  1541  00032A                     u2171:
  1542  00032A  EF3B  F001         	goto	l2472
  1543  00032E                     u2170:
  1544  00032E                     
  1545                           ;Comandos.c: 158:                             if (comando[6]=='M'){
  1546  00032E  EE20 F006          	lfsr	2,6
  1547  000332  501B               	movf	comandos@comando^0,w,c
  1548  000334  26D9               	addwf	fsr2l,f,c
  1549  000336  501C               	movf	(comandos@comando+1)^0,w,c
  1550  000338  22DA               	addwfc	fsr2h,f,c
  1551  00033A  0E4D               	movlw	77
  1552  00033C  18DE               	xorwf	postinc2,w,c
  1553  00033E  A4D8               	btfss	status,2,c
  1554  000340  EFA4  F001         	goto	u2181
  1555  000344  EFA6  F001         	goto	u2180
  1556  000348                     u2181:
  1557  000348  EF3B  F001         	goto	l2472
  1558  00034C                     u2180:
  1559  00034C                     
  1560                           ;Comandos.c: 159:                                 if (comando[7]=='E'){
  1561  00034C  EE20 F007          	lfsr	2,7
  1562  000350  501B               	movf	comandos@comando^0,w,c
  1563  000352  26D9               	addwf	fsr2l,f,c
  1564  000354  501C               	movf	(comandos@comando+1)^0,w,c
  1565  000356  22DA               	addwfc	fsr2h,f,c
  1566  000358  0E45               	movlw	69
  1567  00035A  18DE               	xorwf	postinc2,w,c
  1568  00035C  A4D8               	btfss	status,2,c
  1569  00035E  EFB3  F001         	goto	u2191
  1570  000362  EFB5  F001         	goto	u2190
  1571  000366                     u2191:
  1572  000366  EF3B  F001         	goto	l2472
  1573  00036A                     u2190:
  1574  00036A                     
  1575                           ;Comandos.c: 160:                                     Ejecutandose();
  1576  00036A  ECEF  F006         	call	_Ejecutandose	;wreg free
  1577  00036E                     
  1578                           ;Comandos.c: 161:                                      PORTDbits.RD0=1;
  1579  00036E  8083               	bsf	131,0,c	;volatile
  1580  000370                     
  1581                           ;Comandos.c: 162:                                      PORTDbits.RD1=0;
  1582  000370  9283               	bcf	131,1,c	;volatile
  1583  000372                     
  1584                           ;Comandos.c: 163:                                      PORTDbits.RD3=0;
  1585  000372  9683               	bcf	131,3,c	;volatile
  1586  000374                     
  1587                           ;Comandos.c: 164:                                      PORTDbits.RD2=0;
  1588  000374  9483               	bcf	131,2,c	;volatile
  1589  000376                     l119:
  1590  000376  A281               	btfss	129,1,c	;volatile
  1591  000378  EFC0  F001         	goto	u2201
  1592  00037C  EFC2  F001         	goto	u2200
  1593  000380                     u2201:
  1594  000380  EFBB  F001         	goto	l119
  1595  000384                     u2200:
  1596  000384                     
  1597                           ;Comandos.c: 166:                                      PORTDbits.RD3=1;
  1598  000384  8683               	bsf	131,3,c	;volatile
  1599                           
  1600                           ;Comandos.c: 167:                                      PORTDbits.RD2=1;
  1601  000386  8483               	bsf	131,2,c	;volatile
  1602  000388                     
  1603                           ;Comandos.c: 168:                                      xLimit();
  1604  000388  EC5E  F007         	call	_xLimit	;wreg free
  1605  00038C                     
  1606                           ;Comandos.c: 169:                                      PORTDbits.RD0=0;
  1607  00038C  9083               	bcf	131,0,c	;volatile
  1608  00038E                     
  1609                           ;Comandos.c: 170:                                      PORTDbits.RD1=0;
  1610  00038E  9283               	bcf	131,1,c	;volatile
  1611  000390                     
  1612                           ;Comandos.c: 171:                                      PORTDbits.RD3=0;
  1613  000390  9683               	bcf	131,3,c	;volatile
  1614  000392                     
  1615                           ;Comandos.c: 172:                                      PORTDbits.RD2=0;
  1616  000392  9483               	bcf	131,2,c	;volatile
  1617  000394                     l122:
  1618  000394  A081               	btfss	129,0,c	;volatile
  1619  000396  EFCF  F001         	goto	u2211
  1620  00039A  EFD1  F001         	goto	u2210
  1621  00039E                     u2211:
  1622  00039E  EFCA  F001         	goto	l122
  1623  0003A2                     u2210:
  1624  0003A2                     
  1625                           ;Comandos.c: 174:                                      PORTDbits.RD3=1;
  1626  0003A2  8683               	bsf	131,3,c	;volatile
  1627                           
  1628                           ;Comandos.c: 175:                                      PORTDbits.RD2=1;
  1629  0003A4  8483               	bsf	131,2,c	;volatile
  1630  0003A6                     
  1631                           ;Comandos.c: 176:                                      yLimit();
  1632  0003A6  EC3B  F007         	call	_yLimit	;wreg free
  1633  0003AA                     
  1634                           ;Comandos.c: 177:                                      x=0;
  1635  0003AA  0E00               	movlw	0
  1636  0003AC  6E46               	movwf	(_x+1)^0,c
  1637  0003AE  0E00               	movlw	0
  1638  0003B0  6E45               	movwf	_x^0,c
  1639  0003B2                     
  1640                           ;Comandos.c: 178:                                      y=0;
  1641  0003B2  0E00               	movlw	0
  1642  0003B4  6E44               	movwf	(_y+1)^0,c
  1643  0003B6  0E00               	movlw	0
  1644  0003B8  6E43               	movwf	_y^0,c
  1645                           
  1646                           ;Comandos.c: 179:                                      Completo();
  1647  0003BA  EC15  F007         	call	_Completo	;wreg free
  1648                           
  1649                           ;Comandos.c: 180:                                 }
  1650  0003BE  EF63  F003         	goto	l181
  1651  0003C2                     l2542:
  1652  0003C2  C01B  FFD9         	movff	comandos@comando,fsr2l
  1653  0003C6  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1654  0003CA  0E53               	movlw	83
  1655  0003CC  18DE               	xorwf	postinc2,w,c
  1656  0003CE  A4D8               	btfss	status,2,c
  1657  0003D0  EFEC  F001         	goto	u2221
  1658  0003D4  EFEE  F001         	goto	u2220
  1659  0003D8                     u2221:
  1660  0003D8  EF5E  F002         	goto	l2576
  1661  0003DC                     u2220:
  1662  0003DC                     
  1663                           ;Comandos.c: 211:         if (comando[1]=='T'){
  1664  0003DC  EE20 F001          	lfsr	2,1
  1665  0003E0  501B               	movf	comandos@comando^0,w,c
  1666  0003E2  26D9               	addwf	fsr2l,f,c
  1667  0003E4  501C               	movf	(comandos@comando+1)^0,w,c
  1668  0003E6  22DA               	addwfc	fsr2h,f,c
  1669  0003E8  0E54               	movlw	84
  1670  0003EA  18DE               	xorwf	postinc2,w,c
  1671  0003EC  A4D8               	btfss	status,2,c
  1672  0003EE  EFFB  F001         	goto	u2231
  1673  0003F2  EFFD  F001         	goto	u2230
  1674  0003F6                     u2231:
  1675  0003F6  EF3B  F001         	goto	l2472
  1676  0003FA                     u2230:
  1677  0003FA                     
  1678                           ;Comandos.c: 212:             if (comando[2]=='C'){
  1679  0003FA  EE20 F002          	lfsr	2,2
  1680  0003FE  501B               	movf	comandos@comando^0,w,c
  1681  000400  26D9               	addwf	fsr2l,f,c
  1682  000402  501C               	movf	(comandos@comando+1)^0,w,c
  1683  000404  22DA               	addwfc	fsr2h,f,c
  1684  000406  0E43               	movlw	67
  1685  000408  18DE               	xorwf	postinc2,w,c
  1686  00040A  A4D8               	btfss	status,2,c
  1687  00040C  EF0A  F002         	goto	u2241
  1688  000410  EF0C  F002         	goto	u2240
  1689  000414                     u2241:
  1690  000414  EF3B  F001         	goto	l2472
  1691  000418                     u2240:
  1692  000418                     
  1693                           ;Comandos.c: 213:                 if (comando[3]=='T'){
  1694  000418  EE20 F003          	lfsr	2,3
  1695  00041C  501B               	movf	comandos@comando^0,w,c
  1696  00041E  26D9               	addwf	fsr2l,f,c
  1697  000420  501C               	movf	(comandos@comando+1)^0,w,c
  1698  000422  22DA               	addwfc	fsr2h,f,c
  1699  000424  0E54               	movlw	84
  1700  000426  18DE               	xorwf	postinc2,w,c
  1701  000428  A4D8               	btfss	status,2,c
  1702  00042A  EF19  F002         	goto	u2251
  1703  00042E  EF1B  F002         	goto	u2250
  1704  000432                     u2251:
  1705  000432  EF3B  F001         	goto	l2472
  1706  000436                     u2250:
  1707  000436                     
  1708                           ;Comandos.c: 214:                     if (comando[4]=='O'){
  1709  000436  EE20 F004          	lfsr	2,4
  1710  00043A  501B               	movf	comandos@comando^0,w,c
  1711  00043C  26D9               	addwf	fsr2l,f,c
  1712  00043E  501C               	movf	(comandos@comando+1)^0,w,c
  1713  000440  22DA               	addwfc	fsr2h,f,c
  1714  000442  0E4F               	movlw	79
  1715  000444  18DE               	xorwf	postinc2,w,c
  1716  000446  A4D8               	btfss	status,2,c
  1717  000448  EF28  F002         	goto	u2261
  1718  00044C  EF2A  F002         	goto	u2260
  1719  000450                     u2261:
  1720  000450  EF3B  F001         	goto	l2472
  1721  000454                     u2260:
  1722  000454                     
  1723                           ;Comandos.c: 215:                         if (comando[5]=='U'){
  1724  000454  EE20 F005          	lfsr	2,5
  1725  000458  501B               	movf	comandos@comando^0,w,c
  1726  00045A  26D9               	addwf	fsr2l,f,c
  1727  00045C  501C               	movf	(comandos@comando+1)^0,w,c
  1728  00045E  22DA               	addwfc	fsr2h,f,c
  1729  000460  0E55               	movlw	85
  1730  000462  18DE               	xorwf	postinc2,w,c
  1731  000464  A4D8               	btfss	status,2,c
  1732  000466  EF37  F002         	goto	u2271
  1733  00046A  EF39  F002         	goto	u2270
  1734  00046E                     u2271:
  1735  00046E  EF3B  F001         	goto	l2472
  1736  000472                     u2270:
  1737  000472                     
  1738                           ;Comandos.c: 216:                             if (comando[6]=='C'){
  1739  000472  EE20 F006          	lfsr	2,6
  1740  000476  501B               	movf	comandos@comando^0,w,c
  1741  000478  26D9               	addwf	fsr2l,f,c
  1742  00047A  501C               	movf	(comandos@comando+1)^0,w,c
  1743  00047C  22DA               	addwfc	fsr2h,f,c
  1744  00047E  0E43               	movlw	67
  1745  000480  18DE               	xorwf	postinc2,w,c
  1746  000482  A4D8               	btfss	status,2,c
  1747  000484  EF46  F002         	goto	u2281
  1748  000488  EF48  F002         	goto	u2280
  1749  00048C                     u2281:
  1750  00048C  EF3B  F001         	goto	l2472
  1751  000490                     u2280:
  1752  000490                     
  1753                           ;Comandos.c: 217:                                 if (comando[7]=='H'){
  1754  000490  EE20 F007          	lfsr	2,7
  1755  000494  501B               	movf	comandos@comando^0,w,c
  1756  000496  26D9               	addwf	fsr2l,f,c
  1757  000498  501C               	movf	(comandos@comando+1)^0,w,c
  1758  00049A  22DA               	addwfc	fsr2h,f,c
  1759  00049C  0E48               	movlw	72
  1760  00049E  18DE               	xorwf	postinc2,w,c
  1761  0004A0  A4D8               	btfss	status,2,c
  1762  0004A2  EF55  F002         	goto	u2291
  1763  0004A6  EF57  F002         	goto	u2290
  1764  0004AA                     u2291:
  1765  0004AA  EF3B  F001         	goto	l2472
  1766  0004AE                     u2290:
  1767  0004AE                     
  1768                           ;Comandos.c: 218:                                     Ejecutandose();
  1769  0004AE  ECEF  F006         	call	_Ejecutandose	;wreg free
  1770  0004B2                     
  1771                           ;Comandos.c: 219:                                     PORTDbits.RD7=1;
  1772  0004B2  8E83               	bsf	131,7,c	;volatile
  1773                           
  1774                           ;Comandos.c: 220:                                     Completo();
  1775  0004B4  EC15  F007         	call	_Completo	;wreg free
  1776                           
  1777                           ;Comandos.c: 221:                                 }
  1778  0004B8  EF63  F003         	goto	l181
  1779  0004BC                     l2576:
  1780  0004BC  C01B  FFD9         	movff	comandos@comando,fsr2l
  1781  0004C0  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1782  0004C4  0E4D               	movlw	77
  1783  0004C6  18DE               	xorwf	postinc2,w,c
  1784  0004C8  A4D8               	btfss	status,2,c
  1785  0004CA  EF69  F002         	goto	u2301
  1786  0004CE  EF6B  F002         	goto	u2300
  1787  0004D2                     u2301:
  1788  0004D2  EFE8  F002         	goto	l2616
  1789  0004D6                     u2300:
  1790  0004D6                     
  1791                           ;Comandos.c: 254:         if (comando[1]=='A'){
  1792  0004D6  EE20 F001          	lfsr	2,1
  1793  0004DA  501B               	movf	comandos@comando^0,w,c
  1794  0004DC  26D9               	addwf	fsr2l,f,c
  1795  0004DE  501C               	movf	(comandos@comando+1)^0,w,c
  1796  0004E0  22DA               	addwfc	fsr2h,f,c
  1797  0004E2  0E41               	movlw	65
  1798  0004E4  18DE               	xorwf	postinc2,w,c
  1799  0004E6  A4D8               	btfss	status,2,c
  1800  0004E8  EF78  F002         	goto	u2311
  1801  0004EC  EF7A  F002         	goto	u2310
  1802  0004F0                     u2311:
  1803  0004F0  EF3B  F001         	goto	l2472
  1804  0004F4                     u2310:
  1805  0004F4                     
  1806                           ;Comandos.c: 255:             if (comando[2]=='K'){
  1807  0004F4  EE20 F002          	lfsr	2,2
  1808  0004F8  501B               	movf	comandos@comando^0,w,c
  1809  0004FA  26D9               	addwf	fsr2l,f,c
  1810  0004FC  501C               	movf	(comandos@comando+1)^0,w,c
  1811  0004FE  22DA               	addwfc	fsr2h,f,c
  1812  000500  0E4B               	movlw	75
  1813  000502  18DE               	xorwf	postinc2,w,c
  1814  000504  A4D8               	btfss	status,2,c
  1815  000506  EF87  F002         	goto	u2321
  1816  00050A  EF89  F002         	goto	u2320
  1817  00050E                     u2321:
  1818  00050E  EF3B  F001         	goto	l2472
  1819  000512                     u2320:
  1820  000512                     
  1821                           ;Comandos.c: 256:                 if (comando[3]=='E'){
  1822  000512  EE20 F003          	lfsr	2,3
  1823  000516  501B               	movf	comandos@comando^0,w,c
  1824  000518  26D9               	addwf	fsr2l,f,c
  1825  00051A  501C               	movf	(comandos@comando+1)^0,w,c
  1826  00051C  22DA               	addwfc	fsr2h,f,c
  1827  00051E  0E45               	movlw	69
  1828  000520  18DE               	xorwf	postinc2,w,c
  1829  000522  A4D8               	btfss	status,2,c
  1830  000524  EF96  F002         	goto	u2331
  1831  000528  EF98  F002         	goto	u2330
  1832  00052C                     u2331:
  1833  00052C  EF3B  F001         	goto	l2472
  1834  000530                     u2330:
  1835  000530                     
  1836                           ;Comandos.c: 257:                     if (comando[4]=='A'){
  1837  000530  EE20 F004          	lfsr	2,4
  1838  000534  501B               	movf	comandos@comando^0,w,c
  1839  000536  26D9               	addwf	fsr2l,f,c
  1840  000538  501C               	movf	(comandos@comando+1)^0,w,c
  1841  00053A  22DA               	addwfc	fsr2h,f,c
  1842  00053C  0E41               	movlw	65
  1843  00053E  18DE               	xorwf	postinc2,w,c
  1844  000540  A4D8               	btfss	status,2,c
  1845  000542  EFA5  F002         	goto	u2341
  1846  000546  EFA7  F002         	goto	u2340
  1847  00054A                     u2341:
  1848  00054A  EF3B  F001         	goto	l2472
  1849  00054E                     u2340:
  1850  00054E                     
  1851                           ;Comandos.c: 258:                         if (comando[5]=='T'){
  1852  00054E  EE20 F005          	lfsr	2,5
  1853  000552  501B               	movf	comandos@comando^0,w,c
  1854  000554  26D9               	addwf	fsr2l,f,c
  1855  000556  501C               	movf	(comandos@comando+1)^0,w,c
  1856  000558  22DA               	addwfc	fsr2h,f,c
  1857  00055A  0E54               	movlw	84
  1858  00055C  18DE               	xorwf	postinc2,w,c
  1859  00055E  A4D8               	btfss	status,2,c
  1860  000560  EFB4  F002         	goto	u2351
  1861  000564  EFB6  F002         	goto	u2350
  1862  000568                     u2351:
  1863  000568  EF3B  F001         	goto	l2472
  1864  00056C                     u2350:
  1865  00056C                     
  1866                           ;Comandos.c: 259:                             if (comando[6]=='A'){
  1867  00056C  EE20 F006          	lfsr	2,6
  1868  000570  501B               	movf	comandos@comando^0,w,c
  1869  000572  26D9               	addwf	fsr2l,f,c
  1870  000574  501C               	movf	(comandos@comando+1)^0,w,c
  1871  000576  22DA               	addwfc	fsr2h,f,c
  1872  000578  0E41               	movlw	65
  1873  00057A  18DE               	xorwf	postinc2,w,c
  1874  00057C  A4D8               	btfss	status,2,c
  1875  00057E  EFC3  F002         	goto	u2361
  1876  000582  EFC5  F002         	goto	u2360
  1877  000586                     u2361:
  1878  000586  EF3B  F001         	goto	l2472
  1879  00058A                     u2360:
  1880  00058A                     
  1881                           ;Comandos.c: 260:                                 if (comando[7]=='P'){
  1882  00058A  EE20 F007          	lfsr	2,7
  1883  00058E  501B               	movf	comandos@comando^0,w,c
  1884  000590  26D9               	addwf	fsr2l,f,c
  1885  000592  501C               	movf	(comandos@comando+1)^0,w,c
  1886  000594  22DA               	addwfc	fsr2h,f,c
  1887  000596  0E50               	movlw	80
  1888  000598  18DE               	xorwf	postinc2,w,c
  1889  00059A  A4D8               	btfss	status,2,c
  1890  00059C  EFD2  F002         	goto	u2371
  1891  0005A0  EFD4  F002         	goto	u2370
  1892  0005A4                     u2371:
  1893  0005A4  EF3B  F001         	goto	l2472
  1894  0005A8                     u2370:
  1895  0005A8                     
  1896                           ;Comandos.c: 261:                                     Ejecutandose();
  1897  0005A8  ECEF  F006         	call	_Ejecutandose	;wreg free
  1898  0005AC                     
  1899                           ;Comandos.c: 262:                                     PORTDbits.RD7=1;
  1900  0005AC  8E83               	bsf	131,7,c	;volatile
  1901  0005AE                     
  1902                           ;Comandos.c: 263:                                     _delay((unsigned long)((2000)*(800
      +                          0000L/4000.0)));
  1903  0005AE  0E15               	movlw	21
  1904  0005B0  6E1E               	movwf	(??_comandos+1)^0,c
  1905  0005B2  0E4B               	movlw	75
  1906  0005B4  6E1D               	movwf	??_comandos^0,c
  1907  0005B6  0EBE               	movlw	190
  1908  0005B8                     u2517:
  1909  0005B8  2EE8               	decfsz	wreg,f,c
  1910  0005BA  D7FE               	bra	u2517
  1911  0005BC  2E1D               	decfsz	??_comandos^0,f,c
  1912  0005BE  D7FC               	bra	u2517
  1913  0005C0  2E1E               	decfsz	(??_comandos+1)^0,f,c
  1914  0005C2  D7FA               	bra	u2517
  1915  0005C4  D000               	nop2	
  1916  0005C6                     
  1917                           ;Comandos.c: 264:                                     PORTDbits.RD7=0;
  1918  0005C6  9E83               	bcf	131,7,c	;volatile
  1919  0005C8                     
  1920                           ;Comandos.c: 266:                                     Completo();
  1921  0005C8  EC15  F007         	call	_Completo	;wreg free
  1922                           
  1923                           ;Comandos.c: 267:                                 }
  1924  0005CC  EF63  F003         	goto	l181
  1925  0005D0                     l2616:
  1926  0005D0  C01B  FFD9         	movff	comandos@comando,fsr2l
  1927  0005D4  C01C  FFDA         	movff	comandos@comando+1,fsr2h
  1928  0005D8  0E54               	movlw	84
  1929  0005DA  18DE               	xorwf	postinc2,w,c
  1930  0005DC  A4D8               	btfss	status,2,c
  1931  0005DE  EFF3  F002         	goto	u2381
  1932  0005E2  EFF5  F002         	goto	u2380
  1933  0005E6                     u2381:
  1934  0005E6  EF3B  F001         	goto	l2472
  1935  0005EA                     u2380:
  1936  0005EA                     
  1937                           ;Comandos.c: 300:         if (comando[1]=='A'){
  1938  0005EA  EE20 F001          	lfsr	2,1
  1939  0005EE  501B               	movf	comandos@comando^0,w,c
  1940  0005F0  26D9               	addwf	fsr2l,f,c
  1941  0005F2  501C               	movf	(comandos@comando+1)^0,w,c
  1942  0005F4  22DA               	addwfc	fsr2h,f,c
  1943  0005F6  0E41               	movlw	65
  1944  0005F8  18DE               	xorwf	postinc2,w,c
  1945  0005FA  A4D8               	btfss	status,2,c
  1946  0005FC  EF02  F003         	goto	u2391
  1947  000600  EF04  F003         	goto	u2390
  1948  000604                     u2391:
  1949  000604  EF3B  F001         	goto	l2472
  1950  000608                     u2390:
  1951  000608                     
  1952                           ;Comandos.c: 301:             if (comando[2]=='K'){
  1953  000608  EE20 F002          	lfsr	2,2
  1954  00060C  501B               	movf	comandos@comando^0,w,c
  1955  00060E  26D9               	addwf	fsr2l,f,c
  1956  000610  501C               	movf	(comandos@comando+1)^0,w,c
  1957  000612  22DA               	addwfc	fsr2h,f,c
  1958  000614  0E4B               	movlw	75
  1959  000616  18DE               	xorwf	postinc2,w,c
  1960  000618  A4D8               	btfss	status,2,c
  1961  00061A  EF11  F003         	goto	u2401
  1962  00061E  EF13  F003         	goto	u2400
  1963  000622                     u2401:
  1964  000622  EF3B  F001         	goto	l2472
  1965  000626                     u2400:
  1966  000626                     
  1967                           ;Comandos.c: 302:                 if (comando[3]=='E'){
  1968  000626  EE20 F003          	lfsr	2,3
  1969  00062A  501B               	movf	comandos@comando^0,w,c
  1970  00062C  26D9               	addwf	fsr2l,f,c
  1971  00062E  501C               	movf	(comandos@comando+1)^0,w,c
  1972  000630  22DA               	addwfc	fsr2h,f,c
  1973  000632  0E45               	movlw	69
  1974  000634  18DE               	xorwf	postinc2,w,c
  1975  000636  A4D8               	btfss	status,2,c
  1976  000638  EF20  F003         	goto	u2411
  1977  00063C  EF22  F003         	goto	u2410
  1978  000640                     u2411:
  1979  000640  EF3B  F001         	goto	l2472
  1980  000644                     u2410:
  1981  000644                     
  1982                           ;Comandos.c: 303:                     if (comando[4]=='L'){
  1983  000644  EE20 F004          	lfsr	2,4
  1984  000648  501B               	movf	comandos@comando^0,w,c
  1985  00064A  26D9               	addwf	fsr2l,f,c
  1986  00064C  501C               	movf	(comandos@comando+1)^0,w,c
  1987  00064E  22DA               	addwfc	fsr2h,f,c
  1988  000650  0E4C               	movlw	76
  1989  000652  18DE               	xorwf	postinc2,w,c
  1990  000654  A4D8               	btfss	status,2,c
  1991  000656  EF2F  F003         	goto	u2421
  1992  00065A  EF31  F003         	goto	u2420
  1993  00065E                     u2421:
  1994  00065E  EF3B  F001         	goto	l2472
  1995  000662                     u2420:
  1996  000662                     
  1997                           ;Comandos.c: 304:                         if (comando[5]=='I'){
  1998  000662  EE20 F005          	lfsr	2,5
  1999  000666  501B               	movf	comandos@comando^0,w,c
  2000  000668  26D9               	addwf	fsr2l,f,c
  2001  00066A  501C               	movf	(comandos@comando+1)^0,w,c
  2002  00066C  22DA               	addwfc	fsr2h,f,c
  2003  00066E  0E49               	movlw	73
  2004  000670  18DE               	xorwf	postinc2,w,c
  2005  000672  A4D8               	btfss	status,2,c
  2006  000674  EF3E  F003         	goto	u2431
  2007  000678  EF40  F003         	goto	u2430
  2008  00067C                     u2431:
  2009  00067C  EF3B  F001         	goto	l2472
  2010  000680                     u2430:
  2011  000680                     
  2012                           ;Comandos.c: 305:                             if (comando[6]=='F'){
  2013  000680  EE20 F006          	lfsr	2,6
  2014  000684  501B               	movf	comandos@comando^0,w,c
  2015  000686  26D9               	addwf	fsr2l,f,c
  2016  000688  501C               	movf	(comandos@comando+1)^0,w,c
  2017  00068A  22DA               	addwfc	fsr2h,f,c
  2018  00068C  0E46               	movlw	70
  2019  00068E  18DE               	xorwf	postinc2,w,c
  2020  000690  A4D8               	btfss	status,2,c
  2021  000692  EF4D  F003         	goto	u2441
  2022  000696  EF4F  F003         	goto	u2440
  2023  00069A                     u2441:
  2024  00069A  EF3B  F001         	goto	l2472
  2025  00069E                     u2440:
  2026  00069E                     
  2027                           ;Comandos.c: 306:                                 if (comando[7]=='T'){
  2028  00069E  EE20 F007          	lfsr	2,7
  2029  0006A2  501B               	movf	comandos@comando^0,w,c
  2030  0006A4  26D9               	addwf	fsr2l,f,c
  2031  0006A6  501C               	movf	(comandos@comando+1)^0,w,c
  2032  0006A8  22DA               	addwfc	fsr2h,f,c
  2033  0006AA  0E54               	movlw	84
  2034  0006AC  18DE               	xorwf	postinc2,w,c
  2035  0006AE  A4D8               	btfss	status,2,c
  2036  0006B0  EF5C  F003         	goto	u2451
  2037  0006B4  EF5E  F003         	goto	u2450
  2038  0006B8                     u2451:
  2039  0006B8  EF3B  F001         	goto	l2472
  2040  0006BC                     u2450:
  2041  0006BC                     
  2042                           ;Comandos.c: 307:                                     Ejecutandose();
  2043  0006BC  ECEF  F006         	call	_Ejecutandose	;wreg free
  2044  0006C0                     
  2045                           ;Comandos.c: 308:                                     PORTDbits.RD7=0;
  2046  0006C0  9E83               	bcf	131,7,c	;volatile
  2047                           
  2048                           ;Comandos.c: 309:                                     Completo();
  2049  0006C2  EC15  F007         	call	_Completo	;wreg free
  2050  0006C6                     l181:
  2051  0006C6  0012               	return		;funcret
  2052  0006C8                     __end_of_comandos:
  2053                           	opt callstack 0
  2054                           
  2055 ;; *************** function _yLimit *****************
  2056 ;; Defined at:
  2057 ;;		line 17 in file "Comandos.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  i               2   15[COMRAM] int 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0
  2072 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2074 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    4
  2078 ;; This function calls:
  2079 ;;		_USART_Tx
  2080 ;;		_strlen
  2081 ;; This function is called by:
  2082 ;;		_comandos
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text5
  2088  000E76                     __ptext5:
  2089                           	opt callstack 0
  2090  000E76                     _yLimit:
  2091                           	opt callstack 26
  2092  000E76                     
  2093                           ;Comandos.c: 18:     for(int i=0; i < strlen(yl); i++){
  2094  000E76  0E00               	movlw	0
  2095  000E78  6E11               	movwf	(yLimit@i+1)^0,c
  2096  000E7A  0E00               	movlw	0
  2097  000E7C  6E10               	movwf	yLimit@i^0,c
  2098  000E7E  EF4C  F007         	goto	l2304
  2099  000E82                     l2300:
  2100                           
  2101                           ;Comandos.c: 19:     USART_Tx(yl[i]);
  2102  000E82  0EDA               	movlw	low _yl
  2103  000E84  2410               	addwf	yLimit@i^0,w,c
  2104  000E86  6ED9               	movwf	fsr2l,c
  2105  000E88  0E00               	movlw	high _yl
  2106  000E8A  2011               	addwfc	(yLimit@i+1)^0,w,c
  2107  000E8C  6EDA               	movwf	fsr2h,c
  2108  000E8E  50DF               	movf	indf2,w,c
  2109  000E90  EC1A  F008         	call	_USART_Tx
  2110  000E94                     
  2111                           ;Comandos.c: 20:     } return;
  2112  000E94  4A10               	infsnz	yLimit@i^0,f,c
  2113  000E96  2A11               	incf	(yLimit@i+1)^0,f,c
  2114  000E98                     l2304:
  2115  000E98  0EDA               	movlw	low _yl
  2116  000E9A  6E0C               	movwf	strlen@s^0,c
  2117  000E9C  0E00               	movlw	high _yl
  2118  000E9E  6E0D               	movwf	(strlen@s+1)^0,c
  2119  000EA0  EC81  F007         	call	_strlen	;wreg free
  2120  000EA4  500C               	movf	?_strlen^0,w,c
  2121  000EA6  5C10               	subwf	yLimit@i^0,w,c
  2122  000EA8  500D               	movf	(?_strlen+1)^0,w,c
  2123  000EAA  5811               	subwfb	(yLimit@i+1)^0,w,c
  2124  000EAC  A0D8               	btfss	status,0,c
  2125  000EAE  EF5B  F007         	goto	u1801
  2126  000EB2  EF5D  F007         	goto	u1800
  2127  000EB6                     u1801:
  2128  000EB6  EF41  F007         	goto	l2300
  2129  000EBA                     u1800:
  2130  000EBA  0012               	return		;funcret
  2131  000EBC                     __end_of_yLimit:
  2132                           	opt callstack 0
  2133                           
  2134 ;; *************** function _xLimit *****************
  2135 ;; Defined at:
  2136 ;;		line 10 in file "Comandos.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  i               2   15[COMRAM] int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0
  2151 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2153 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2154 ;;Total ram usage:        2 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    4
  2157 ;; This function calls:
  2158 ;;		_USART_Tx
  2159 ;;		_strlen
  2160 ;; This function is called by:
  2161 ;;		_comandos
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text6
  2167  000EBC                     __ptext6:
  2168                           	opt callstack 0
  2169  000EBC                     _xLimit:
  2170                           	opt callstack 26
  2171  000EBC                     
  2172                           ;Comandos.c: 11:     for(int i=0; i < strlen(xl); i++){
  2173  000EBC  0E00               	movlw	0
  2174  000EBE  6E11               	movwf	(xLimit@i+1)^0,c
  2175  000EC0  0E00               	movlw	0
  2176  000EC2  6E10               	movwf	xLimit@i^0,c
  2177  000EC4  EF6F  F007         	goto	l2296
  2178  000EC8                     l2292:
  2179                           
  2180                           ;Comandos.c: 12:     USART_Tx(xl[i]);
  2181  000EC8  0EEB               	movlw	low _xl
  2182  000ECA  2410               	addwf	xLimit@i^0,w,c
  2183  000ECC  6ED9               	movwf	fsr2l,c
  2184  000ECE  0E00               	movlw	high _xl
  2185  000ED0  2011               	addwfc	(xLimit@i+1)^0,w,c
  2186  000ED2  6EDA               	movwf	fsr2h,c
  2187  000ED4  50DF               	movf	indf2,w,c
  2188  000ED6  EC1A  F008         	call	_USART_Tx
  2189  000EDA                     
  2190                           ;Comandos.c: 13:     }
  2191  000EDA  4A10               	infsnz	xLimit@i^0,f,c
  2192  000EDC  2A11               	incf	(xLimit@i+1)^0,f,c
  2193  000EDE                     l2296:
  2194  000EDE  0EEB               	movlw	low _xl
  2195  000EE0  6E0C               	movwf	strlen@s^0,c
  2196  000EE2  0E00               	movlw	high _xl
  2197  000EE4  6E0D               	movwf	(strlen@s+1)^0,c
  2198  000EE6  EC81  F007         	call	_strlen	;wreg free
  2199  000EEA  500C               	movf	?_strlen^0,w,c
  2200  000EEC  5C10               	subwf	xLimit@i^0,w,c
  2201  000EEE  500D               	movf	(?_strlen+1)^0,w,c
  2202  000EF0  5811               	subwfb	(xLimit@i+1)^0,w,c
  2203  000EF2  A0D8               	btfss	status,0,c
  2204  000EF4  EF7E  F007         	goto	u1791
  2205  000EF8  EF80  F007         	goto	u1790
  2206  000EFC                     u1791:
  2207  000EFC  EF64  F007         	goto	l2292
  2208  000F00                     u1790:
  2209  000F00  0012               	return		;funcret
  2210  000F02                     __end_of_xLimit:
  2211                           	opt callstack 0
  2212                           
  2213 ;; *************** function _coordinateRefreshY *****************
  2214 ;; Defined at:
  2215 ;;		line 81 in file "Comandos.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  newY            2   20[COMRAM] int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  j               2   24[COMRAM] int 
  2220 ;;  i               2   22[COMRAM] int 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2230 ;;      Params:         2       0       0       0       0       0       0       0       0
  2231 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2233 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        6 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    5
  2237 ;; This function calls:
  2238 ;;		_USART_Tx
  2239 ;;		_contador_pulsosD
  2240 ;;		_strlen
  2241 ;; This function is called by:
  2242 ;;		_comandos
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text7
  2247  0008D4                     __ptext7:
  2248                           	opt callstack 0
  2249  0008D4                     _coordinateRefreshY:
  2250                           	opt callstack 24
  2251  0008D4                     
  2252                           ;Comandos.c: 82:     if(newY<y){
  2253  0008D4  5043               	movf	_y^0,w,c
  2254  0008D6  5C15               	subwf	coordinateRefreshY@newY^0,w,c
  2255  0008D8  5044               	movf	(_y+1)^0,w,c
  2256  0008DA  5816               	subwfb	(coordinateRefreshY@newY+1)^0,w,c
  2257  0008DC  B0D8               	btfsc	status,0,c
  2258  0008DE  EF73  F004         	goto	u1881
  2259  0008E2  EF75  F004         	goto	u1880
  2260  0008E6                     u1881:
  2261  0008E6  EFA1  F004         	goto	l2374
  2262  0008EA                     u1880:
  2263  0008EA                     
  2264                           ;Comandos.c: 83:     PORTDbits.RD0=0;
  2265  0008EA  9083               	bcf	131,0,c	;volatile
  2266                           
  2267                           ;Comandos.c: 84:        PORTDbits.RD1=0;
  2268  0008EC  9283               	bcf	131,1,c	;volatile
  2269  0008EE                     
  2270                           ;Comandos.c: 86:        for(int i=0; i < strlen(msdown); i++){
  2271  0008EE  0E00               	movlw	0
  2272  0008F0  6E18               	movwf	(coordinateRefreshY@i+1)^0,c
  2273  0008F2  0E00               	movlw	0
  2274  0008F4  6E17               	movwf	coordinateRefreshY@i^0,c
  2275  0008F6  EF88  F004         	goto	l2370
  2276  0008FA                     l2366:
  2277                           
  2278                           ;Comandos.c: 87:     USART_Tx(msdown[i]);
  2279  0008FA  0E30               	movlw	low _msdown
  2280  0008FC  2417               	addwf	coordinateRefreshY@i^0,w,c
  2281  0008FE  6ED9               	movwf	fsr2l,c
  2282  000900  0E00               	movlw	high _msdown
  2283  000902  2018               	addwfc	(coordinateRefreshY@i+1)^0,w,c
  2284  000904  6EDA               	movwf	fsr2h,c
  2285  000906  50DF               	movf	indf2,w,c
  2286  000908  EC1A  F008         	call	_USART_Tx
  2287  00090C                     
  2288                           ;Comandos.c: 88:     }
  2289  00090C  4A17               	infsnz	coordinateRefreshY@i^0,f,c
  2290  00090E  2A18               	incf	(coordinateRefreshY@i+1)^0,f,c
  2291  000910                     l2370:
  2292  000910  0E30               	movlw	low _msdown
  2293  000912  6E0C               	movwf	strlen@s^0,c
  2294  000914  0E00               	movlw	high _msdown
  2295  000916  6E0D               	movwf	(strlen@s+1)^0,c
  2296  000918  EC81  F007         	call	_strlen	;wreg free
  2297  00091C  500C               	movf	?_strlen^0,w,c
  2298  00091E  5C17               	subwf	coordinateRefreshY@i^0,w,c
  2299  000920  500D               	movf	(?_strlen+1)^0,w,c
  2300  000922  5818               	subwfb	(coordinateRefreshY@i+1)^0,w,c
  2301  000924  A0D8               	btfss	status,0,c
  2302  000926  EF97  F004         	goto	u1891
  2303  00092A  EF99  F004         	goto	u1890
  2304  00092E                     u1891:
  2305  00092E  EF7D  F004         	goto	l2366
  2306  000932                     u1890:
  2307  000932                     
  2308                           ;Comandos.c: 89:     contador_pulsosD(y-newY);
  2309  000932  5015               	movf	coordinateRefreshY@newY^0,w,c
  2310  000934  5C43               	subwf	_y^0,w,c
  2311  000936  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2312  000938  5016               	movf	(coordinateRefreshY@newY+1)^0,w,c
  2313  00093A  5844               	subwfb	(_y+1)^0,w,c
  2314  00093C  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2315  00093E  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2316  000942                     l2374:
  2317                           
  2318                           ;Comandos.c: 91:     if(newY>y){
  2319  000942  5015               	movf	coordinateRefreshY@newY^0,w,c
  2320  000944  5C43               	subwf	_y^0,w,c
  2321  000946  5016               	movf	(coordinateRefreshY@newY+1)^0,w,c
  2322  000948  5844               	subwfb	(_y+1)^0,w,c
  2323  00094A  B0D8               	btfsc	status,0,c
  2324  00094C  EFAA  F004         	goto	u1901
  2325  000950  EFAC  F004         	goto	u1900
  2326  000954                     u1901:
  2327  000954  EFD8  F004         	goto	l2388
  2328  000958                     u1900:
  2329  000958                     
  2330                           ;Comandos.c: 92:         PORTDbits.RD0=1;
  2331  000958  8083               	bsf	131,0,c	;volatile
  2332                           
  2333                           ;Comandos.c: 93:         PORTDbits.RD1=1;
  2334  00095A  8283               	bsf	131,1,c	;volatile
  2335  00095C                     
  2336                           ;Comandos.c: 95:     for(int j=0; j < strlen(msup); j++){
  2337  00095C  0E00               	movlw	0
  2338  00095E  6E1A               	movwf	(coordinateRefreshY@j+1)^0,c
  2339  000960  0E00               	movlw	0
  2340  000962  6E19               	movwf	coordinateRefreshY@j^0,c
  2341  000964  EFBF  F004         	goto	l2384
  2342  000968                     l2380:
  2343                           
  2344                           ;Comandos.c: 96:     USART_Tx(msup[j]);
  2345  000968  0E22               	movlw	low _msup
  2346  00096A  2419               	addwf	coordinateRefreshY@j^0,w,c
  2347  00096C  6ED9               	movwf	fsr2l,c
  2348  00096E  0E00               	movlw	high _msup
  2349  000970  201A               	addwfc	(coordinateRefreshY@j+1)^0,w,c
  2350  000972  6EDA               	movwf	fsr2h,c
  2351  000974  50DF               	movf	indf2,w,c
  2352  000976  EC1A  F008         	call	_USART_Tx
  2353  00097A                     
  2354                           ;Comandos.c: 97:     }
  2355  00097A  4A19               	infsnz	coordinateRefreshY@j^0,f,c
  2356  00097C  2A1A               	incf	(coordinateRefreshY@j+1)^0,f,c
  2357  00097E                     l2384:
  2358  00097E  0E22               	movlw	low _msup
  2359  000980  6E0C               	movwf	strlen@s^0,c
  2360  000982  0E00               	movlw	high _msup
  2361  000984  6E0D               	movwf	(strlen@s+1)^0,c
  2362  000986  EC81  F007         	call	_strlen	;wreg free
  2363  00098A  500C               	movf	?_strlen^0,w,c
  2364  00098C  5C19               	subwf	coordinateRefreshY@j^0,w,c
  2365  00098E  500D               	movf	(?_strlen+1)^0,w,c
  2366  000990  581A               	subwfb	(coordinateRefreshY@j+1)^0,w,c
  2367  000992  A0D8               	btfss	status,0,c
  2368  000994  EFCE  F004         	goto	u1911
  2369  000998  EFD0  F004         	goto	u1910
  2370  00099C                     u1911:
  2371  00099C  EFB4  F004         	goto	l2380
  2372  0009A0                     u1910:
  2373  0009A0                     
  2374                           ;Comandos.c: 99:         contador_pulsosD(newY-y);
  2375  0009A0  5043               	movf	_y^0,w,c
  2376  0009A2  5C15               	subwf	coordinateRefreshY@newY^0,w,c
  2377  0009A4  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2378  0009A6  5044               	movf	(_y+1)^0,w,c
  2379  0009A8  5816               	subwfb	(coordinateRefreshY@newY+1)^0,w,c
  2380  0009AA  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2381  0009AC  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2382  0009B0                     l2388:
  2383                           
  2384                           ;Comandos.c: 101:     y=newY;
  2385  0009B0  C015  F043         	movff	coordinateRefreshY@newY,_y
  2386  0009B4  C016  F044         	movff	coordinateRefreshY@newY+1,_y+1
  2387  0009B8  0012               	return		;funcret
  2388  0009BA                     __end_of_coordinateRefreshY:
  2389                           	opt callstack 0
  2390                           
  2391 ;; *************** function _coordinateRefreshX *****************
  2392 ;; Defined at:
  2393 ;;		line 53 in file "Comandos.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  newX            2   20[COMRAM] int 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  j               2   24[COMRAM] int 
  2398 ;;  i               2   22[COMRAM] int 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         2       0       0       0       0       0       0       0       0
  2409 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2411 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2412 ;;Total ram usage:        6 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    5
  2415 ;; This function calls:
  2416 ;;		_USART_Tx
  2417 ;;		_contador_pulsosD
  2418 ;;		_strlen
  2419 ;; This function is called by:
  2420 ;;		_comandos
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text8
  2425  0009BA                     __ptext8:
  2426                           	opt callstack 0
  2427  0009BA                     _coordinateRefreshX:
  2428                           	opt callstack 24
  2429  0009BA                     
  2430                           ;Comandos.c: 54:     if(newX<x){
  2431  0009BA  5045               	movf	_x^0,w,c
  2432  0009BC  5C15               	subwf	coordinateRefreshX@newX^0,w,c
  2433  0009BE  5046               	movf	(_x+1)^0,w,c
  2434  0009C0  5816               	subwfb	(coordinateRefreshX@newX+1)^0,w,c
  2435  0009C2  B0D8               	btfsc	status,0,c
  2436  0009C4  EFE6  F004         	goto	u1841
  2437  0009C8  EFE8  F004         	goto	u1840
  2438  0009CC                     u1841:
  2439  0009CC  EF14  F005         	goto	l2344
  2440  0009D0                     u1840:
  2441  0009D0                     
  2442                           ;Comandos.c: 55:        PORTDbits.RD0=1;
  2443  0009D0  8083               	bsf	131,0,c	;volatile
  2444                           
  2445                           ;Comandos.c: 58:        PORTDbits.RD1=0;
  2446  0009D2  9283               	bcf	131,1,c	;volatile
  2447  0009D4                     
  2448                           ;Comandos.c: 60:        for(int i=0; i < strlen(msleft); i++){
  2449  0009D4  0E00               	movlw	0
  2450  0009D6  6E18               	movwf	(coordinateRefreshX@i+1)^0,c
  2451  0009D8  0E00               	movlw	0
  2452  0009DA  6E17               	movwf	coordinateRefreshX@i^0,c
  2453  0009DC  EFFB  F004         	goto	l2340
  2454  0009E0                     l2336:
  2455                           
  2456                           ;Comandos.c: 61:     USART_Tx(msleft[i]);
  2457  0009E0  0E8D               	movlw	low _msleft
  2458  0009E2  2417               	addwf	coordinateRefreshX@i^0,w,c
  2459  0009E4  6ED9               	movwf	fsr2l,c
  2460  0009E6  0E00               	movlw	high _msleft
  2461  0009E8  2018               	addwfc	(coordinateRefreshX@i+1)^0,w,c
  2462  0009EA  6EDA               	movwf	fsr2h,c
  2463  0009EC  50DF               	movf	indf2,w,c
  2464  0009EE  EC1A  F008         	call	_USART_Tx
  2465  0009F2                     
  2466                           ;Comandos.c: 62:     }
  2467  0009F2  4A17               	infsnz	coordinateRefreshX@i^0,f,c
  2468  0009F4  2A18               	incf	(coordinateRefreshX@i+1)^0,f,c
  2469  0009F6                     l2340:
  2470  0009F6  0E8D               	movlw	low _msleft
  2471  0009F8  6E0C               	movwf	strlen@s^0,c
  2472  0009FA  0E00               	movlw	high _msleft
  2473  0009FC  6E0D               	movwf	(strlen@s+1)^0,c
  2474  0009FE  EC81  F007         	call	_strlen	;wreg free
  2475  000A02  500C               	movf	?_strlen^0,w,c
  2476  000A04  5C17               	subwf	coordinateRefreshX@i^0,w,c
  2477  000A06  500D               	movf	(?_strlen+1)^0,w,c
  2478  000A08  5818               	subwfb	(coordinateRefreshX@i+1)^0,w,c
  2479  000A0A  A0D8               	btfss	status,0,c
  2480  000A0C  EF0A  F005         	goto	u1851
  2481  000A10  EF0C  F005         	goto	u1850
  2482  000A14                     u1851:
  2483  000A14  EFF0  F004         	goto	l2336
  2484  000A18                     u1850:
  2485  000A18                     
  2486                           ;Comandos.c: 63:        contador_pulsosD(x-newX);
  2487  000A18  5015               	movf	coordinateRefreshX@newX^0,w,c
  2488  000A1A  5C45               	subwf	_x^0,w,c
  2489  000A1C  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2490  000A1E  5016               	movf	(coordinateRefreshX@newX+1)^0,w,c
  2491  000A20  5846               	subwfb	(_x+1)^0,w,c
  2492  000A22  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2493  000A24  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2494  000A28                     l2344:
  2495                           
  2496                           ;Comandos.c: 66:     if(newX>x){
  2497  000A28  5015               	movf	coordinateRefreshX@newX^0,w,c
  2498  000A2A  5C45               	subwf	_x^0,w,c
  2499  000A2C  5016               	movf	(coordinateRefreshX@newX+1)^0,w,c
  2500  000A2E  5846               	subwfb	(_x+1)^0,w,c
  2501  000A30  B0D8               	btfsc	status,0,c
  2502  000A32  EF1D  F005         	goto	u1861
  2503  000A36  EF1F  F005         	goto	u1860
  2504  000A3A                     u1861:
  2505  000A3A  EF4B  F005         	goto	l2358
  2506  000A3E                     u1860:
  2507  000A3E                     
  2508                           ;Comandos.c: 67:        PORTDbits.RD0=0;
  2509  000A3E  9083               	bcf	131,0,c	;volatile
  2510                           
  2511                           ;Comandos.c: 68:        PORTDbits.RD1=1;
  2512  000A40  8283               	bsf	131,1,c	;volatile
  2513  000A42                     
  2514                           ;Comandos.c: 72:        for(int j=0; j < strlen(msright); j++){
  2515  000A42  0E00               	movlw	0
  2516  000A44  6E1A               	movwf	(coordinateRefreshX@j+1)^0,c
  2517  000A46  0E00               	movlw	0
  2518  000A48  6E19               	movwf	coordinateRefreshX@j^0,c
  2519  000A4A  EF32  F005         	goto	l2354
  2520  000A4E                     l2350:
  2521                           
  2522                           ;Comandos.c: 73:     USART_Tx(msright[j]);
  2523  000A4E  0EC8               	movlw	low _msright
  2524  000A50  2419               	addwf	coordinateRefreshX@j^0,w,c
  2525  000A52  6ED9               	movwf	fsr2l,c
  2526  000A54  0E00               	movlw	high _msright
  2527  000A56  201A               	addwfc	(coordinateRefreshX@j+1)^0,w,c
  2528  000A58  6EDA               	movwf	fsr2h,c
  2529  000A5A  50DF               	movf	indf2,w,c
  2530  000A5C  EC1A  F008         	call	_USART_Tx
  2531  000A60                     
  2532                           ;Comandos.c: 74:     }
  2533  000A60  4A19               	infsnz	coordinateRefreshX@j^0,f,c
  2534  000A62  2A1A               	incf	(coordinateRefreshX@j+1)^0,f,c
  2535  000A64                     l2354:
  2536  000A64  0EC8               	movlw	low _msright
  2537  000A66  6E0C               	movwf	strlen@s^0,c
  2538  000A68  0E00               	movlw	high _msright
  2539  000A6A  6E0D               	movwf	(strlen@s+1)^0,c
  2540  000A6C  EC81  F007         	call	_strlen	;wreg free
  2541  000A70  500C               	movf	?_strlen^0,w,c
  2542  000A72  5C19               	subwf	coordinateRefreshX@j^0,w,c
  2543  000A74  500D               	movf	(?_strlen+1)^0,w,c
  2544  000A76  581A               	subwfb	(coordinateRefreshX@j+1)^0,w,c
  2545  000A78  A0D8               	btfss	status,0,c
  2546  000A7A  EF41  F005         	goto	u1871
  2547  000A7E  EF43  F005         	goto	u1870
  2548  000A82                     u1871:
  2549  000A82  EF27  F005         	goto	l2350
  2550  000A86                     u1870:
  2551  000A86                     
  2552                           ;Comandos.c: 75:         contador_pulsosD(newX-x);
  2553  000A86  5045               	movf	_x^0,w,c
  2554  000A88  5C15               	subwf	coordinateRefreshX@newX^0,w,c
  2555  000A8A  6E12               	movwf	contador_pulsosD@pulsoD^0,c
  2556  000A8C  5046               	movf	(_x+1)^0,w,c
  2557  000A8E  5816               	subwfb	(coordinateRefreshX@newX+1)^0,w,c
  2558  000A90  6E13               	movwf	(contador_pulsosD@pulsoD+1)^0,c
  2559  000A92  EC9E  F005         	call	_contador_pulsosD	;wreg free
  2560  000A96                     l2358:
  2561                           
  2562                           ;Comandos.c: 77:     x=newX;
  2563  000A96  C015  F045         	movff	coordinateRefreshX@newX,_x
  2564  000A9A  C016  F046         	movff	coordinateRefreshX@newX+1,_x+1
  2565  000A9E  0012               	return		;funcret
  2566  000AA0                     __end_of_coordinateRefreshX:
  2567                           	opt callstack 0
  2568                           
  2569 ;; *************** function _contador_pulsosD *****************
  2570 ;; Defined at:
  2571 ;;		line 38 in file "pwm.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  pulsoD          2   17[COMRAM] int 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2585 ;;      Params:         2       0       0       0       0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2587 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2588 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2589 ;;Total ram usage:        3 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    4
  2592 ;; This function calls:
  2593 ;;		___wmul
  2594 ;;		_clearOneShot
  2595 ;;		_oneShot
  2596 ;; This function is called by:
  2597 ;;		_coordinateRefreshX
  2598 ;;		_coordinateRefreshY
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text9
  2603  000B3C                     __ptext9:
  2604                           	opt callstack 0
  2605  000B3C                     _contador_pulsosD:
  2606                           	opt callstack 24
  2607  000B3C                     
  2608                           ;pwm.c: 39:     ons=0;
  2609  000B3C  0E00               	movlw	0
  2610  000B3E  6E4B               	movwf	_ons^0,c
  2611                           
  2612                           ;pwm.c: 40:     cnt=0;
  2613  000B40  0E00               	movlw	0
  2614  000B42  6E3E               	movwf	(_cnt+1)^0,c
  2615  000B44  0E00               	movlw	0
  2616  000B46  6E3D               	movwf	_cnt^0,c
  2617  000B48                     
  2618                           ;pwm.c: 42:     PORTDbits.RD2= 0;
  2619  000B48  9483               	bcf	131,2,c	;volatile
  2620  000B4A                     
  2621                           ;pwm.c: 43:     PORTDbits.RD3=0;
  2622  000B4A  9683               	bcf	131,3,c	;volatile
  2623                           
  2624                           ;pwm.c: 44:     keepgoing=1;
  2625  000B4C  0E00               	movlw	0
  2626  000B4E  6E42               	movwf	(_keepgoing+1)^0,c
  2627  000B50  0E01               	movlw	1
  2628  000B52  6E41               	movwf	_keepgoing^0,c
  2629                           
  2630                           ;pwm.c: 45:     while(cnt<pulsoD*5){
  2631  000B54  EFBF  F005         	goto	l2286
  2632  000B58                     l251:
  2633                           
  2634                           ;pwm.c: 47:         if (PORTCbits.CCP1==1){
  2635  000B58  A482               	btfss	130,2,c	;volatile
  2636  000B5A  EFB1  F005         	goto	u1761
  2637  000B5E  EFB3  F005         	goto	u1760
  2638  000B62                     u1761:
  2639  000B62  EFB5  F005         	goto	l2282
  2640  000B66                     u1760:
  2641  000B66                     
  2642                           ;pwm.c: 48:             oneShot(); }
  2643  000B66  ECF0  F007         	call	_oneShot	;wreg free
  2644  000B6A                     l2282:
  2645                           
  2646                           ;pwm.c: 49:             if(ons==1){ clearOneShot();}
  2647  000B6A  044B               	decf	_ons^0,w,c
  2648  000B6C  A4D8               	btfss	status,2,c
  2649  000B6E  EFBB  F005         	goto	u1771
  2650  000B72  EFBD  F005         	goto	u1770
  2651  000B76                     u1771:
  2652  000B76  EFBF  F005         	goto	l2286
  2653  000B7A                     u1770:
  2654  000B7A  EC30  F008         	call	_clearOneShot	;wreg free
  2655  000B7E                     l2286:
  2656                           
  2657                           ;pwm.c: 45:     while(cnt<pulsoD*5){
  2658  000B7E  C012  F00C         	movff	contador_pulsosD@pulsoD,___wmul@multiplier
  2659  000B82  C013  F00D         	movff	contador_pulsosD@pulsoD+1,___wmul@multiplier+1
  2660  000B86  0E00               	movlw	0
  2661  000B88  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  2662  000B8A  0E05               	movlw	5
  2663  000B8C  6E0E               	movwf	___wmul@multiplicand^0,c
  2664  000B8E  ECCB  F007         	call	___wmul	;wreg free
  2665  000B92  500C               	movf	?___wmul^0,w,c
  2666  000B94  5C3D               	subwf	_cnt^0,w,c
  2667  000B96  503E               	movf	(_cnt+1)^0,w,c
  2668  000B98  0A80               	xorlw	128
  2669  000B9A  6E14               	movwf	??_contador_pulsosD^0,c
  2670  000B9C  500D               	movf	(?___wmul+1)^0,w,c
  2671  000B9E  0A80               	xorlw	128
  2672  000BA0  5814               	subwfb	??_contador_pulsosD^0,w,c
  2673  000BA2  A0D8               	btfss	status,0,c
  2674  000BA4  EFD6  F005         	goto	u1781
  2675  000BA8  EFD8  F005         	goto	u1780
  2676  000BAC                     u1781:
  2677  000BAC  EFAC  F005         	goto	l251
  2678  000BB0                     u1780:
  2679  000BB0                     
  2680                           ;pwm.c: 54:     PORTDbits.RD2= 1;
  2681  000BB0  8483               	bsf	131,2,c	;volatile
  2682                           
  2683                           ;pwm.c: 55:     PORTDbits.RD3= 1;
  2684  000BB2  8683               	bsf	131,3,c	;volatile
  2685  000BB4                     
  2686                           ;pwm.c: 56:     keepgoing=0;
  2687  000BB4  0E00               	movlw	0
  2688  000BB6  6E42               	movwf	(_keepgoing+1)^0,c
  2689  000BB8  0E00               	movlw	0
  2690  000BBA  6E41               	movwf	_keepgoing^0,c
  2691  000BBC  0012               	return		;funcret
  2692  000BBE                     __end_of_contador_pulsosD:
  2693                           	opt callstack 0
  2694                           
  2695 ;; *************** function _oneShot *****************
  2696 ;; Defined at:
  2697 ;;		line 58 in file "pwm.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    3
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_contador_pulsosD
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text10
  2726  000FE0                     __ptext10:
  2727                           	opt callstack 0
  2728  000FE0                     _oneShot:
  2729                           	opt callstack 24
  2730  000FE0                     
  2731                           ;pwm.c: 59:     if(ons==1){return;}
  2732  000FE0  044B               	decf	_ons^0,w,c
  2733  000FE2  A4D8               	btfss	status,2,c
  2734  000FE4  EFF6  F007         	goto	u1721
  2735  000FE8  EFF8  F007         	goto	u1720
  2736  000FEC                     u1721:
  2737  000FEC  EFFA  F007         	goto	l2242
  2738  000FF0                     u1720:
  2739  000FF0  EFFE  F007         	goto	l259
  2740  000FF4                     l2242:
  2741                           
  2742                           ;pwm.c: 60:     cnt++;
  2743  000FF4  4A3D               	infsnz	_cnt^0,f,c
  2744  000FF6  2A3E               	incf	(_cnt+1)^0,f,c
  2745  000FF8                     
  2746                           ;pwm.c: 61:     ons=1;
  2747  000FF8  0E01               	movlw	1
  2748  000FFA  6E4B               	movwf	_ons^0,c
  2749  000FFC                     l259:
  2750  000FFC  0012               	return		;funcret
  2751  000FFE                     __end_of_oneShot:
  2752                           	opt callstack 0
  2753                           
  2754 ;; *************** function _clearOneShot *****************
  2755 ;; Defined at:
  2756 ;;		line 65 in file "pwm.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    3
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_contador_pulsosD
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text11
  2785  001060                     __ptext11:
  2786                           	opt callstack 0
  2787  001060                     _clearOneShot:
  2788                           	opt callstack 24
  2789  001060                     
  2790                           ;pwm.c: 66:     if(PORTCbits.CCP1==0){ons=0;}
  2791  001060  B482               	btfsc	130,2,c	;volatile
  2792  001062  EF35  F008         	goto	u1731
  2793  001066  EF37  F008         	goto	u1730
  2794  00106A                     u1731:
  2795  00106A  EF39  F008         	goto	l263
  2796  00106E                     u1730:
  2797  00106E  0E00               	movlw	0
  2798  001070  6E4B               	movwf	_ons^0,c
  2799  001072                     l263:
  2800  001072  0012               	return		;funcret
  2801  001074                     __end_of_clearOneShot:
  2802                           	opt callstack 0
  2803                           
  2804 ;; *************** function ___wmul *****************
  2805 ;; Defined at:
  2806 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  multiplier      2   11[COMRAM] unsigned int 
  2809 ;;  multiplicand    2   13[COMRAM] unsigned int 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  product         2   15[COMRAM] unsigned int 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  2   11[COMRAM] unsigned int 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, prodl, prodh
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         4       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        6 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    3
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_contador_pulsosD
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text12
  2836  000F96                     __ptext12:
  2837                           	opt callstack 0
  2838  000F96                     ___wmul:
  2839                           	opt callstack 24
  2840  000F96  500C               	movf	___wmul@multiplier^0,w,c
  2841  000F98  020E               	mulwf	___wmul@multiplicand^0,c
  2842  000F9A  CFF3 F010          	movff	prodl,___wmul@product
  2843  000F9E  CFF4 F011          	movff	prodh,___wmul@product+1
  2844  000FA2  500C               	movf	___wmul@multiplier^0,w,c
  2845  000FA4  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  2846  000FA6  50F3               	movf	243,w,c
  2847  000FA8  2611               	addwf	(___wmul@product+1)^0,f,c
  2848  000FAA  500D               	movf	(___wmul@multiplier+1)^0,w,c
  2849  000FAC  020E               	mulwf	___wmul@multiplicand^0,c
  2850  000FAE  50F3               	movf	243,w,c
  2851  000FB0  2611               	addwf	(___wmul@product+1)^0,f,c
  2852  000FB2  C010  F00C         	movff	___wmul@product,?___wmul
  2853  000FB6  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  2854  000FBA  0012               	return		;funcret
  2855  000FBC                     __end_of___wmul:
  2856                           	opt callstack 0
  2857                           
  2858 ;; *************** function _Error *****************
  2859 ;; Defined at:
  2860 ;;		line 23 in file "Comandos.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  i               2   15[COMRAM] int 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0
  2875 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2877 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2878 ;;Total ram usage:        2 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    4
  2881 ;; This function calls:
  2882 ;;		_USART_Tx
  2883 ;;		_strlen
  2884 ;; This function is called by:
  2885 ;;		_comandos
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text13
  2890  000D92                     __ptext13:
  2891                           	opt callstack 0
  2892  000D92                     _Error:
  2893                           	opt callstack 25
  2894  000D92                     
  2895                           ;Comandos.c: 24:     for(int i=0; i< strlen(msgwrong); i++){
  2896  000D92  0E00               	movlw	0
  2897  000D94  6E11               	movwf	(Error@i+1)^0,c
  2898  000D96  0E00               	movlw	0
  2899  000D98  6E10               	movwf	Error@i^0,c
  2900  000D9A  EFDA  F006         	goto	l2312
  2901  000D9E                     l2308:
  2902                           
  2903                           ;Comandos.c: 25:     USART_Tx(msgwrong[i]);
  2904  000D9E  0EA1               	movlw	low _msgwrong
  2905  000DA0  2410               	addwf	Error@i^0,w,c
  2906  000DA2  6ED9               	movwf	fsr2l,c
  2907  000DA4  0E00               	movlw	high _msgwrong
  2908  000DA6  2011               	addwfc	(Error@i+1)^0,w,c
  2909  000DA8  6EDA               	movwf	fsr2h,c
  2910  000DAA  50DF               	movf	indf2,w,c
  2911  000DAC  EC1A  F008         	call	_USART_Tx
  2912  000DB0                     
  2913                           ;Comandos.c: 26:     }
  2914  000DB0  4A10               	infsnz	Error@i^0,f,c
  2915  000DB2  2A11               	incf	(Error@i+1)^0,f,c
  2916  000DB4                     l2312:
  2917  000DB4  0EA1               	movlw	low _msgwrong
  2918  000DB6  6E0C               	movwf	strlen@s^0,c
  2919  000DB8  0E00               	movlw	high _msgwrong
  2920  000DBA  6E0D               	movwf	(strlen@s+1)^0,c
  2921  000DBC  EC81  F007         	call	_strlen	;wreg free
  2922  000DC0  500C               	movf	?_strlen^0,w,c
  2923  000DC2  5C10               	subwf	Error@i^0,w,c
  2924  000DC4  500D               	movf	(?_strlen+1)^0,w,c
  2925  000DC6  5811               	subwfb	(Error@i+1)^0,w,c
  2926  000DC8  A0D8               	btfss	status,0,c
  2927  000DCA  EFE9  F006         	goto	u1811
  2928  000DCE  EFEB  F006         	goto	u1810
  2929  000DD2                     u1811:
  2930  000DD2  EFCF  F006         	goto	l2308
  2931  000DD6                     u1810:
  2932  000DD6                     
  2933                           ;Comandos.c: 27:   PORTDbits.RD4=1;
  2934  000DD6  8883               	bsf	131,4,c	;volatile
  2935                           
  2936                           ;Comandos.c: 28:     PORTDbits.RD5=0;
  2937  000DD8  9A83               	bcf	131,5,c	;volatile
  2938                           
  2939                           ;Comandos.c: 29:     PORTDbits.RD6=0;
  2940  000DDA  9C83               	bcf	131,6,c	;volatile
  2941  000DDC  0012               	return		;funcret
  2942  000DDE                     __end_of_Error:
  2943                           	opt callstack 0
  2944                           
  2945 ;; *************** function _Ejecutandose *****************
  2946 ;; Defined at:
  2947 ;;		line 33 in file "Comandos.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  i               2   15[COMRAM] int 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2961 ;;      Params:         0       0       0       0       0       0       0       0       0
  2962 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2964 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2965 ;;Total ram usage:        2 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    4
  2968 ;; This function calls:
  2969 ;;		_USART_Tx
  2970 ;;		_strlen
  2971 ;; This function is called by:
  2972 ;;		_comandos
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text14
  2977  000DDE                     __ptext14:
  2978                           	opt callstack 0
  2979  000DDE                     _Ejecutandose:
  2980                           	opt callstack 25
  2981  000DDE                     
  2982                           ;Comandos.c: 34:     for(int i=0; i < strlen(msgeje); i++){
  2983  000DDE  0E00               	movlw	0
  2984  000DE0  6E11               	movwf	(Ejecutandose@i+1)^0,c
  2985  000DE2  0E00               	movlw	0
  2986  000DE4  6E10               	movwf	Ejecutandose@i^0,c
  2987  000DE6  EF00  F007         	goto	l2320
  2988  000DEA                     l2316:
  2989                           
  2990                           ;Comandos.c: 35:     USART_Tx(msgeje[i]);
  2991  000DEA  0E77               	movlw	low _msgeje
  2992  000DEC  2410               	addwf	Ejecutandose@i^0,w,c
  2993  000DEE  6ED9               	movwf	fsr2l,c
  2994  000DF0  0E00               	movlw	high _msgeje
  2995  000DF2  2011               	addwfc	(Ejecutandose@i+1)^0,w,c
  2996  000DF4  6EDA               	movwf	fsr2h,c
  2997  000DF6  50DF               	movf	indf2,w,c
  2998  000DF8  EC1A  F008         	call	_USART_Tx
  2999  000DFC                     
  3000                           ;Comandos.c: 36:     }
  3001  000DFC  4A10               	infsnz	Ejecutandose@i^0,f,c
  3002  000DFE  2A11               	incf	(Ejecutandose@i+1)^0,f,c
  3003  000E00                     l2320:
  3004  000E00  0E77               	movlw	low _msgeje
  3005  000E02  6E0C               	movwf	strlen@s^0,c
  3006  000E04  0E00               	movlw	high _msgeje
  3007  000E06  6E0D               	movwf	(strlen@s+1)^0,c
  3008  000E08  EC81  F007         	call	_strlen	;wreg free
  3009  000E0C  500C               	movf	?_strlen^0,w,c
  3010  000E0E  5C10               	subwf	Ejecutandose@i^0,w,c
  3011  000E10  500D               	movf	(?_strlen+1)^0,w,c
  3012  000E12  5811               	subwfb	(Ejecutandose@i+1)^0,w,c
  3013  000E14  A0D8               	btfss	status,0,c
  3014  000E16  EF0F  F007         	goto	u1821
  3015  000E1A  EF11  F007         	goto	u1820
  3016  000E1E                     u1821:
  3017  000E1E  EFF5  F006         	goto	l2316
  3018  000E22                     u1820:
  3019  000E22                     
  3020                           ;Comandos.c: 37:       PORTDbits.RD4=0;
  3021  000E22  9883               	bcf	131,4,c	;volatile
  3022                           
  3023                           ;Comandos.c: 38:     PORTDbits.RD5=0;
  3024  000E24  9A83               	bcf	131,5,c	;volatile
  3025                           
  3026                           ;Comandos.c: 39:     PORTDbits.RD6=1;
  3027  000E26  8C83               	bsf	131,6,c	;volatile
  3028  000E28  0012               	return		;funcret
  3029  000E2A                     __end_of_Ejecutandose:
  3030                           	opt callstack 0
  3031                           
  3032 ;; *************** function _Completo *****************
  3033 ;; Defined at:
  3034 ;;		line 43 in file "Comandos.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  i               2   15[COMRAM] int 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3048 ;;      Params:         0       0       0       0       0       0       0       0       0
  3049 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3051 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    4
  3055 ;; This function calls:
  3056 ;;		_USART_Tx
  3057 ;;		_strlen
  3058 ;; This function is called by:
  3059 ;;		_comandos
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text15
  3065  000E2A                     __ptext15:
  3066                           	opt callstack 0
  3067  000E2A                     _Completo:
  3068                           	opt callstack 25
  3069  000E2A                     
  3070                           ;Comandos.c: 44:     for(int i=0; i < strlen(msgcomp); i++){
  3071  000E2A  0E00               	movlw	0
  3072  000E2C  6E11               	movwf	(Completo@i+1)^0,c
  3073  000E2E  0E00               	movlw	0
  3074  000E30  6E10               	movwf	Completo@i^0,c
  3075  000E32  EF26  F007         	goto	l2328
  3076  000E36                     l2324:
  3077                           
  3078                           ;Comandos.c: 45:     USART_Tx(msgcomp[i]);
  3079  000E36  0EB5               	movlw	low _msgcomp
  3080  000E38  2410               	addwf	Completo@i^0,w,c
  3081  000E3A  6ED9               	movwf	fsr2l,c
  3082  000E3C  0E00               	movlw	high _msgcomp
  3083  000E3E  2011               	addwfc	(Completo@i+1)^0,w,c
  3084  000E40  6EDA               	movwf	fsr2h,c
  3085  000E42  50DF               	movf	indf2,w,c
  3086  000E44  EC1A  F008         	call	_USART_Tx
  3087  000E48                     
  3088                           ;Comandos.c: 46:     }
  3089  000E48  4A10               	infsnz	Completo@i^0,f,c
  3090  000E4A  2A11               	incf	(Completo@i+1)^0,f,c
  3091  000E4C                     l2328:
  3092  000E4C  0EB5               	movlw	low _msgcomp
  3093  000E4E  6E0C               	movwf	strlen@s^0,c
  3094  000E50  0E00               	movlw	high _msgcomp
  3095  000E52  6E0D               	movwf	(strlen@s+1)^0,c
  3096  000E54  EC81  F007         	call	_strlen	;wreg free
  3097  000E58  500C               	movf	?_strlen^0,w,c
  3098  000E5A  5C10               	subwf	Completo@i^0,w,c
  3099  000E5C  500D               	movf	(?_strlen+1)^0,w,c
  3100  000E5E  5811               	subwfb	(Completo@i+1)^0,w,c
  3101  000E60  A0D8               	btfss	status,0,c
  3102  000E62  EF35  F007         	goto	u1831
  3103  000E66  EF37  F007         	goto	u1830
  3104  000E6A                     u1831:
  3105  000E6A  EF1B  F007         	goto	l2324
  3106  000E6E                     u1830:
  3107  000E6E                     
  3108                           ;Comandos.c: 47:       PORTDbits.RD4=0;
  3109  000E6E  9883               	bcf	131,4,c	;volatile
  3110                           
  3111                           ;Comandos.c: 48:     PORTDbits.RD5=1;
  3112  000E70  8A83               	bsf	131,5,c	;volatile
  3113                           
  3114                           ;Comandos.c: 49:     PORTDbits.RD6=0;
  3115  000E72  9C83               	bcf	131,6,c	;volatile
  3116  000E74  0012               	return		;funcret
  3117  000E76                     __end_of_Completo:
  3118                           	opt callstack 0
  3119                           
  3120 ;; *************** function _strlen *****************
  3121 ;; Defined at:
  3122 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3125 ;;		 -> emergency(26), check(23), msup(14), msdown(13), 
  3126 ;;		 -> msright(18), msleft(20), msgcomp(19), msgeje(22), 
  3127 ;;		 -> msgwrong(20), yl(17), xl(17), 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3130 ;;		 -> emergency(26), check(23), msup(14), msdown(13), 
  3131 ;;		 -> msright(18), msleft(20), msgcomp(19), msgeje(22), 
  3132 ;;		 -> msgwrong(20), yl(17), xl(17), 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  2   11[COMRAM] unsigned int 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3142 ;;      Params:         2       0       0       0       0       0       0       0       0
  3143 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3145 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3146 ;;Total ram usage:        4 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    3
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_xLimit
  3153 ;;		_yLimit
  3154 ;;		_Error
  3155 ;;		_Ejecutandose
  3156 ;;		_Completo
  3157 ;;		_coordinateRefreshX
  3158 ;;		_coordinateRefreshY
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text16
  3163  000F02                     __ptext16:
  3164                           	opt callstack 0
  3165  000F02                     _strlen:
  3166                           	opt callstack 26
  3167  000F02  C00C  F00E         	movff	strlen@s,strlen@a
  3168  000F06  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3169  000F0A  EF89  F007         	goto	l2268
  3170  000F0E                     l2266:
  3171  000F0E  4A0C               	infsnz	strlen@s^0,f,c
  3172  000F10  2A0D               	incf	(strlen@s+1)^0,f,c
  3173  000F12                     l2268:
  3174  000F12  C00C  FFD9         	movff	strlen@s,fsr2l
  3175  000F16  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3176  000F1A  50DF               	movf	indf2,w,c
  3177  000F1C  A4D8               	btfss	status,2,c
  3178  000F1E  EF93  F007         	goto	u1751
  3179  000F22  EF95  F007         	goto	u1750
  3180  000F26                     u1751:
  3181  000F26  EF87  F007         	goto	l2266
  3182  000F2A                     u1750:
  3183  000F2A  500E               	movf	strlen@a^0,w,c
  3184  000F2C  5C0C               	subwf	strlen@s^0,w,c
  3185  000F2E  6E0C               	movwf	?_strlen^0,c
  3186  000F30  500F               	movf	(strlen@a+1)^0,w,c
  3187  000F32  580D               	subwfb	(strlen@s+1)^0,w,c
  3188  000F34  6E0D               	movwf	(?_strlen+1)^0,c
  3189  000F36  0012               	return		;funcret
  3190  000F38                     __end_of_strlen:
  3191                           	opt callstack 0
  3192                           
  3193 ;; *************** function _USART_Tx *****************
  3194 ;; Defined at:
  3195 ;;		line 27 in file "USART.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  data            1    wreg     unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  data            1   11[COMRAM] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        1 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    3
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_xLimit
  3220 ;;		_yLimit
  3221 ;;		_Error
  3222 ;;		_Ejecutandose
  3223 ;;		_Completo
  3224 ;;		_coordinateRefreshX
  3225 ;;		_coordinateRefreshY
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text17
  3231  001034                     __ptext17:
  3232                           	opt callstack 0
  3233  001034                     _USART_Tx:
  3234                           	opt callstack 26
  3235                           
  3236                           ;incstack = 0
  3237                           ;USART_Tx@data stored from wreg
  3238  001034  6E0C               	movwf	USART_Tx@data^0,c
  3239  001036                     l384:
  3240  001036  A89E               	btfss	158,4,c	;volatile
  3241  001038  EF20  F008         	goto	u1741
  3242  00103C  EF22  F008         	goto	u1740
  3243  001040                     u1741:
  3244  001040  EF1B  F008         	goto	l384
  3245  001044                     u1740:
  3246  001044                     
  3247                           ;USART.c: 29:     TXREG= data;
  3248  001044  C00C  FFAD         	movff	USART_Tx@data,4013	;volatile
  3249  001048  0012               	return		;funcret
  3250  00104A                     __end_of_USART_Tx:
  3251                           	opt callstack 0
  3252                           
  3253 ;; *************** function _USART_Rx *****************
  3254 ;; Defined at:
  3255 ;;		line 32 in file "USART.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      unsigned char 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    3
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text18
  3284  001074                     __ptext18:
  3285                           	opt callstack 0
  3286  001074                     _USART_Rx:
  3287                           	opt callstack 27
  3288  001074                     l390:
  3289  001074  AA9E               	btfss	3998,5,c	;volatile
  3290  001076  EF3F  F008         	goto	u2461
  3291  00107A  EF41  F008         	goto	u2460
  3292  00107E                     u2461:
  3293  00107E  EF3A  F008         	goto	l390
  3294  001082                     u2460:
  3295  001082                     
  3296                           ;USART.c: 34:     return RCREG;
  3297  001082  50AE               	movf	174,w,c	;volatile
  3298  001084  0012               	return		;funcret
  3299  001086                     __end_of_USART_Rx:
  3300                           	opt callstack 0
  3301                           
  3302 ;; *************** function _USART_Init *****************
  3303 ;; Defined at:
  3304 ;;		line 6 in file "USART.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  BAUD            4   25[COMRAM] long 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3318 ;;      Params:         4       0       0       0       0       0       0       0       0
  3319 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3321 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3322 ;;Total ram usage:        8 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    4
  3325 ;; This function calls:
  3326 ;;		___aldiv
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text19
  3333  000CB4                     __ptext19:
  3334                           	opt callstack 0
  3335  000CB4                     _USART_Init:
  3336                           	opt callstack 26
  3337  000CB4                     
  3338                           ;USART.c: 8:     TRISCbits.RC6=0;
  3339  000CB4  9C94               	bcf	148,6,c	;volatile
  3340                           
  3341                           ;USART.c: 9:     TRISCbits.RC7=1;
  3342  000CB6  8E94               	bsf	148,7,c	;volatile
  3343  000CB8                     
  3344                           ;USART.c: 11:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3345  000CB8  C01A  F010         	movff	USART_Init@BAUD,___aldiv@divisor
  3346  000CBC  C01B  F011         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
  3347  000CC0  C01C  F012         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
  3348  000CC4  C01D  F013         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
  3349  000CC8  0E00               	movlw	0
  3350  000CCA  6E0C               	movwf	___aldiv@dividend^0,c
  3351  000CCC  0E12               	movlw	18
  3352  000CCE  6E0D               	movwf	(___aldiv@dividend+1)^0,c
  3353  000CD0  0E7A               	movlw	122
  3354  000CD2  6E0E               	movwf	(___aldiv@dividend+2)^0,c
  3355  000CD4  0E00               	movlw	0
  3356  000CD6  6E0F               	movwf	(___aldiv@dividend+3)^0,c
  3357  000CD8  EC64  F003         	call	___aldiv	;wreg free
  3358  000CDC  C00C  F01E         	movff	?___aldiv,_USART_Init$1762
  3359  000CE0  C00D  F01F         	movff	?___aldiv+1,_USART_Init$1762+1
  3360  000CE4  C00E  F020         	movff	?___aldiv+2,_USART_Init$1762+2
  3361  000CE8  C00F  F021         	movff	?___aldiv+3,_USART_Init$1762+3
  3362                           
  3363                           ;USART.c: 11:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3364  000CEC  C01E  F00C         	movff	_USART_Init$1762,___aldiv@dividend
  3365  000CF0  C01F  F00D         	movff	_USART_Init$1762+1,___aldiv@dividend+1
  3366  000CF4  C020  F00E         	movff	_USART_Init$1762+2,___aldiv@dividend+2
  3367  000CF8  C021  F00F         	movff	_USART_Init$1762+3,___aldiv@dividend+3
  3368  000CFC  0E40               	movlw	64
  3369  000CFE  6E10               	movwf	___aldiv@divisor^0,c
  3370  000D00  0E00               	movlw	0
  3371  000D02  6E11               	movwf	(___aldiv@divisor+1)^0,c
  3372  000D04  0E00               	movlw	0
  3373  000D06  6E12               	movwf	(___aldiv@divisor+2)^0,c
  3374  000D08  0E00               	movlw	0
  3375  000D0A  6E13               	movwf	(___aldiv@divisor+3)^0,c
  3376  000D0C  EC64  F003         	call	___aldiv	;wreg free
  3377  000D10  040C               	decf	?___aldiv^0,w,c
  3378  000D12  6EAF               	movwf	175,c	;volatile
  3379  000D14                     
  3380                           ;USART.c: 12:     TXSTAbits.BRGH = 0;
  3381  000D14  94AC               	bcf	172,2,c	;volatile
  3382  000D16                     
  3383                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  3384  000D16  98AC               	bcf	172,4,c	;volatile
  3385  000D18                     
  3386                           ;USART.c: 14:     RCSTAbits.SPEN = 1;
  3387  000D18  8EAB               	bsf	171,7,c	;volatile
  3388  000D1A                     
  3389                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  3390  000D1A  9CAC               	bcf	172,6,c	;volatile
  3391  000D1C                     
  3392                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  3393  000D1C  8AAC               	bsf	172,5,c	;volatile
  3394  000D1E                     
  3395                           ;USART.c: 21:     RCSTAbits.RC9 = 0;
  3396  000D1E  9CAB               	bcf	171,6,c	;volatile
  3397  000D20                     
  3398                           ;USART.c: 22:    RCSTAbits.CREN = 1;
  3399  000D20  88AB               	bsf	171,4,c	;volatile
  3400  000D22  0012               	return		;funcret
  3401  000D24                     __end_of_USART_Init:
  3402                           	opt callstack 0
  3403                           
  3404 ;; *************** function ___aldiv *****************
  3405 ;; Defined at:
  3406 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  dividend        4   11[COMRAM] long 
  3409 ;;  divisor         4   15[COMRAM] long 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  quotient        4   21[COMRAM] long 
  3412 ;;  sign            1   20[COMRAM] unsigned char 
  3413 ;;  counter         1   19[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  4   11[COMRAM] long 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3423 ;;      Params:         8       0       0       0       0       0       0       0       0
  3424 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3426 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3427 ;;Total ram usage:       14 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    3
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_USART_Init
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text20
  3438  0006C8                     __ptext20:
  3439                           	opt callstack 0
  3440  0006C8                     ___aldiv:
  3441                           	opt callstack 26
  3442  0006C8  0E00               	movlw	0
  3443  0006CA  6E15               	movwf	___aldiv@sign^0,c
  3444  0006CC  BE13               	btfsc	(___aldiv@divisor+3)^0,7,c
  3445  0006CE  EF6D  F003         	goto	u1920
  3446  0006D2  EF6B  F003         	goto	u1921
  3447  0006D6                     u1921:
  3448  0006D6  EF77  F003         	goto	l2398
  3449  0006DA                     u1920:
  3450  0006DA  1E13               	comf	(___aldiv@divisor+3)^0,f,c
  3451  0006DC  1E12               	comf	(___aldiv@divisor+2)^0,f,c
  3452  0006DE  1E11               	comf	(___aldiv@divisor+1)^0,f,c
  3453  0006E0  6C10               	negf	___aldiv@divisor^0,c
  3454  0006E2  0E00               	movlw	0
  3455  0006E4  2211               	addwfc	(___aldiv@divisor+1)^0,f,c
  3456  0006E6  2212               	addwfc	(___aldiv@divisor+2)^0,f,c
  3457  0006E8  2213               	addwfc	(___aldiv@divisor+3)^0,f,c
  3458  0006EA  0E01               	movlw	1
  3459  0006EC  6E15               	movwf	___aldiv@sign^0,c
  3460  0006EE                     l2398:
  3461  0006EE  BE0F               	btfsc	(___aldiv@dividend+3)^0,7,c
  3462  0006F0  EF7E  F003         	goto	u1930
  3463  0006F4  EF7C  F003         	goto	u1931
  3464  0006F8                     u1931:
  3465  0006F8  EF88  F003         	goto	l2404
  3466  0006FC                     u1930:
  3467  0006FC  1E0F               	comf	(___aldiv@dividend+3)^0,f,c
  3468  0006FE  1E0E               	comf	(___aldiv@dividend+2)^0,f,c
  3469  000700  1E0D               	comf	(___aldiv@dividend+1)^0,f,c
  3470  000702  6C0C               	negf	___aldiv@dividend^0,c
  3471  000704  0E00               	movlw	0
  3472  000706  220D               	addwfc	(___aldiv@dividend+1)^0,f,c
  3473  000708  220E               	addwfc	(___aldiv@dividend+2)^0,f,c
  3474  00070A  220F               	addwfc	(___aldiv@dividend+3)^0,f,c
  3475  00070C  0E01               	movlw	1
  3476  00070E  1A15               	xorwf	___aldiv@sign^0,f,c
  3477  000710                     l2404:
  3478  000710  0E00               	movlw	0
  3479  000712  6E16               	movwf	___aldiv@quotient^0,c
  3480  000714  0E00               	movlw	0
  3481  000716  6E17               	movwf	(___aldiv@quotient+1)^0,c
  3482  000718  0E00               	movlw	0
  3483  00071A  6E18               	movwf	(___aldiv@quotient+2)^0,c
  3484  00071C  0E00               	movlw	0
  3485  00071E  6E19               	movwf	(___aldiv@quotient+3)^0,c
  3486  000720  5010               	movf	___aldiv@divisor^0,w,c
  3487  000722  1011               	iorwf	(___aldiv@divisor+1)^0,w,c
  3488  000724  1012               	iorwf	(___aldiv@divisor+2)^0,w,c
  3489  000726  1013               	iorwf	(___aldiv@divisor+3)^0,w,c
  3490  000728  B4D8               	btfsc	status,2,c
  3491  00072A  EF99  F003         	goto	u1941
  3492  00072E  EF9B  F003         	goto	u1940
  3493  000732                     u1941:
  3494  000732  EFD1  F003         	goto	l2426
  3495  000736                     u1940:
  3496  000736  0E01               	movlw	1
  3497  000738  6E14               	movwf	___aldiv@counter^0,c
  3498  00073A  EFA5  F003         	goto	l2412
  3499  00073E                     l2410:
  3500  00073E  90D8               	bcf	status,0,c
  3501  000740  3610               	rlcf	___aldiv@divisor^0,f,c
  3502  000742  3611               	rlcf	(___aldiv@divisor+1)^0,f,c
  3503  000744  3612               	rlcf	(___aldiv@divisor+2)^0,f,c
  3504  000746  3613               	rlcf	(___aldiv@divisor+3)^0,f,c
  3505  000748  2A14               	incf	___aldiv@counter^0,f,c
  3506  00074A                     l2412:
  3507  00074A  AE13               	btfss	(___aldiv@divisor+3)^0,7,c
  3508  00074C  EFAA  F003         	goto	u1951
  3509  000750  EFAC  F003         	goto	u1950
  3510  000754                     u1951:
  3511  000754  EF9F  F003         	goto	l2410
  3512  000758                     u1950:
  3513  000758                     l2414:
  3514  000758  90D8               	bcf	status,0,c
  3515  00075A  3616               	rlcf	___aldiv@quotient^0,f,c
  3516  00075C  3617               	rlcf	(___aldiv@quotient+1)^0,f,c
  3517  00075E  3618               	rlcf	(___aldiv@quotient+2)^0,f,c
  3518  000760  3619               	rlcf	(___aldiv@quotient+3)^0,f,c
  3519  000762  5010               	movf	___aldiv@divisor^0,w,c
  3520  000764  5C0C               	subwf	___aldiv@dividend^0,w,c
  3521  000766  5011               	movf	(___aldiv@divisor+1)^0,w,c
  3522  000768  580D               	subwfb	(___aldiv@dividend+1)^0,w,c
  3523  00076A  5012               	movf	(___aldiv@divisor+2)^0,w,c
  3524  00076C  580E               	subwfb	(___aldiv@dividend+2)^0,w,c
  3525  00076E  5013               	movf	(___aldiv@divisor+3)^0,w,c
  3526  000770  580F               	subwfb	(___aldiv@dividend+3)^0,w,c
  3527  000772  A0D8               	btfss	status,0,c
  3528  000774  EFBE  F003         	goto	u1961
  3529  000778  EFC0  F003         	goto	u1960
  3530  00077C                     u1961:
  3531  00077C  EFC9  F003         	goto	l2422
  3532  000780                     u1960:
  3533  000780  5010               	movf	___aldiv@divisor^0,w,c
  3534  000782  5E0C               	subwf	___aldiv@dividend^0,f,c
  3535  000784  5011               	movf	(___aldiv@divisor+1)^0,w,c
  3536  000786  5A0D               	subwfb	(___aldiv@dividend+1)^0,f,c
  3537  000788  5012               	movf	(___aldiv@divisor+2)^0,w,c
  3538  00078A  5A0E               	subwfb	(___aldiv@dividend+2)^0,f,c
  3539  00078C  5013               	movf	(___aldiv@divisor+3)^0,w,c
  3540  00078E  5A0F               	subwfb	(___aldiv@dividend+3)^0,f,c
  3541  000790  8016               	bsf	___aldiv@quotient^0,0,c
  3542  000792                     l2422:
  3543  000792  90D8               	bcf	status,0,c
  3544  000794  3213               	rrcf	(___aldiv@divisor+3)^0,f,c
  3545  000796  3212               	rrcf	(___aldiv@divisor+2)^0,f,c
  3546  000798  3211               	rrcf	(___aldiv@divisor+1)^0,f,c
  3547  00079A  3210               	rrcf	___aldiv@divisor^0,f,c
  3548  00079C  2E14               	decfsz	___aldiv@counter^0,f,c
  3549  00079E  EFAC  F003         	goto	l2414
  3550  0007A2                     l2426:
  3551  0007A2  5015               	movf	___aldiv@sign^0,w,c
  3552  0007A4  B4D8               	btfsc	status,2,c
  3553  0007A6  EFD7  F003         	goto	u1971
  3554  0007AA  EFD9  F003         	goto	u1970
  3555  0007AE                     u1971:
  3556  0007AE  EFE1  F003         	goto	l2430
  3557  0007B2                     u1970:
  3558  0007B2  1E19               	comf	(___aldiv@quotient+3)^0,f,c
  3559  0007B4  1E18               	comf	(___aldiv@quotient+2)^0,f,c
  3560  0007B6  1E17               	comf	(___aldiv@quotient+1)^0,f,c
  3561  0007B8  6C16               	negf	___aldiv@quotient^0,c
  3562  0007BA  0E00               	movlw	0
  3563  0007BC  2217               	addwfc	(___aldiv@quotient+1)^0,f,c
  3564  0007BE  2218               	addwfc	(___aldiv@quotient+2)^0,f,c
  3565  0007C0  2219               	addwfc	(___aldiv@quotient+3)^0,f,c
  3566  0007C2                     l2430:
  3567  0007C2  C016  F00C         	movff	___aldiv@quotient,?___aldiv
  3568  0007C6  C017  F00D         	movff	___aldiv@quotient+1,?___aldiv+1
  3569  0007CA  C018  F00E         	movff	___aldiv@quotient+2,?___aldiv+2
  3570  0007CE  C019  F00F         	movff	___aldiv@quotient+3,?___aldiv+3
  3571  0007D2  0012               	return		;funcret
  3572  0007D4                     __end_of___aldiv:
  3573                           	opt callstack 0
  3574                           
  3575 ;; *************** function _INT_isr *****************
  3576 ;; Defined at:
  3577 ;;		line 21 in file "MAINSPARC.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  i               2    9[COMRAM] int 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0
  3592 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3593 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3594 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3595 ;;Total ram usage:        5 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    2
  3598 ;; This function calls:
  3599 ;;		_emergencyButton
  3600 ;;		i2_USART_Tx
  3601 ;;		i2_strlen
  3602 ;; This function is called by:
  3603 ;;		Interrupt level 2
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	intcode
  3608  000008                     __pintcode:
  3609                           	opt callstack 0
  3610  000008                     _INT_isr:
  3611                           	opt callstack 24
  3612                           
  3613                           ;incstack = 0
  3614  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3615  00000A  EDDF  F005         	call	int_func,f	;refresh shadow registers
  3616                           
  3617                           	psect	intcode_body
  3618  000BBE                     __pintcode_body:
  3619                           	opt callstack 24
  3620  000BBE                     int_func:
  3621                           	opt callstack 24
  3622  000BBE  0006               	pop		; remove dummy address from shadow register refresh
  3623  000BC0  CFD9 F008          	movff	fsr2l,??_INT_isr+1
  3624  000BC4  CFDA F009          	movff	fsr2h,??_INT_isr+2
  3625  000BC8                     
  3626                           ;MAINSPARC.c: 22: _delay((unsigned long)((10)*(8000000L/4000.0)));
  3627  000BC8  0E1A               	movlw	26
  3628  000BCA  6E07               	movwf	??_INT_isr^0,c
  3629  000BCC  0EF8               	movlw	248
  3630  000BCE                     i2u252_47:
  3631  000BCE  2EE8               	decfsz	wreg,f,c
  3632  000BD0  D7FE               	bra	i2u252_47
  3633  000BD2  2E07               	decfsz	??_INT_isr^0,f,c
  3634  000BD4  D7FC               	bra	i2u252_47
  3635  000BD6  D000               	nop2	
  3636  000BD8                     
  3637                           ;MAINSPARC.c: 25:     if(INTCON3bits.INT2IF==1){
  3638  000BD8  A2F0               	btfss	240,1,c	;volatile
  3639  000BDA  EFF1  F005         	goto	i2u166_41
  3640  000BDE  EFF3  F005         	goto	i2u166_40
  3641  000BE2                     i2u166_41:
  3642  000BE2  EFF6  F005         	goto	i2l2154
  3643  000BE6                     i2u166_40:
  3644  000BE6                     
  3645                           ;MAINSPARC.c: 26:        emergencyButton();
  3646  000BE6  EC92  F006         	call	_emergencyButton	;wreg free
  3647  000BEA                     
  3648                           ;MAINSPARC.c: 28:        INTCON3bits.INT2IF=0;
  3649  000BEA  92F0               	bcf	240,1,c	;volatile
  3650  000BEC                     i2l2154:
  3651                           
  3652                           ;MAINSPARC.c: 30: INTCON3bits.INT2IF=0;
  3653  000BEC  92F0               	bcf	240,1,c	;volatile
  3654  000BEE                     
  3655                           ;MAINSPARC.c: 31: for(int i=0; i < strlen(check); i++){
  3656  000BEE  0E00               	movlw	0
  3657  000BF0  6E0B               	movwf	(INT_isr@i+1)^0,c
  3658  000BF2  0E00               	movlw	0
  3659  000BF4  6E0A               	movwf	INT_isr@i^0,c
  3660  000BF6  EF08  F006         	goto	i2l2162
  3661  000BFA                     i2l2158:
  3662                           
  3663                           ;MAINSPARC.c: 32:     USART_Tx(check[i]);
  3664  000BFA  0E60               	movlw	low _check
  3665  000BFC  240A               	addwf	INT_isr@i^0,w,c
  3666  000BFE  6ED9               	movwf	fsr2l,c
  3667  000C00  0E00               	movlw	high _check
  3668  000C02  200B               	addwfc	(INT_isr@i+1)^0,w,c
  3669  000C04  6EDA               	movwf	fsr2h,c
  3670  000C06  50DF               	movf	indf2,w,c
  3671  000C08  EC25  F008         	call	i2_USART_Tx
  3672  000C0C                     
  3673                           ;MAINSPARC.c: 33:     }
  3674  000C0C  4A0A               	infsnz	INT_isr@i^0,f,c
  3675  000C0E  2A0B               	incf	(INT_isr@i+1)^0,f,c
  3676  000C10                     i2l2162:
  3677  000C10  0E60               	movlw	low _check
  3678  000C12  6E01               	movwf	i2strlen@s^0,c
  3679  000C14  0E00               	movlw	high _check
  3680  000C16  6E02               	movwf	(i2strlen@s+1)^0,c
  3681  000C18  EC9C  F007         	call	i2_strlen	;wreg free
  3682  000C1C  5001               	movf	?i2_strlen^0,w,c
  3683  000C1E  5C0A               	subwf	INT_isr@i^0,w,c
  3684  000C20  5002               	movf	(?i2_strlen+1)^0,w,c
  3685  000C22  580B               	subwfb	(INT_isr@i+1)^0,w,c
  3686  000C24  A0D8               	btfss	status,0,c
  3687  000C26  EF17  F006         	goto	i2u167_41
  3688  000C2A  EF19  F006         	goto	i2u167_40
  3689  000C2E                     i2u167_41:
  3690  000C2E  EFFD  F005         	goto	i2l2158
  3691  000C32                     i2u167_40:
  3692  000C32  C009  FFDA         	movff	??_INT_isr+2,fsr2h
  3693  000C36  C008  FFD9         	movff	??_INT_isr+1,fsr2l
  3694  000C3A  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3695  000C3C  0011               	retfie		f
  3696  000C3E                     __end_of_INT_isr:
  3697                           	opt callstack 0
  3698                           
  3699 ;; *************** function _emergencyButton *****************
  3700 ;; Defined at:
  3701 ;;		line 26 in file "Interruptions.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  i               2    4[COMRAM] int 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0
  3716 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3718 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    1
  3722 ;; This function calls:
  3723 ;;		i2_USART_Tx
  3724 ;;		i2_strlen
  3725 ;; This function is called by:
  3726 ;;		_INT_isr
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text22
  3731  000D24                     __ptext22:
  3732                           	opt callstack 0
  3733  000D24                     _emergencyButton:
  3734                           	opt callstack 24
  3735  000D24                     
  3736                           ;Interruptions.c: 27:     for(int i=0; i < strlen(emergency); i++){
  3737  000D24  0E00               	movlw	0
  3738  000D26  6E06               	movwf	(emergencyButton@i+1)^0,c
  3739  000D28  0E00               	movlw	0
  3740  000D2A  6E05               	movwf	emergencyButton@i^0,c
  3741  000D2C  EFA3  F006         	goto	i2l2122
  3742  000D30                     i2l2118:
  3743                           
  3744                           ;Interruptions.c: 28:     USART_Tx(emergency[i]);
  3745  000D30  0E00               	movlw	low _emergency
  3746  000D32  2405               	addwf	emergencyButton@i^0,w,c
  3747  000D34  6ED9               	movwf	fsr2l,c
  3748  000D36  0E01               	movlw	high _emergency
  3749  000D38  2006               	addwfc	(emergencyButton@i+1)^0,w,c
  3750  000D3A  6EDA               	movwf	fsr2h,c
  3751  000D3C  50DF               	movf	indf2,w,c
  3752  000D3E  EC25  F008         	call	i2_USART_Tx
  3753  000D42                     
  3754                           ;Interruptions.c: 29:     }
  3755  000D42  4A05               	infsnz	emergencyButton@i^0,f,c
  3756  000D44  2A06               	incf	(emergencyButton@i+1)^0,f,c
  3757  000D46                     i2l2122:
  3758  000D46  0E00               	movlw	low _emergency
  3759  000D48  6E01               	movwf	i2strlen@s^0,c
  3760  000D4A  0E01               	movlw	high _emergency
  3761  000D4C  6E02               	movwf	(i2strlen@s+1)^0,c
  3762  000D4E  EC9C  F007         	call	i2_strlen	;wreg free
  3763  000D52  5001               	movf	?i2_strlen^0,w,c
  3764  000D54  5C05               	subwf	emergencyButton@i^0,w,c
  3765  000D56  5002               	movf	(?i2_strlen+1)^0,w,c
  3766  000D58  5806               	subwfb	(emergencyButton@i+1)^0,w,c
  3767  000D5A  A0D8               	btfss	status,0,c
  3768  000D5C  EFB2  F006         	goto	i2u163_41
  3769  000D60  EFB4  F006         	goto	i2u163_40
  3770  000D64                     i2u163_41:
  3771  000D64  EF98  F006         	goto	i2l2118
  3772  000D68                     i2u163_40:
  3773  000D68                     
  3774                           ;Interruptions.c: 30:     PORTDbits.RD2= 1;
  3775  000D68  8483               	bsf	131,2,c	;volatile
  3776                           
  3777                           ;Interruptions.c: 31:     PORTDbits.RD3= 1;
  3778  000D6A  8683               	bsf	131,3,c	;volatile
  3779  000D6C                     i2l428:
  3780                           
  3781                           ;Interruptions.c: 32:     while(PORTBbits.RB2==1){
  3782  000D6C  B481               	btfsc	129,2,c	;volatile
  3783  000D6E  EFBB  F006         	goto	i2u164_41
  3784  000D72  EFBD  F006         	goto	i2u164_40
  3785  000D76                     i2u164_41:
  3786  000D76  EFB6  F006         	goto	i2l428
  3787  000D7A                     i2u164_40:
  3788  000D7A                     
  3789                           ;Interruptions.c: 34:     }if(keepgoing==1){
  3790  000D7A  0441               	decf	_keepgoing^0,w,c
  3791  000D7C  1042               	iorwf	(_keepgoing+1)^0,w,c
  3792  000D7E  A4D8               	btfss	status,2,c
  3793  000D80  EFC4  F006         	goto	i2u165_41
  3794  000D84  EFC6  F006         	goto	i2u165_40
  3795  000D88                     i2u165_41:
  3796  000D88  EFC8  F006         	goto	i2l432
  3797  000D8C                     i2u165_40:
  3798  000D8C                     
  3799                           ;Interruptions.c: 35:     PORTDbits.RD2= 0;
  3800  000D8C  9483               	bcf	131,2,c	;volatile
  3801                           
  3802                           ;Interruptions.c: 36:     PORTDbits.RD3= 0;}
  3803  000D8E  9683               	bcf	131,3,c	;volatile
  3804  000D90                     i2l432:
  3805  000D90  0012               	return		;funcret
  3806  000D92                     __end_of_emergencyButton:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function i2_strlen *****************
  3810 ;; Defined at:
  3811 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3814 ;;		 -> emergency(26), check(23), msup(14), msdown(13), 
  3815 ;;		 -> msright(18), msleft(20), msgcomp(19), msgeje(22), 
  3816 ;;		 -> msgwrong(20), yl(17), xl(17), 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  3819 ;;		 -> emergency(26), check(23), msup(14), msdown(13), 
  3820 ;;		 -> msright(18), msleft(20), msgcomp(19), msgeje(22), 
  3821 ;;		 -> msgwrong(20), yl(17), xl(17), 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  2    0[COMRAM] unsigned int 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         2       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        4 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_INT_isr
  3841 ;;		_emergencyButton
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text23
  3846  000F38                     __ptext23:
  3847                           	opt callstack 0
  3848  000F38                     i2_strlen:
  3849                           	opt callstack 25
  3850  000F38  C001  F003         	movff	i2strlen@s,i2strlen@a
  3851  000F3C  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  3852  000F40  EFA4  F007         	goto	i2l1892
  3853  000F44                     i2l1890:
  3854  000F44  4A01               	infsnz	i2strlen@s^0,f,c
  3855  000F46  2A02               	incf	(i2strlen@s+1)^0,f,c
  3856  000F48                     i2l1892:
  3857  000F48  C001  FFD9         	movff	i2strlen@s,fsr2l
  3858  000F4C  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  3859  000F50  50DF               	movf	indf2,w,c
  3860  000F52  A4D8               	btfss	status,2,c
  3861  000F54  EFAE  F007         	goto	i2u114_41
  3862  000F58  EFB0  F007         	goto	i2u114_40
  3863  000F5C                     i2u114_41:
  3864  000F5C  EFA2  F007         	goto	i2l1890
  3865  000F60                     i2u114_40:
  3866  000F60  5003               	movf	i2strlen@a^0,w,c
  3867  000F62  5C01               	subwf	i2strlen@s^0,w,c
  3868  000F64  6E01               	movwf	?i2_strlen^0,c
  3869  000F66  5004               	movf	(i2strlen@a+1)^0,w,c
  3870  000F68  5802               	subwfb	(i2strlen@s+1)^0,w,c
  3871  000F6A  6E02               	movwf	(?i2_strlen+1)^0,c
  3872  000F6C  0012               	return		;funcret
  3873  000F6E                     __end_ofi2_strlen:
  3874                           	opt callstack 0
  3875                           
  3876 ;; *************** function i2_USART_Tx *****************
  3877 ;; Defined at:
  3878 ;;		line 27 in file "USART.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  data            1    wreg     unsigned char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  data            1    0[COMRAM] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0
  3893 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3895 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3896 ;;Total ram usage:        1 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_INT_isr
  3902 ;;		_emergencyButton
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text24
  3907  00104A                     __ptext24:
  3908                           	opt callstack 0
  3909  00104A                     i2_USART_Tx:
  3910                           	opt callstack 25
  3911                           
  3912                           ;incstack = 0
  3913                           ;i2USART_Tx@data stored from wreg
  3914  00104A  6E01               	movwf	i2USART_Tx@data^0,c
  3915  00104C                     i2l384:
  3916  00104C  A89E               	btfss	158,4,c	;volatile
  3917  00104E  EF2B  F008         	goto	i2u113_41
  3918  001052  EF2D  F008         	goto	i2u113_40
  3919  001056                     i2u113_41:
  3920  001056  EF26  F008         	goto	i2l384
  3921  00105A                     i2u113_40:
  3922  00105A                     
  3923                           ;USART.c: 29:     TXREG= data;
  3924  00105A  C001  FFAD         	movff	i2USART_Tx@data,4013	;volatile
  3925  00105E  0012               	return		;funcret
  3926  001060                     __end_ofi2_USART_Tx:
  3927                           	opt callstack 0
  3928  0000                     
  3929                           	psect	rparam
  3930  0000                     
  3931                           	psect	temp
  3932  00004C                     btemp:
  3933                           	opt callstack 0
  3934  00004C                     	ds	1
  3935  0000                     int$flags	set	btemp
  3936  0000                     wtemp8	set	btemp+1
  3937  0000                     ttemp5	set	btemp+1
  3938  0000                     ttemp6	set	btemp+4
  3939  0000                     ttemp7	set	btemp+8
  3940                           tosu	equ	0xFFF
  3941                           tosh	equ	0xFFE
  3942                           tosl	equ	0xFFD
  3943                           stkptr	equ	0xFFC
  3944                           pclatu	equ	0xFFB
  3945                           pclath	equ	0xFFA
  3946                           pcl	equ	0xFF9
  3947                           tblptru	equ	0xFF8
  3948                           tblptrh	equ	0xFF7
  3949                           tblptrl	equ	0xFF6
  3950                           tablat	equ	0xFF5
  3951                           prodh	equ	0xFF4
  3952                           prodl	equ	0xFF3
  3953                           indf0	equ	0xFEF
  3954                           postinc0	equ	0xFEE
  3955                           postdec0	equ	0xFED
  3956                           preinc0	equ	0xFEC
  3957                           plusw0	equ	0xFEB
  3958                           fsr0h	equ	0xFEA
  3959                           fsr0l	equ	0xFE9
  3960                           wreg	equ	0xFE8
  3961                           indf1	equ	0xFE7
  3962                           postinc1	equ	0xFE6
  3963                           postdec1	equ	0xFE5
  3964                           preinc1	equ	0xFE4
  3965                           plusw1	equ	0xFE3
  3966                           fsr1h	equ	0xFE2
  3967                           fsr1l	equ	0xFE1
  3968                           bsr	equ	0xFE0
  3969                           indf2	equ	0xFDF
  3970                           postinc2	equ	0xFDE
  3971                           postdec2	equ	0xFDD
  3972                           preinc2	equ	0xFDC
  3973                           plusw2	equ	0xFDB
  3974                           fsr2h	equ	0xFDA
  3975                           fsr2l	equ	0xFD9
  3976                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        209
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      75
    BANK0           160      0     156
    BANK1           256     11      37
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 26
		 -> emergency(BANK1[26]), check(BANK0[23]), msup(COMRAM[14]), msdown(COMRAM[13]), 
		 -> msright(BANK0[18]), msleft(BANK0[20]), msgcomp(BANK0[19]), msgeje(BANK0[22]), 
		 -> msgwrong(BANK0[20]), yl(BANK0[17]), xl(BANK0[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 26
		 -> emergency(BANK1[26]), check(BANK0[23]), msup(COMRAM[14]), msdown(COMRAM[13]), 
		 -> msright(BANK0[18]), msleft(BANK0[20]), msgcomp(BANK0[19]), msgeje(BANK0[22]), 
		 -> msgwrong(BANK0[20]), yl(BANK0[17]), xl(BANK0[17]), 

    comandos@comando	PTR unsigned char  size(2) Largest target is 8
		 -> main@instruccion(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _main->_comandos
    _comandos->_coordinateRefreshX
    _comandos->_coordinateRefreshY
    _yLimit->_strlen
    _xLimit->_strlen
    _coordinateRefreshY->_contador_pulsosD
    _coordinateRefreshX->_contador_pulsosD
    _contador_pulsosD->___wmul
    _Error->_strlen
    _Ejecutandose->_strlen
    _Completo->_strlen
    _USART_Init->___aldiv

Critical Paths under _INT_isr in COMRAM

    _INT_isr->_emergencyButton
    _emergencyButton->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   16871
                                              0 BANK1     11    11      0
                           _Completo
                         _USART_Init
                           _USART_Rx
                           _USART_Tx
                           _comandos
                           _gpioInit
                  _interruptionsInit
                           _pwm_init
                             _xLimit
                             _yLimit
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptionsInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gpioInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _comandos                                             7     5      2   11977
                                             26 COMRAM     7     5      2
                           _Completo
                       _Ejecutandose
                              _Error
                 _coordinateRefreshX
                 _coordinateRefreshY
                             _xLimit
                             _yLimit
 ---------------------------------------------------------------------------------
 (1) _yLimit                                               2     2      0    1149
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _xLimit                                               2     2      0    1149
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _coordinateRefreshY                                   6     4      2    2265
                                             20 COMRAM     6     4      2
                           _USART_Tx
                   _contador_pulsosD
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _coordinateRefreshX                                   6     4      2    2265
                                             20 COMRAM     6     4      2
                           _USART_Tx
                   _contador_pulsosD
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _contador_pulsosD                                     3     1      2     803
                                             17 COMRAM     3     1      2
                             ___wmul
                       _clearOneShot
                            _oneShot
 ---------------------------------------------------------------------------------
 (4) _oneShot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _clearOneShot                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Error                                                2     2      0    1149
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Ejecutandose                                         2     2      0    1149
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Completo                                             2     2      0    1149
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2    1050
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      31
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     960
                                             25 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                             11 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT_isr                                              5     5      0     420
                                              6 COMRAM     5     5      0
                    _emergencyButton
                         i2_USART_Tx
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) _emergencyButton                                      2     2      0     210
                                              4 COMRAM     2     2      0
                         i2_USART_Tx
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) i2_USART_Tx                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Completo
     _USART_Tx
     _strlen
   _USART_Init
     ___aldiv
   _USART_Rx
   _USART_Tx
   _comandos
     _Completo
       _USART_Tx
       _strlen
     _Ejecutandose
       _USART_Tx
       _strlen
     _Error
       _USART_Tx
       _strlen
     _coordinateRefreshX
       _USART_Tx
       _contador_pulsosD
         ___wmul
         _clearOneShot
         _oneShot
       _strlen
     _coordinateRefreshY
       _USART_Tx
       _contador_pulsosD
         ___wmul
         _clearOneShot
         _oneShot
       _strlen
     _xLimit
       _USART_Tx
       _strlen
     _yLimit
       _USART_Tx
       _strlen
   _gpioInit
   _interruptionsInit
   _pwm_init
   _xLimit
     _USART_Tx
     _strlen
   _yLimit
     _USART_Tx
     _strlen

 _INT_isr (ROOT)
   _emergencyButton
     i2_USART_Tx
     i2_strlen
   i2_USART_Tx
   i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      B      25       7       14.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      20        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 04 12:20:11 2019

                          _x 0045                            _y 0043                           l52 0EBA  
                         l70 0E74                           l46 0F00                           l63 0E22  
                         l64 0E28                           l57 0DD6                           l81 0A9E  
                         l58 0DDC                           l92 09B8                           l69 0E6E  
                         _xl 00EB                           _yl 00DA          ___wmul@multiplicand 000E  
                        l121 0384                          l122 0394                          l124 03A2  
                        l204 0F94                          l119 0376                          l251 0B58  
                        l181 06C6                          l254 0BB0                          l422 1094  
                        l263 1072                          l255 0BBC                          l247 0FDE  
                        l351 081A                          l352 082A                          l514 07D2  
                        l354 0838                          l435 0FBA                          l259 0FFC  
                        l381 0D22                          l349 080C                          l390 1074  
                        l359 08BE                          l384 1036                          l393 1084  
                        l387 1048                          _PR2 000FCB             ?_emergencyButton 0001  
                        _cnt 003D                          _ons 004B                          wreg 000FE8  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         l1112 0F36  
                       l2300 0E82                         l2310 0DB0                         l2302 0E94  
                       l2400 06FC                         l2320 0E00                         l2312 0DB4  
                       l2304 0E98                         l2410 073E                         l2402 070C  
                       l2322 0E2A                         l2314 0DDE                         l2306 0D92  
                       l2250 106E                         l2242 0FF4                         l2330 09BA  
                       l2420 0790                         l2412 074A                         l2404 0710  
                       l2260 1036                         l2324 0E36                         l2316 0DEA  
                       l2308 0D9E                         l2244 0FF8                         l2340 09F6  
                       l2332 09D0                         l2500 034C                         l2430 07C2  
                       l2422 0792                         l2414 0758                         l2406 0720  
                       l2262 1044                         l2270 0F2A                         l2326 0E48  
                       l2318 0DFC                         l2254 0F96                         l2238 0FE0  
                       l2350 0A4E                         l2342 0A18                         l2334 09D4  
                       l2510 0374                         l2502 036A                         l2424 079C  
                       l2416 0762                         l2408 0736                         l2264 0F02  
                       l2328 0E4C                         l2256 0FB2                         l2248 1060  
                       l2280 0B66                         l2352 0A60                         l2336 09E0  
                       l2344 0A28                         l2360 08D4                         l2600 05C8  
                       l2520 0392                         l2512 0388                         l2504 036E  
                       l2440 0064                         l2418 0780                         l2426 07A2  
                       l2266 0F0E                         l2282 0B6A                         l2274 0B3C  
                       l2354 0A64                         l2346 0A3E                         l2338 09F2  
                       l2370 0910                         l2362 08EA                         l2290 0EBC  
                       l2522 03A6                         l2514 038C                         l2506 0370  
                       l2450 00F2                         l2442 0080                         l2434 0012  
                       l2428 07B2                         l2268 0F12                         l2284 0B7A  
                       l2276 0B48                         l2356 0A86                         l2348 0A42  
                       l2380 0968                         l2372 0932                         l2364 08EE  
                       l2292 0EC8                         l2620 0608                         l2524 03AA  
                       l2516 038E                         l2508 0372                         l2460 017E  
                       l2452 010E                         l2444 009C                         l2436 002C  
                       l2700 07EE                         l2390 06C8                         l2286 0B7E  
                       l2278 0B4A                         l2358 0A96                         l2382 097A  
                       l2366 08FA                         l2374 0942                         l2294 0EDA  
                       l2630 069E                         l2622 0626                         l2550 0436  
                       l2526 03B2                         l2518 0390                         l2542 03C2  
                       l2470 0262                         l2462 019A                         l2454 012A  
                       l2446 00B8                         l2438 0048                         l2710 07FE  
                       l2702 07F2                         l2392 06CC                         l2288 0BB4  
                       l2384 097E                         l2376 0958                         l2368 090C  
                       l2296 0EDE                         l2632 06BC                         l2624 0644  
                       l2616 05D0                         l2560 04B2                         l2552 0454  
                       l2544 03DC                         l2464 019E                         l2456 0146  
                       l2448 00D4                         l2472 0276                         l2720 0808  
                       l2712 0800                         l2704 07F6                         l2394 06DA  
                       l2386 09A0                         l2378 095C                         l2298 0E76  
                       l2634 06C0                         l2626 0662                         l2618 05EA  
                       l2554 0472                         l2546 03FA                         l2490 02B6  
                       l2466 01FA                         l2458 0162                         l2730 0826  
                       l2722 080A                         l2714 0802                         l2706 07FA  
                       l2396 06EA                         l2388 09B0                         l2628 0680  
                       l2580 04F4                         l2556 0490                         l2548 0418  
                       l2492 02D4                         l2468 0256                         l2652 0F6E  
                       l2660 0FBC                         l2740 0854                         l2732 0828  
                       l2724 081E                         l2716 0804                         l2708 07FC  
                       l2398 06EE                         l2670 0CB8                         l2590 058A  
                       l2582 0512                         l2558 04AE                         l2494 02F2  
                       l2486 027E                         l2654 0F8E                         l2662 0FC8  
                       l2750 086E                         l2742 0856                         l2734 083C  
                       l2726 0822                         l2718 0806                         l2680 0D1C  
                       l2672 0D14                         l2592 05A8                         l2584 0530  
                       l2576 04BC                         l2496 0310                         l2488 0298  
                       l2656 0F90                         l2664 0FCA                         l2760 088A  
                       l2752 0872                         l2736 0840                         l2728 0824  
                       l2682 0D1E                         l2674 0D16                         l2690 1082  
                       l2594 05AC                         l2586 054E                         l2578 04D6  
                       l2498 032E                         l2658 0F92                         l2666 0FDC  
                       l2762 089C                         l2754 0882                         l2738 0848  
                       l2684 0D20                         l2676 0D18                         l2668 0CB4  
                       l2596 05AE                         l2588 056C                         l2764 08A2  
                       l2748 085C                         l2678 0D1A                         l2598 05C6  
                       l2686 1086                         l2766 08C0                         l2694 07D4  
                       l2688 1074                         l2696 07D8                         l2698 07EC  
                       u2000 0064                         u2001 0060                         u2010 0080  
                       u2011 007C                         u2100 017E                         u2020 009C  
                       u2101 017A                         u2021 0098                         u2110 019A  
                       u2030 00B8                         u2111 0196                         u2031 00B4  
                       u2200 0384                         u2120 0298                         u2040 00D4  
                       u2201 0380                         u2121 0294                         u2041 00D0  
                       u2210 03A2                         u2130 02B6                         u2050 00F2  
                       u2211 039E                         u2131 02B2                         u2051 00EE  
                       u2300 04D6                         u2220 03DC                         u2140 02D4  
                       u2060 010E                         u2301 04D2                         u2221 03D8  
                       u2141 02D0                         u2061 010A                         u2310 04F4  
                       u2230 03FA                         u2150 02F2                         u2070 012A  
                       _LATB 000F8A                         u2311 04F0                         u2231 03F6  
                       u2151 02EE                         u2071 0126                         _LATC 000F8B  
                       u2400 0626                         u2320 0512                         u2240 0418  
                       u2160 0310                         u2080 0146                         _LATD 000F8C  
                       u2401 0622                         u2321 050E                         u2241 0414  
                       u2161 030C                         u2081 0142                         u2410 0644  
                       u2330 0530                         u2250 0436                         u2170 032E  
                       u2090 0162                         u2411 0640                         u2331 052C  
                       u2251 0432                         u2171 032A                         u2091 015E  
                       u2420 0662                         u2340 054E                         u2260 0454  
                       u2180 034C                         u2500 08BE                         u2421 065E  
                       u2341 054A                         u2261 0450                         u2181 0348  
                       u2501 08BA                         u2430 0680                         u2350 056C  
                       u2270 0472                         u2190 036A                         u2431 067C  
                       u2351 0568                         u2271 046E                         u2191 0366  
                       u1720 0FF0                         u1800 0EBA                         u2440 069E  
                       u2360 058A                         u2280 0490                         u1721 0FEC  
                       u1801 0EB6                         u2441 069A                         u2361 0586  
                       u2281 048C                         u1810 0DD6                         u1730 106E  
                       u2450 06BC                         u2370 05A8                         u2290 04AE  
                       u1811 0DD2                         u1731 106A                         u2451 06B8  
                       u2371 05A4                         u2291 04AA                         u2460 1082  
                       u1740 1044                         u1820 0E22                         u1900 0958  
                       u2380 05EA                         u2461 107E                         u1741 1040  
                       u1821 0E1E                         u1901 0954                         u2381 05E6  
                       u2517 05B8                         u1750 0F2A                         u1830 0E6E  
                       u1910 09A0                         u2390 0608                         u2470 081A  
                       u1751 0F26                         u1831 0E6A                         u1911 099C  
                       u2391 0604                         u2471 0816                         u1920 06DA  
                       u1760 0B66                         u1840 09D0                         u2480 0838  
                       u1921 06D6                         u1761 0B62                         u1841 09CC  
                       u2481 0834                         u1930 06FC                         u1770 0B7A  
                       u1850 0A18                         u2490 0882                         u1931 06F8  
                       u1771 0B76                         u1851 0A14                         u2491 087E  
                       u1940 0736                         u1780 0BB0                         u1860 0A3E  
                       u1941 0732                         u1781 0BAC                         u1861 0A3A  
                       u1950 0758                         u1870 0A86                         u1790 0F00  
                       u1951 0754                         u1871 0A82                         u1791 0EFC  
                       u1960 0780                         u1880 08EA                         u1961 077C  
                       u1881 08E6                         u1970 07B2                         u1890 0932  
                       u1971 07AE                         u1891 092E                         u1980 002C  
                       u1981 0028                         u1990 0048                         u1991 0044  
                       _RCIF 007CF5                         _TMR2 000FCC              __end_of_INT_isr 0C3E  
                       _main 07D4                         _msup 0022                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 004C                         prodh 000FF4                         prodl 000FF3  
                       start 000E                 ___param_bank 000000         __end_of_clearOneShot 1074  
       __end_of_Ejecutandose 0E2A                  ?i2_USART_Tx 0001              __end_of___aldiv 07D4  
               main@contador 0124                        ?_main 0001                        _CMCON 000FB4  
                      _T2CON 000FCA                        i2l432 0D90                        i2l344 0C32  
                      i2l427 0D68                        i2l428 0D6C                        i2l384 104C  
                      i2l387 105E                        _RCREG 000FAE                        _SPBRG 000FAF  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _TRISB 000F93                        _TRISD 000F95                        _TXREG 000FAD  
                      _Error 0D92                        _check 0060              __end_of_oneShot 0FFE  
           __end_of_USART_Rx 1086             __end_of_USART_Tx 104A                        main@i 0122  
               USART_Tx@data 000C                        tablat 000FF5                        ttemp5 004D  
                      ttemp6 0050                        ttemp7 0054                        status 000FD8  
                      wtemp8 004D                  ?_USART_Init 001A             __end_ofi2_strlen 0F6E  
             __CFG_MCLRE$OFF 000000              __initialization 0C3E             __end_of_Completo 0E76  
               __end_of_main 08D4                       ??_main 0022                __activetblptr 000000  
                     ?_Error 0001                    ??_INT_isr 0007                       _CCPR1L 000FBE  
                     _CCPR2L 000FBB                       i2l1112 0F6C                       i2l2120 0D42  
                     i2l2122 0D46                       i2l2124 0D7A                       i2l2116 0D24  
                     i2l2126 0D8C                       i2l2118 0D30                       i2l2150 0BE6  
                     i2l2160 0C0C                       i2l2152 0BEA                       i2l2162 0C10  
                     i2l2154 0BEC                       i2l2146 0BC8                       i2l2156 0BEE  
                     i2l2148 0BD8                       i2l2158 0BFA                       i2l1890 0F44  
                     i2l1884 104C                       i2l1892 0F48                       i2l1886 105A  
                     i2l1894 0F60                       i2l1888 0F38                       _OSCCON 000FD3  
        __size_ofi2_USART_Tx 0016                       Error@i 0010             _contador_pulsosD 0B3C  
           __end_of_comandos 06C8                    ??___aldiv 0014                       ___wmul 0F96  
           __end_of_gpioInit 0F96                       _xLimit 0EBC                       _yLimit 0E76  
                     clear_0 0CA4                       _msgeje 0077              comandos@comando 001B  
                     _msleft 008D                       _msdown 0030                       _strlen 0F02  
               __pdataCOMRAM 0022                    ??_oneShot 000C                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8          __size_of_USART_Init 0070  
           __end_of_pwm_init 0FE0             emergencyButton@i 0005                   __accesstop 0060  
    __end_of__initialization 0CAA              __CFG_PBADEN$OFF 000000                ___rparam_used 000001  
         _coordinateRefreshX 09BA           _coordinateRefreshY 08D4        __size_of_clearOneShot 0014  
      __size_of_Ejecutandose 004C                __end_of_Error 0DDE               __pcstackCOMRAM 0001  
               __pidataBANK0 0AA0                 __pidataBANK1 1019          ?_coordinateRefreshX 0015  
        ?_coordinateRefreshY 0015                    ?_USART_Rx 0001                    ?_USART_Tx 0001  
                    ??_Error 0010                    ?i2_strlen 0001         ??_coordinateRefreshX 0017  
       ??_coordinateRefreshY 0017                    ?_Completo 0001                 _clearOneShot 1060  
               _Ejecutandose 0DDE               i2USART_Tx@data 0001          coordinateRefreshX@i 0017  
        coordinateRefreshX@j 0019          coordinateRefreshY@i 0017          coordinateRefreshY@j 0019  
                    ?___wmul 000C                      _CCP1CON 000FBD                      _CCP2CON 000FBA  
                    ?_xLimit 0001                      ?_yLimit 0001                 ??i2_USART_Tx 0001  
                 ??_USART_Rx 000C                   ??_USART_Tx 000C                      ?_strlen 000C  
                    _INT_isr 0008                   ??i2_strlen 0003                    ?_comandos 001B  
                 ??_Completo 0010     __size_of_emergencyButton 006E                    ?_gpioInit 0001  
         __end_ofi2_USART_Tx 1060                 ??_USART_Init 001E                      __Hparam 0000  
                    __Lparam 0000                      ___aldiv 06C8              __size_of___wmul 0026  
                  ?_pwm_init 0001               USART_Init@BAUD 001A              __size_of_xLimit 0046  
            __size_of_yLimit 0046                      __pcinit 0C3E                      __ramtop 0800  
                    __ptext0 07D4                      __ptext1 0FBC                      __ptext2 1086  
                    __ptext3 0F6E                      __ptext4 0012                      __ptext5 0E76  
                    __ptext6 0EBC                      __ptext7 08D4                      __ptext8 09BA  
                    __ptext9 0B3C              __size_of_strlen 0036                    _T2CONbits 000FCA  
                    _oneShot 0FE0             ___aldiv@dividend 000C                      _msgcomp 00B5  
   __end_of_contador_pulsosD 0BBE                      _nvalorx 0049                      _nvalory 0047  
                    _msright 00C8           __end_of_USART_Init 0D24                   ??_comandos 001D  
             __pintcode_body 0BBE         end_of_initialization 0CAA                      xLimit@i 0010  
                 ??_gpioInit 000C                      yLimit@i 0010                      int_func 0BBE  
                  _RCSTAbits 000FAB             ___aldiv@quotient 0016                      postdec1 000FE5  
                    postinc0 000FEE                      postinc2 000FDE                   ??_pwm_init 000C  
                    strlen@a 000E                      strlen@s 000C                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    Completo@i 0010  
                  _TRISCbits 000F94                    _TXSTAbits 000FAC            ??_emergencyButton 0005  
              Ejecutandose@i 0010               __end_of___wmul 0FBC                __pidataCOMRAM 0FFE  
             __end_of_xLimit 0F02               __end_of_yLimit 0EBC            __size_of_USART_Rx 0012  
          __size_of_USART_Tx 0016               __end_of_strlen 0F38          start_initialization 0C3E  
          __size_ofi2_strlen 0036                    i2strlen@a 0003                    i2strlen@s 0001  
          __size_of_Completo 004C       coordinateRefreshX@newX 0015       coordinateRefreshY@newY 0015  
     contador_pulsosD@pulsoD 0012                     ??___wmul 0010                  __pdataBANK0 0060  
                __pdataBANK1 0100                     ??_xLimit 0010                     ??_yLimit 0010  
                   ??_strlen 000E                  __pbssCOMRAM 003D                __pcstackBANK1 011A  
                   ?_INT_isr 0001  __size_of_coordinateRefreshX 00E6  __size_of_coordinateRefreshY 00E6  
          __size_of_comandos 06B6            __size_of_gpioInit 0028                     INT_isr@i 000A  
                  __pintcode 0008                     ?___aldiv 000C                    _emergency 0100  
          __size_of_pwm_init 0024                    _keepgoing 0041                     ?_oneShot 0001  
             __size_of_Error 004C            ?_contador_pulsosD 0012           ??_contador_pulsosD 0014  
            ___aldiv@divisor 0010              ___aldiv@counter 0014               ___wmul@product 0010  
          _interruptionsInit 1086                     i2u113_40 105A                     i2u113_41 1056  
                   i2u114_40 0F60                     i2u114_41 0F5C           ?_interruptionsInit 0001  
                   i2u163_40 0D68                     i2u163_41 0D64                     i2u164_40 0D7A  
                   i2u164_41 0D76                     i2u252_47 0BCE                     i2u165_40 0D8C  
                   i2u165_41 0D88                     i2u166_40 0BE6                     i2u166_41 0BE2  
                   i2u167_40 0C32                     i2u167_41 0C2E                     _PIR1bits 000F9E  
                   _RCONbits 000FD0          ??_interruptionsInit 000C                     _USART_Rx 1074  
                   _USART_Tx 1034            ___wmul@multiplier 000C                     i2_strlen 0F38  
            _emergencyButton 0D24             __size_of_INT_isr 0C36                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0                    copy_data0 0C52                    copy_data1 0C72  
                  copy_data2 0C92                     _Completo 0E2A              _emergencySwitch 003F  
  __end_of_interruptionsInit 1096                     __Hrparam 0000                     __Lrparam 0000  
           __size_of___aldiv 010C              main@instruccion 011A             __size_of_oneShot 001E  
                   __ptext10 0FE0                     __ptext11 1060                     __ptext20 06C8  
                   __ptext12 0F96                     __ptext13 0D92                     __ptext22 0D24  
                   __ptext14 0DDE                     __ptext23 0F38                     __ptext15 0E2A  
                   __ptext24 104A                     __ptext16 0F02                     __ptext17 1034  
                   __ptext18 1074                     __ptext19 0CB4                     _comandos 0012  
              ?_clearOneShot 0001                ?_Ejecutandose 0001                     _gpioInit 0F6E  
              __size_of_main 0100              _USART_Init$1762 001E                     _msgwrong 00A1  
                   int$flags 004C                     _pwm_init 0FBC      __end_of_emergencyButton 0D92  
                 _INTCONbits 000FF2               ??_clearOneShot 000C               ??_Ejecutandose 0010  
                   intlevel2 0000   __size_of_interruptionsInit 0010                   i2_USART_Tx 104A  
        __CFG_FOSC$INTOSC_HS 000000                 ___aldiv@sign 0015   __end_of_coordinateRefreshX 0AA0  
 __end_of_coordinateRefreshY 09BA                   _USART_Init 0CB4    __size_of_contador_pulsosD 0082  
