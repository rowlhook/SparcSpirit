

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 09 19:16:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001082                     __pidataCOMRAM:
    82                           	opt callstack 0
    83                           
    84                           ;initializer for _msleft
    85  001082  47                 	db	71
    86  001083  6F                 	db	111
    87  001084  69                 	db	105
    88  001085  6E                 	db	110
    89  001086  67                 	db	103
    90  001087  20                 	db	32
    91  001088  4C                 	db	76
    92  001089  65                 	db	101
    93  00108A  66                 	db	102
    94  00108B  74                 	db	116
    95  00108C  20                 	db	32
    96  00108D  00                 	db	0
    97                           
    98                           ;initializer for _msup
    99  00108E  47                 	db	71
   100  00108F  6F                 	db	111
   101  001090  69                 	db	105
   102  001091  6E                 	db	110
   103  001092  67                 	db	103
   104  001093  20                 	db	32
   105  001094  55                 	db	85
   106  001095  70                 	db	112
   107  001096  0A                 	db	10
   108  001097  20                 	db	32
   109  001098  00                 	db	0
   110                           
   111                           	psect	idataBANK0
   112  000AA0                     __pidataBANK0:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for _emergency
   116  000AA0  45                 	db	69
   117  000AA1  6D                 	db	109
   118  000AA2  65                 	db	101
   119  000AA3  72                 	db	114
   120  000AA4  67                 	db	103
   121  000AA5  65                 	db	101
   122  000AA6  6E                 	db	110
   123  000AA7  63                 	db	99
   124  000AA8  79                 	db	121
   125  000AA9  20                 	db	32
   126  000AAA  42                 	db	66
   127  000AAB  75                 	db	117
   128  000AAC  74                 	db	116
   129  000AAD  74                 	db	116
   130  000AAE  6F                 	db	111
   131  000AAF  6E                 	db	110
   132  000AB0  20                 	db	32
   133  000AB1  50                 	db	80
   134  000AB2  72                 	db	114
   135  000AB3  65                 	db	101
   136  000AB4  73                 	db	115
   137  000AB5  73                 	db	115
   138  000AB6  65                 	db	101
   139  000AB7  64                 	db	100
   140  000AB8  0A                 	db	10
   141  000AB9  00                 	db	0
   142                           
   143                           ;initializer for _check
   144  000ABA  53                 	db	83
   145  000ABB  54                 	db	84
   146  000ABC  49                 	db	73
   147  000ABD  4C                 	db	76
   148  000ABE  4C                 	db	76
   149  000ABF  20                 	db	32
   150  000AC0  49                 	db	73
   151  000AC1  4E                 	db	78
   152  000AC2  20                 	db	32
   153  000AC3  49                 	db	73
   154  000AC4  4E                 	db	78
   155  000AC5  54                 	db	84
   156  000AC6  45                 	db	69
   157  000AC7  52                 	db	82
   158  000AC8  52                 	db	82
   159  000AC9  55                 	db	85
   160  000ACA  50                 	db	80
   161  000ACB  54                 	db	84
   162  000ACC  49                 	db	73
   163  000ACD  4F                 	db	79
   164  000ACE  4E                 	db	78
   165  000ACF  0A                 	db	10
   166  000AD0  00                 	db	0
   167                           
   168                           ;initializer for _msgcomp
   169  000AD1  53                 	db	83
   170  000AD2  75                 	db	117
   171  000AD3  63                 	db	99
   172  000AD4  63                 	db	99
   173  000AD5  65                 	db	101
   174  000AD6  73                 	db	115
   175  000AD7  73                 	db	115
   176  000AD8  66                 	db	102
   177  000AD9  75                 	db	117
   178  000ADA  6C                 	db	108
   179  000ADB  6C                 	db	108
   180  000ADC  79                 	db	121
   181  000ADD  20                 	db	32
   182  000ADE  45                 	db	69
   183  000ADF  78                 	db	120
   184  000AE0  65                 	db	101
   185  000AE1  63                 	db	99
   186  000AE2  75                 	db	117
   187  000AE3  74                 	db	116
   188  000AE4  65                 	db	101
   189  000AE5  64                 	db	100
   190  000AE6  0A                 	db	10
   191  000AE7  00                 	db	0
   192                           
   193                           ;initializer for _msgeje
   194  000AE8  43                 	db	67
   195  000AE9  6F                 	db	111
   196  000AEA  6D                 	db	109
   197  000AEB  6D                 	db	109
   198  000AEC  61                 	db	97
   199  000AED  6E                 	db	110
   200  000AEE  64                 	db	100
   201  000AEF  20                 	db	32
   202  000AF0  69                 	db	105
   203  000AF1  6E                 	db	110
   204  000AF2  20                 	db	32
   205  000AF3  45                 	db	69
   206  000AF4  78                 	db	120
   207  000AF5  65                 	db	101
   208  000AF6  63                 	db	99
   209  000AF7  75                 	db	117
   210  000AF8  74                 	db	116
   211  000AF9  69                 	db	105
   212  000AFA  6F                 	db	111
   213  000AFB  6E                 	db	110
   214  000AFC  0A                 	db	10
   215  000AFD  00                 	db	0
   216                           
   217                           ;initializer for _yl
   218  000AFE  4C                 	db	76
   219  000AFF  69                 	db	105
   220  000B00  6D                 	db	109
   221  000B01  69                 	db	105
   222  000B02  74                 	db	116
   223  000B03  20                 	db	32
   224  000B04  79                 	db	121
   225  000B05  20                 	db	32
   226  000B06  52                 	db	82
   227  000B07  65                 	db	101
   228  000B08  61                 	db	97
   229  000B09  63                 	db	99
   230  000B0A  68                 	db	104
   231  000B0B  65                 	db	101
   232  000B0C  64                 	db	100
   233  000B0D  0A                 	db	10
   234  000B0E  00                 	db	0
   235                           
   236                           ;initializer for _xl
   237  000B0F  4C                 	db	76
   238  000B10  69                 	db	105
   239  000B11  6D                 	db	109
   240  000B12  69                 	db	105
   241  000B13  74                 	db	116
   242  000B14  20                 	db	32
   243  000B15  78                 	db	120
   244  000B16  20                 	db	32
   245  000B17  52                 	db	82
   246  000B18  65                 	db	101
   247  000B19  61                 	db	97
   248  000B1A  63                 	db	99
   249  000B1B  68                 	db	104
   250  000B1C  65                 	db	101
   251  000B1D  64                 	db	100
   252  000B1E  0A                 	db	10
   253  000B1F  00                 	db	0
   254                           
   255                           ;initializer for _msright
   256  000B20  47                 	db	71
   257  000B21  6F                 	db	111
   258  000B22  69                 	db	105
   259  000B23  6E                 	db	110
   260  000B24  67                 	db	103
   261  000B25  20                 	db	32
   262  000B26  52                 	db	82
   263  000B27  69                 	db	105
   264  000B28  67                 	db	103
   265  000B29  68                 	db	104
   266  000B2A  74                 	db	116
   267  000B2B  20                 	db	32
   268  000B2C  00                 	db	0
   269                           
   270                           ;initializer for _msdown
   271  000B2D  47                 	db	71
   272  000B2E  6F                 	db	111
   273  000B2F  69                 	db	105
   274  000B30  6E                 	db	110
   275  000B31  67                 	db	103
   276  000B32  20                 	db	32
   277  000B33  44                 	db	68
   278  000B34  6F                 	db	111
   279  000B35  77                 	db	119
   280  000B36  6E                 	db	110
   281  000B37  0A                 	db	10
   282  000B38  20                 	db	32
   283  000B39  00                 	db	0
   284                           
   285                           	psect	idataBANK1
   286  000F4C                     __pidataBANK1:
   287                           	opt callstack 0
   288                           
   289                           ;initializer for _CE
   290  000F4C  20                 	db	32
   291  000F4D  45                 	db	69
   292  000F4E  72                 	db	114
   293  000F4F  72                 	db	114
   294  000F50  6F                 	db	111
   295  000F51  72                 	db	114
   296  000F52  20                 	db	32
   297  000F53  31                 	db	49
   298  000F54  3A                 	db	58
   299  000F55  20                 	db	32
   300  000F56  49                 	db	73
   301  000F57  6E                 	db	110
   302  000F58  76                 	db	118
   303  000F59  61                 	db	97
   304  000F5A  6C                 	db	108
   305  000F5B  69                 	db	105
   306  000F5C  64                 	db	100
   307  000F5D  20                 	db	32
   308  000F5E  43                 	db	67
   309  000F5F  6F                 	db	111
   310  000F60  6F                 	db	111
   311  000F61  72                 	db	114
   312  000F62  64                 	db	100
   313  000F63  69                 	db	105
   314  000F64  6E                 	db	110
   315  000F65  61                 	db	97
   316  000F66  74                 	db	116
   317  000F67  65                 	db	101
   318  000F68  0A                 	db	10
   319  000F69  00                 	db	0
   320                           
   321                           ;initializer for _msgwrong
   322  000F6A  20                 	db	32
   323  000F6B  45                 	db	69
   324  000F6C  72                 	db	114
   325  000F6D  72                 	db	114
   326  000F6E  6F                 	db	111
   327  000F6F  72                 	db	114
   328  000F70  20                 	db	32
   329  000F71  30                 	db	48
   330  000F72  3A                 	db	58
   331  000F73  20                 	db	32
   332  000F74  49                 	db	73
   333  000F75  6E                 	db	110
   334  000F76  76                 	db	118
   335  000F77  61                 	db	97
   336  000F78  6C                 	db	108
   337  000F79  69                 	db	105
   338  000F7A  64                 	db	100
   339  000F7B  20                 	db	32
   340  000F7C  43                 	db	67
   341  000F7D  6F                 	db	111
   342  000F7E  6D                 	db	109
   343  000F7F  6D                 	db	109
   344  000F80  61                 	db	97
   345  000F81  6E                 	db	110
   346  000F82  64                 	db	100
   347  000F83  0A                 	db	10
   348  000F84  00                 	db	0
   349  0000                     _INTCON2bits	set	4081
   350  0000                     _INTCONbits	set	4082
   351  0000                     _RCONbits	set	4048
   352  0000                     _RCREG	set	4014
   353  0000                     _TXREG	set	4013
   354  0000                     _PIR1bits	set	3998
   355  0000                     _TXSTAbits	set	4012
   356  0000                     _SPBRG	set	4015
   357  0000                     _RCSTAbits	set	4011
   358  0000                     _OSCCON	set	4051
   359  0000                     _INTCON3bits	set	4080
   360  0000                     _PORTCbits	set	3970
   361  0000                     _T2CONbits	set	4042
   362  0000                     _TMR2	set	4044
   363  0000                     _CCP2CON	set	4026
   364  0000                     _CCP1CON	set	4029
   365  0000                     _T2CON	set	4042
   366  0000                     _TRISCbits	set	3988
   367  0000                     _CCPR2L	set	4027
   368  0000                     _CCPR1L	set	4030
   369  0000                     _PR2	set	4043
   370  0000                     _TRISB	set	3987
   371  0000                     _LATB	set	3978
   372  0000                     _PORTB	set	3969
   373  0000                     _LATC	set	3979
   374  0000                     _PORTC	set	3970
   375  0000                     _TRISD	set	3989
   376  0000                     _LATD	set	3980
   377  0000                     _PORTD	set	3971
   378  0000                     _CMCON	set	4020
   379  0000                     _PORTBbits	set	3969
   380  0000                     _PORTDbits	set	3971
   381  0000                     _RCIF	set	31989
   382                           
   383                           ; #config settings
   384  0000                     
   385                           	psect	cinit
   386  000C3C                     __pcinit:
   387                           	opt callstack 0
   388  000C3C                     start_initialization:
   389                           	opt callstack 0
   390  000C3C                     __initialization:
   391                           	opt callstack 0
   392                           
   393                           ; Initialize objects allocated to BANK1 (57 bytes)
   394                           ; load TBLPTR registers with __pidataBANK1
   395  000C3C  0E4C               	movlw	low __pidataBANK1
   396  000C3E  6EF6               	movwf	tblptrl,c
   397  000C40  0E0F               	movlw	high __pidataBANK1
   398  000C42  6EF7               	movwf	tblptrh,c
   399  000C44  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   400  000C46  6EF8               	movwf	tblptru,c
   401  000C48  EE01  F000         	lfsr	0,__pdataBANK1
   402  000C4C  EE10 F039          	lfsr	1,57
   403  000C50                     copy_data0:
   404  000C50  0009               	tblrd		*+
   405  000C52  CFF5 FFEE          	movff	tablat,postinc0
   406  000C56  50E5               	movf	postdec1,w,c
   407  000C58  50E1               	movf	fsr1l,w,c
   408  000C5A  E1FA               	bnz	copy_data0
   409                           
   410                           ; Initialize objects allocated to BANK0 (154 bytes)
   411                           ; load TBLPTR registers with __pidataBANK0
   412  000C5C  0EA0               	movlw	low __pidataBANK0
   413  000C5E  6EF6               	movwf	tblptrl,c
   414  000C60  0E0A               	movlw	high __pidataBANK0
   415  000C62  6EF7               	movwf	tblptrh,c
   416  000C64  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   417  000C66  6EF8               	movwf	tblptru,c
   418  000C68  EE00  F060         	lfsr	0,__pdataBANK0
   419  000C6C  EE10 F09A          	lfsr	1,154
   420  000C70                     copy_data1:
   421  000C70  0009               	tblrd		*+
   422  000C72  CFF5 FFEE          	movff	tablat,postinc0
   423  000C76  50E5               	movf	postdec1,w,c
   424  000C78  50E1               	movf	fsr1l,w,c
   425  000C7A  E1FA               	bnz	copy_data1
   426                           
   427                           ; Initialize objects allocated to COMRAM (23 bytes)
   428                           ; load TBLPTR registers with __pidataCOMRAM
   429  000C7C  0E82               	movlw	low __pidataCOMRAM
   430  000C7E  6EF6               	movwf	tblptrl,c
   431  000C80  0E10               	movlw	high __pidataCOMRAM
   432  000C82  6EF7               	movwf	tblptrh,c
   433  000C84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   434  000C86  6EF8               	movwf	tblptru,c
   435  000C88  EE00  F02D         	lfsr	0,__pdataCOMRAM
   436  000C8C  EE10 F017          	lfsr	1,23
   437  000C90                     copy_data2:
   438  000C90  0009               	tblrd		*+
   439  000C92  CFF5 FFEE          	movff	tablat,postinc0
   440  000C96  50E5               	movf	postdec1,w,c
   441  000C98  50E1               	movf	fsr1l,w,c
   442  000C9A  E1FA               	bnz	copy_data2
   443                           
   444                           ; Clear objects allocated to COMRAM (15 bytes)
   445  000C9C  EE00  F044         	lfsr	0,__pbssCOMRAM
   446  000CA0  0E0F               	movlw	15
   447  000CA2                     clear_0:
   448  000CA2  6AEE               	clrf	postinc0,c
   449  000CA4  06E8               	decf	wreg,f,c
   450  000CA6  E1FD               	bnz	clear_0
   451  000CA8                     end_of_initialization:
   452                           	opt callstack 0
   453  000CA8                     __end_of__initialization:
   454                           	opt callstack 0
   455  000CA8  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   456  000CAA  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   457  000CAC  0100               	movlb	0
   458  000CAE  EFED  F003         	goto	_main	;jump to C main() function
   459                           
   460                           	psect	bssCOMRAM
   461  000044                     __pbssCOMRAM:
   462                           	opt callstack 0
   463  000044                     _cnt:
   464                           	opt callstack 0
   465  000044                     	ds	2
   466  000046                     _emergencySwitch:
   467                           	opt callstack 0
   468  000046                     	ds	2
   469  000048                     _keepgoing:
   470                           	opt callstack 0
   471  000048                     	ds	2
   472  00004A                     _y:
   473                           	opt callstack 0
   474  00004A                     	ds	2
   475  00004C                     _x:
   476                           	opt callstack 0
   477  00004C                     	ds	2
   478  00004E                     _nvalory:
   479                           	opt callstack 0
   480  00004E                     	ds	2
   481  000050                     _nvalorx:
   482                           	opt callstack 0
   483  000050                     	ds	2
   484  000052                     _ons:
   485                           	opt callstack 0
   486  000052                     	ds	1
   487                           
   488                           	psect	dataCOMRAM
   489  00002D                     __pdataCOMRAM:
   490                           	opt callstack 0
   491  00002D                     _msleft:
   492                           	opt callstack 0
   493  00002D                     	ds	12
   494  000039                     _msup:
   495                           	opt callstack 0
   496  000039                     	ds	11
   497                           
   498                           	psect	dataBANK0
   499  000060                     __pdataBANK0:
   500                           	opt callstack 0
   501  000060                     _emergency:
   502                           	opt callstack 0
   503  000060                     	ds	26
   504  00007A                     _check:
   505                           	opt callstack 0
   506  00007A                     	ds	23
   507  000091                     _msgcomp:
   508                           	opt callstack 0
   509  000091                     	ds	23
   510  0000A8                     _msgeje:
   511                           	opt callstack 0
   512  0000A8                     	ds	22
   513  0000BE                     _yl:
   514                           	opt callstack 0
   515  0000BE                     	ds	17
   516  0000CF                     _xl:
   517                           	opt callstack 0
   518  0000CF                     	ds	17
   519  0000E0                     _msright:
   520                           	opt callstack 0
   521  0000E0                     	ds	13
   522  0000ED                     _msdown:
   523                           	opt callstack 0
   524  0000ED                     	ds	13
   525                           
   526                           	psect	dataBANK1
   527  000100                     __pdataBANK1:
   528                           	opt callstack 0
   529  000100                     _CE:
   530                           	opt callstack 0
   531  000100                     	ds	30
   532  00011E                     _msgwrong:
   533                           	opt callstack 0
   534  00011E                     	ds	27
   535                           
   536                           	psect	cstackCOMRAM
   537  000001                     __pcstackCOMRAM:
   538                           	opt callstack 0
   539  000001                     ?i2_strlen:
   540                           	opt callstack 0
   541  000001                     i2USART_Tx@data:
   542                           	opt callstack 0
   543  000001                     i2strlen@s:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x0
   547  000001                     	ds	2
   548  000003                     i2strlen@a:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x2
   552  000003                     	ds	2
   553  000005                     emergencyButton@i:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x4
   557  000005                     	ds	2
   558  000007                     ??_INT_isr:
   559                           
   560                           ; 1 bytes @ 0x6
   561  000007                     	ds	3
   562  00000A                     INT_isr@i:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x9
   566  00000A                     	ds	2
   567  00000C                     ?_strlen:
   568                           	opt callstack 0
   569  00000C                     ?___wmul:
   570                           	opt callstack 0
   571  00000C                     ?___aldiv:
   572                           	opt callstack 0
   573  00000C                     USART_Tx@data:
   574                           	opt callstack 0
   575  00000C                     ___wmul@multiplier:
   576                           	opt callstack 0
   577  00000C                     strlen@s:
   578                           	opt callstack 0
   579  00000C                     ___aldiv@dividend:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0xB
   583  00000C                     	ds	2
   584  00000E                     ___wmul@multiplicand:
   585                           	opt callstack 0
   586  00000E                     strlen@a:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0xD
   590  00000E                     	ds	2
   591  000010                     invalidCoordinate@i:
   592                           	opt callstack 0
   593  000010                     xLimit@i:
   594                           	opt callstack 0
   595  000010                     yLimit@i:
   596                           	opt callstack 0
   597  000010                     Error@i:
   598                           	opt callstack 0
   599  000010                     Executing@i:
   600                           	opt callstack 0
   601  000010                     Complete@i:
   602                           	opt callstack 0
   603  000010                     ___wmul@product:
   604                           	opt callstack 0
   605  000010                     ___aldiv@divisor:
   606                           	opt callstack 0
   607                           
   608                           ; 4 bytes @ 0xF
   609  000010                     	ds	2
   610  000012                     pulseCounter@pulsoD:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x11
   614  000012                     	ds	2
   615  000014                     ??_pulseCounter:
   616  000014                     ___aldiv@counter:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0x13
   620  000014                     	ds	1
   621  000015                     ___aldiv@sign:
   622                           	opt callstack 0
   623  000015                     coordinateRefreshX@newX:
   624                           	opt callstack 0
   625  000015                     coordinateRefreshY@newY:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x14
   629  000015                     	ds	1
   630  000016                     ___aldiv@quotient:
   631                           	opt callstack 0
   632                           
   633                           ; 4 bytes @ 0x15
   634  000016                     	ds	1
   635  000017                     coordinateRefreshX@i:
   636                           	opt callstack 0
   637  000017                     coordinateRefreshY@i:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x16
   641  000017                     	ds	2
   642  000019                     coordinateRefreshX@j:
   643                           	opt callstack 0
   644  000019                     coordinateRefreshY@j:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x18
   648  000019                     	ds	1
   649  00001A                     USART_Init@BAUD:
   650                           	opt callstack 0
   651                           
   652                           ; 4 bytes @ 0x19
   653  00001A                     	ds	1
   654  00001B                     commands@comando:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0x1A
   658  00001B                     	ds	2
   659  00001D                     ??_commands:
   660                           
   661                           ; 1 bytes @ 0x1C
   662  00001D                     	ds	1
   663  00001E                     _USART_Init$1743:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x1D
   667  00001E                     	ds	4
   668  000022                     main@instruccion:
   669                           	opt callstack 0
   670                           
   671                           ; 8 bytes @ 0x21
   672  000022                     	ds	8
   673  00002A                     main@i:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x29
   677  00002A                     	ds	2
   678  00002C                     main@contador:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0x2B
   682  00002C                     	ds	1
   683                           
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 35 in file "MAINSPARC.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  i               2   41[COMRAM] int 
   694 ;;  contador        1   43[COMRAM] unsigned char 
   695 ;;  instruccion     8   33[COMRAM] unsigned char [8]
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         0       0       0       0       0       0       0       0       0
   706 ;;      Locals:        11       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:        11       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:       11 bytes
   710 ;; Hardware stack levels required when called:    7
   711 ;; This function calls:
   712 ;;		_Complete
   713 ;;		_USART_Init
   714 ;;		_USART_Rx
   715 ;;		_USART_Tx
   716 ;;		_commands
   717 ;;		_gpioInit
   718 ;;		_interruptionsInit
   719 ;;		_pwm_init
   720 ;;		_xLimit
   721 ;;		_yLimit
   722 ;; This function is called by:
   723 ;;		Startup code after reset
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text0
   728  0007DA                     __ptext0:
   729                           	opt callstack 0
   730  0007DA                     _main:
   731                           	opt callstack 24
   732  0007DA                     
   733                           ;MAINSPARC.c: 36:     OSCCON=0x72;
   734  0007DA  0E72               	movlw	114
   735  0007DC  6ED3               	movwf	211,c	;volatile
   736  0007DE                     
   737                           ;MAINSPARC.c: 38:     USART_Init(9600);
   738  0007DE  0E80               	movlw	128
   739  0007E0  6E1A               	movwf	USART_Init@BAUD^0,c
   740  0007E2  0E25               	movlw	37
   741  0007E4  6E1B               	movwf	(USART_Init@BAUD+1)^0,c
   742  0007E6  0E00               	movlw	0
   743  0007E8  6E1C               	movwf	(USART_Init@BAUD+2)^0,c
   744  0007EA  0E00               	movlw	0
   745  0007EC  6E1D               	movwf	(USART_Init@BAUD+3)^0,c
   746  0007EE  EC59  F006         	call	_USART_Init	;wreg free
   747  0007F2                     
   748                           ;MAINSPARC.c: 40:     gpioInit();
   749  0007F2  ECF9  F007         	call	_gpioInit	;wreg free
   750  0007F6                     
   751                           ;MAINSPARC.c: 41:    pwm_init();
   752  0007F6  EC20  F008         	call	_pwm_init	;wreg free
   753  0007FA                     
   754                           ;MAINSPARC.c: 42:    interruptionsInit();
   755  0007FA  EC76  F008         	call	_interruptionsInit	;wreg free
   756  0007FE                     
   757                           ;MAINSPARC.c: 44:    RCSTAbits.CREN=0;;
   758  0007FE  98AB               	bcf	171,4,c	;volatile
   759  000800                     
   760                           ;MAINSPARC.c: 45:     PORTDbits.RD2= 1;
   761  000800  8483               	bsf	131,2,c	;volatile
   762  000802                     
   763                           ;MAINSPARC.c: 46:     PORTDbits.RD3= 1;
   764  000802  8683               	bsf	131,3,c	;volatile
   765  000804                     
   766                           ;MAINSPARC.c: 47:     char instruccion[8];;MAINSPARC.c: 48:     PORTDbits.RD4=1;
   767  000804  8883               	bsf	131,4,c	;volatile
   768  000806                     
   769                           ;MAINSPARC.c: 49:     PORTDbits.RD5=0;
   770  000806  9A83               	bcf	131,5,c	;volatile
   771  000808                     
   772                           ;MAINSPARC.c: 50:     PORTDbits.RD6=0;
   773  000808  9C83               	bcf	131,6,c	;volatile
   774  00080A                     
   775                           ;MAINSPARC.c: 51:     PORTDbits.RD0=0;
   776  00080A  9083               	bcf	131,0,c	;volatile
   777  00080C                     
   778                           ;MAINSPARC.c: 52:     PORTDbits.RD1=1;
   779  00080C  8283               	bsf	131,1,c	;volatile
   780  00080E                     
   781                           ;MAINSPARC.c: 53:     PORTDbits.RD3=0;
   782  00080E  9683               	bcf	131,3,c	;volatile
   783  000810                     
   784                           ;MAINSPARC.c: 54:     PORTDbits.RD2=0;
   785  000810  9483               	bcf	131,2,c	;volatile
   786  000812                     l357:
   787  000812  A081               	btfss	129,0,c	;volatile
   788  000814  EF0E  F004         	goto	u1701
   789  000818  EF10  F004         	goto	u1700
   790  00081C                     u1701:
   791  00081C  EF09  F004         	goto	l357
   792  000820                     u1700:
   793  000820                     
   794                           ;MAINSPARC.c: 56:     PORTDbits.RD3=1;
   795  000820  8683               	bsf	131,3,c	;volatile
   796                           
   797                           ;MAINSPARC.c: 57:     PORTDbits.RD2=1;
   798  000822  8483               	bsf	131,2,c	;volatile
   799  000824                     
   800                           ;MAINSPARC.c: 58:     xLimit();
   801  000824  EC83  F007         	call	_xLimit	;wreg free
   802  000828                     
   803                           ;MAINSPARC.c: 59:     PORTDbits.RD0=1;
   804  000828  8083               	bsf	131,0,c	;volatile
   805  00082A                     
   806                           ;MAINSPARC.c: 60:     PORTDbits.RD1=1;
   807  00082A  8283               	bsf	131,1,c	;volatile
   808  00082C                     
   809                           ;MAINSPARC.c: 61:     PORTDbits.RD3=0;
   810  00082C  9683               	bcf	131,3,c	;volatile
   811  00082E                     
   812                           ;MAINSPARC.c: 62:     PORTDbits.RD2=0;
   813  00082E  9483               	bcf	131,2,c	;volatile
   814  000830                     l360:
   815  000830  A281               	btfss	129,1,c	;volatile
   816  000832  EF1D  F004         	goto	u1711
   817  000836  EF1F  F004         	goto	u1710
   818  00083A                     u1711:
   819  00083A  EF18  F004         	goto	l360
   820  00083E                     u1710:
   821  00083E                     
   822                           ;MAINSPARC.c: 64:     PORTDbits.RD3=1;
   823  00083E  8683               	bsf	131,3,c	;volatile
   824                           
   825                           ;MAINSPARC.c: 65:     PORTDbits.RD2=1;
   826  000840  8483               	bsf	131,2,c	;volatile
   827  000842                     
   828                           ;MAINSPARC.c: 66:     yLimit();
   829  000842  EC60  F007         	call	_yLimit	;wreg free
   830  000846                     
   831                           ;MAINSPARC.c: 67:     x=0;
   832  000846  0E00               	movlw	0
   833  000848  6E4D               	movwf	(_x+1)^0,c
   834  00084A  0E00               	movlw	0
   835  00084C  6E4C               	movwf	_x^0,c
   836  00084E                     
   837                           ;MAINSPARC.c: 68:     y=0;
   838  00084E  0E00               	movlw	0
   839  000850  6E4B               	movwf	(_y+1)^0,c
   840  000852  0E00               	movlw	0
   841  000854  6E4A               	movwf	_y^0,c
   842                           
   843                           ;MAINSPARC.c: 69:     Complete();
   844  000856  EC3A  F007         	call	_Complete	;wreg free
   845  00085A                     l2234:
   846                           
   847                           ;MAINSPARC.c: 75:          RCSTAbits.CREN=1;;
   848  00085A  88AB               	bsf	171,4,c	;volatile
   849  00085C                     
   850                           ;MAINSPARC.c: 76:         for(uint8_t contador=0; contador<8; contador++){
   851  00085C  0E00               	movlw	0
   852  00085E  6E2C               	movwf	main@contador^0,c
   853  000860                     l2242:
   854                           
   855                           ;MAINSPARC.c: 77:             instruccion[contador]=USART_Rx();
   856  000860  0E22               	movlw	low main@instruccion
   857  000862  242C               	addwf	main@contador^0,w,c
   858  000864  6ED9               	movwf	fsr2l,c
   859  000866  6ADA               	clrf	fsr2h,c
   860  000868  0E00               	movlw	high main@instruccion
   861  00086A  22DA               	addwfc	fsr2h,f,c
   862  00086C  EC6D  F008         	call	_USART_Rx	;wreg free
   863  000870  6EDF               	movwf	indf2,c
   864  000872                     
   865                           ;MAINSPARC.c: 78:         }
   866  000872  2A2C               	incf	main@contador^0,f,c
   867  000874  0E07               	movlw	7
   868  000876  642C               	cpfsgt	main@contador^0,c
   869  000878  EF40  F004         	goto	u1721
   870  00087C  EF42  F004         	goto	u1720
   871  000880                     u1721:
   872  000880  EF30  F004         	goto	l2242
   873  000884                     u1720:
   874  000884                     
   875                           ;MAINSPARC.c: 81:        for(int i=0; i < 8; i++){
   876  000884  0E00               	movlw	0
   877  000886  6E2B               	movwf	(main@i+1)^0,c
   878  000888  0E00               	movlw	0
   879  00088A  6E2A               	movwf	main@i^0,c
   880  00088C                     l2254:
   881                           
   882                           ;MAINSPARC.c: 82:     USART_Tx(instruccion[i]);
   883  00088C  0E22               	movlw	low main@instruccion
   884  00088E  242A               	addwf	main@i^0,w,c
   885  000890  6ED9               	movwf	fsr2l,c
   886  000892  0E00               	movlw	high main@instruccion
   887  000894  202B               	addwfc	(main@i+1)^0,w,c
   888  000896  6EDA               	movwf	fsr2h,c
   889  000898  50DF               	movf	indf2,w,c
   890  00089A  EC4D  F008         	call	_USART_Tx
   891  00089E                     
   892                           ;MAINSPARC.c: 83:     }
   893  00089E  4A2A               	infsnz	main@i^0,f,c
   894  0008A0  2A2B               	incf	(main@i+1)^0,f,c
   895  0008A2  BE2B               	btfsc	(main@i+1)^0,7,c
   896  0008A4  EF5D  F004         	goto	u1731
   897  0008A8  502B               	movf	(main@i+1)^0,w,c
   898  0008AA  E109               	bnz	u1730
   899  0008AC  0E08               	movlw	8
   900  0008AE  5C2A               	subwf	main@i^0,w,c
   901  0008B0  A0D8               	btfss	status,0,c
   902  0008B2  EF5D  F004         	goto	u1731
   903  0008B6  EF5F  F004         	goto	u1730
   904  0008BA                     u1731:
   905  0008BA  EF46  F004         	goto	l2254
   906  0008BE                     u1730:
   907  0008BE                     
   908                           ;MAINSPARC.c: 84:           RCSTAbits.CREN=0;;
   909  0008BE  98AB               	bcf	171,4,c	;volatile
   910  0008C0                     
   911                           ;MAINSPARC.c: 85:         commands(instruccion);
   912  0008C0  0E22               	movlw	low main@instruccion
   913  0008C2  6E1B               	movwf	commands@comando^0,c
   914  0008C4  0E00               	movlw	high main@instruccion
   915  0008C6  6E1C               	movwf	(commands@comando+1)^0,c
   916  0008C8  EC09  F000         	call	_commands	;wreg free
   917  0008CC  EF2D  F004         	goto	l2234
   918  0008D0  EF07  F000         	goto	start
   919  0008D4                     __end_of_main:
   920                           	opt callstack 0
   921                           
   922 ;; *************** function _pwm_init *****************
   923 ;; Defined at:
   924 ;;		line 23 in file "pwm.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         0       0       0       0       0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    3
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text1
   953  001040                     __ptext1:
   954                           	opt callstack 0
   955  001040                     _pwm_init:
   956                           	opt callstack 27
   957  001040                     
   958                           ;pwm.c: 25:     PR2 = 249;
   959  001040  0EF9               	movlw	249
   960  001042  6ECB               	movwf	203,c	;volatile
   961                           
   962                           ;pwm.c: 26:     CCPR1L= (500>>2 & (0x3FF));
   963  001044  0E7D               	movlw	125
   964  001046  6EBE               	movwf	190,c	;volatile
   965                           
   966                           ;pwm.c: 27:     CCPR2L= (500>>2 & (0x3FF));
   967  001048  0E7D               	movlw	125
   968  00104A  6EBB               	movwf	187,c	;volatile
   969  00104C                     
   970                           ;pwm.c: 28:     TRISCbits.RC1=0;
   971  00104C  9294               	bcf	148,1,c	;volatile
   972  00104E                     
   973                           ;pwm.c: 29:     TRISCbits.RC2=0;
   974  00104E  9494               	bcf	148,2,c	;volatile
   975                           
   976                           ;pwm.c: 30:     T2CON = 0x03;
   977  001050  0E03               	movlw	3
   978  001052  6ECA               	movwf	202,c	;volatile
   979                           
   980                           ;pwm.c: 31:     CCP1CON = 0x0C;
   981  001054  0E0C               	movlw	12
   982  001056  6EBD               	movwf	189,c	;volatile
   983                           
   984                           ;pwm.c: 32:     CCP2CON=0x0C;
   985  001058  0E0C               	movlw	12
   986  00105A  6EBA               	movwf	186,c	;volatile
   987                           
   988                           ;pwm.c: 33:     TMR2=0;
   989  00105C  0E00               	movlw	0
   990  00105E  6ECC               	movwf	204,c	;volatile
   991  001060                     
   992                           ;pwm.c: 34:     T2CONbits.TMR2ON =1;
   993  001060  84CA               	bsf	202,2,c	;volatile
   994  001062  0012               	return		;funcret
   995  001064                     __end_of_pwm_init:
   996                           	opt callstack 0
   997                           
   998 ;; *************** function _interruptionsInit *****************
   999 ;; Defined at:
  1000 ;;		line 10 in file "Interruptions.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		None
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    3
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text2
  1029  0010EC                     __ptext2:
  1030                           	opt callstack 0
  1031  0010EC                     _interruptionsInit:
  1032                           	opt callstack 27
  1033  0010EC                     
  1034                           ;Interruptions.c: 11:     RCONbits.IPEN=0;
  1035  0010EC  9ED0               	bcf	208,7,c	;volatile
  1036                           
  1037                           ;Interruptions.c: 12:     INTCONbits.PEIE=1;
  1038  0010EE  8CF2               	bsf	242,6,c	;volatile
  1039                           
  1040                           ;Interruptions.c: 13:     INTCONbits.GIE=1;
  1041  0010F0  8EF2               	bsf	242,7,c	;volatile
  1042                           
  1043                           ;Interruptions.c: 14:     INTCON3bits.INT2F=0;
  1044  0010F2  92F0               	bcf	240,1,c	;volatile
  1045                           
  1046                           ;Interruptions.c: 16:     INTCON2bits.INTEDG2=1;
  1047  0010F4  88F1               	bsf	241,4,c	;volatile
  1048                           
  1049                           ;Interruptions.c: 17:     INTCON3bits.INT2E=1;
  1050  0010F6  88F0               	bsf	240,4,c	;volatile
  1051                           
  1052                           ;Interruptions.c: 21:     INTCON3bits.INT2IF=0;
  1053  0010F8  92F0               	bcf	240,1,c	;volatile
  1054  0010FA  0012               	return		;funcret
  1055  0010FC                     __end_of_interruptionsInit:
  1056                           	opt callstack 0
  1057                           
  1058 ;; *************** function _gpioInit *****************
  1059 ;; Defined at:
  1060 ;;		line 2 in file "GPIO.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    3
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text3
  1089  000FF2                     __ptext3:
  1090                           	opt callstack 0
  1091  000FF2                     _gpioInit:
  1092                           	opt callstack 27
  1093  000FF2                     
  1094                           ;GPIO.c: 3:     CMCON=0x07;
  1095  000FF2  0E07               	movlw	7
  1096  000FF4  6EB4               	movwf	180,c	;volatile
  1097                           
  1098                           ;GPIO.c: 4:     PORTD=0x00;
  1099  000FF6  0E00               	movlw	0
  1100  000FF8  6E83               	movwf	131,c	;volatile
  1101                           
  1102                           ;GPIO.c: 5:     LATD=0x00;
  1103  000FFA  0E00               	movlw	0
  1104  000FFC  6E8C               	movwf	140,c	;volatile
  1105                           
  1106                           ;GPIO.c: 6:     TRISD=0x00;
  1107  000FFE  0E00               	movlw	0
  1108  001000  6E95               	movwf	149,c	;volatile
  1109                           
  1110                           ;GPIO.c: 7:     PORTC=0x00;
  1111  001002  0E00               	movlw	0
  1112  001004  6E82               	movwf	130,c	;volatile
  1113                           
  1114                           ;GPIO.c: 8:     LATC=0x00;
  1115  001006  0E00               	movlw	0
  1116  001008  6E8B               	movwf	139,c	;volatile
  1117                           
  1118                           ;GPIO.c: 9:     PORTB=0x00;
  1119  00100A  0E00               	movlw	0
  1120  00100C  6E81               	movwf	129,c	;volatile
  1121                           
  1122                           ;GPIO.c: 10:     LATB=0x00;
  1123  00100E  0E00               	movlw	0
  1124  001010  6E8A               	movwf	138,c	;volatile
  1125  001012                     
  1126                           ;GPIO.c: 11:     TRISB=0xFF;
  1127  001012  6893               	setf	147,c	;volatile
  1128  001014                     
  1129                           ;GPIO.c: 12:     PORTDbits.RD3=1;
  1130  001014  8683               	bsf	131,3,c	;volatile
  1131  001016                     
  1132                           ;GPIO.c: 13:     PORTDbits.RD2=1;
  1133  001016  8483               	bsf	131,2,c	;volatile
  1134  001018  0012               	return		;funcret
  1135  00101A                     __end_of_gpioInit:
  1136                           	opt callstack 0
  1137                           
  1138 ;; *************** function _commands *****************
  1139 ;; Defined at:
  1140 ;;		line 116 in file "Comandos.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  comando         2   26[COMRAM] PTR unsigned char 
  1143 ;;		 -> main@instruccion(8), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  2   26[COMRAM] int 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1155 ;;      Params:         2       0       0       0       0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1157 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1158 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1159 ;;Total ram usage:        7 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    6
  1162 ;; This function calls:
  1163 ;;		_Complete
  1164 ;;		_Error
  1165 ;;		_Executing
  1166 ;;		_coordinateRefreshX
  1167 ;;		_coordinateRefreshY
  1168 ;;		_invalidCoordinate
  1169 ;;		_xLimit
  1170 ;;		_yLimit
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text4
  1177  000012                     __ptext4:
  1178                           	opt callstack 0
  1179  000012                     _commands:
  1180                           	opt callstack 24
  1181  000012                     
  1182                           ;Comandos.c: 117:     if(comando[0]=='C'){
  1183  000012  C01B  FFD9         	movff	commands@comando,fsr2l
  1184  000016  C01C  FFDA         	movff	commands@comando+1,fsr2h
  1185  00001A  0E43               	movlw	67
  1186  00001C  18DE               	xorwf	postinc2,w,c
  1187  00001E  A4D8               	btfss	status,2,c
  1188  000020  EF14  F000         	goto	u1171
  1189  000024  EF16  F000         	goto	u1170
  1190  000028                     u1171:
  1191  000028  EF3F  F001         	goto	l1974
  1192  00002C                     u1170:
  1193  00002C                     
  1194                           ;Comandos.c: 118:         if (comando[1]>='0' && comando[1]<='2'){
  1195  00002C  EE20 F001          	lfsr	2,1
  1196  000030  501B               	movf	commands@comando^0,w,c
  1197  000032  26D9               	addwf	fsr2l,f,c
  1198  000034  501C               	movf	(commands@comando+1)^0,w,c
  1199  000036  22DA               	addwfc	fsr2h,f,c
  1200  000038  0E2F               	movlw	47
  1201  00003A  64DF               	cpfsgt	indf2,c
  1202  00003C  EF22  F000         	goto	u1181
  1203  000040  EF24  F000         	goto	u1180
  1204  000044                     u1181:
  1205  000044  EF3B  F001         	goto	l1960
  1206  000048                     u1180:
  1207  000048  EE20 F001          	lfsr	2,1
  1208  00004C  501B               	movf	commands@comando^0,w,c
  1209  00004E  26D9               	addwf	fsr2l,f,c
  1210  000050  501C               	movf	(commands@comando+1)^0,w,c
  1211  000052  22DA               	addwfc	fsr2h,f,c
  1212  000054  0E33               	movlw	51
  1213  000056  60DF               	cpfslt	indf2,c
  1214  000058  EF30  F000         	goto	u1191
  1215  00005C  EF32  F000         	goto	u1190
  1216  000060                     u1191:
  1217  000060  EF3B  F001         	goto	l1960
  1218  000064                     u1190:
  1219  000064                     
  1220                           ;Comandos.c: 119:             if (comando[2]>='0' && comando[2]<='9'){
  1221  000064  EE20 F002          	lfsr	2,2
  1222  000068  501B               	movf	commands@comando^0,w,c
  1223  00006A  26D9               	addwf	fsr2l,f,c
  1224  00006C  501C               	movf	(commands@comando+1)^0,w,c
  1225  00006E  22DA               	addwfc	fsr2h,f,c
  1226  000070  0E2F               	movlw	47
  1227  000072  64DF               	cpfsgt	indf2,c
  1228  000074  EF3E  F000         	goto	u1201
  1229  000078  EF40  F000         	goto	u1200
  1230  00007C                     u1201:
  1231  00007C  EF3B  F001         	goto	l1960
  1232  000080                     u1200:
  1233  000080  EE20 F002          	lfsr	2,2
  1234  000084  501B               	movf	commands@comando^0,w,c
  1235  000086  26D9               	addwf	fsr2l,f,c
  1236  000088  501C               	movf	(commands@comando+1)^0,w,c
  1237  00008A  22DA               	addwfc	fsr2h,f,c
  1238  00008C  0E3A               	movlw	58
  1239  00008E  60DF               	cpfslt	indf2,c
  1240  000090  EF4C  F000         	goto	u1211
  1241  000094  EF4E  F000         	goto	u1210
  1242  000098                     u1211:
  1243  000098  EF3B  F001         	goto	l1960
  1244  00009C                     u1210:
  1245  00009C                     
  1246                           ;Comandos.c: 120:                 if (comando[3]>='0' && comando[3]<='9'){
  1247  00009C  EE20 F003          	lfsr	2,3
  1248  0000A0  501B               	movf	commands@comando^0,w,c
  1249  0000A2  26D9               	addwf	fsr2l,f,c
  1250  0000A4  501C               	movf	(commands@comando+1)^0,w,c
  1251  0000A6  22DA               	addwfc	fsr2h,f,c
  1252  0000A8  0E2F               	movlw	47
  1253  0000AA  64DF               	cpfsgt	indf2,c
  1254  0000AC  EF5A  F000         	goto	u1221
  1255  0000B0  EF5C  F000         	goto	u1220
  1256  0000B4                     u1221:
  1257  0000B4  EF3B  F001         	goto	l1960
  1258  0000B8                     u1220:
  1259  0000B8  EE20 F003          	lfsr	2,3
  1260  0000BC  501B               	movf	commands@comando^0,w,c
  1261  0000BE  26D9               	addwf	fsr2l,f,c
  1262  0000C0  501C               	movf	(commands@comando+1)^0,w,c
  1263  0000C2  22DA               	addwfc	fsr2h,f,c
  1264  0000C4  0E3A               	movlw	58
  1265  0000C6  60DF               	cpfslt	indf2,c
  1266  0000C8  EF68  F000         	goto	u1231
  1267  0000CC  EF6A  F000         	goto	u1230
  1268  0000D0                     u1231:
  1269  0000D0  EF3B  F001         	goto	l1960
  1270  0000D4                     u1230:
  1271  0000D4                     
  1272                           ;Comandos.c: 121:                     if (comando[4]==','){
  1273  0000D4  EE20 F004          	lfsr	2,4
  1274  0000D8  501B               	movf	commands@comando^0,w,c
  1275  0000DA  26D9               	addwf	fsr2l,f,c
  1276  0000DC  501C               	movf	(commands@comando+1)^0,w,c
  1277  0000DE  22DA               	addwfc	fsr2h,f,c
  1278  0000E0  0E2C               	movlw	44
  1279  0000E2  18DE               	xorwf	postinc2,w,c
  1280  0000E4  A4D8               	btfss	status,2,c
  1281  0000E6  EF77  F000         	goto	u1241
  1282  0000EA  EF79  F000         	goto	u1240
  1283  0000EE                     u1241:
  1284  0000EE  EF3B  F001         	goto	l1960
  1285  0000F2                     u1240:
  1286  0000F2                     
  1287                           ;Comandos.c: 122:                         if (comando[5]>='0' && comando[5]<='2'){
  1288  0000F2  EE20 F005          	lfsr	2,5
  1289  0000F6  501B               	movf	commands@comando^0,w,c
  1290  0000F8  26D9               	addwf	fsr2l,f,c
  1291  0000FA  501C               	movf	(commands@comando+1)^0,w,c
  1292  0000FC  22DA               	addwfc	fsr2h,f,c
  1293  0000FE  0E2F               	movlw	47
  1294  000100  64DF               	cpfsgt	indf2,c
  1295  000102  EF85  F000         	goto	u1251
  1296  000106  EF87  F000         	goto	u1250
  1297  00010A                     u1251:
  1298  00010A  EF3B  F001         	goto	l1960
  1299  00010E                     u1250:
  1300  00010E  EE20 F005          	lfsr	2,5
  1301  000112  501B               	movf	commands@comando^0,w,c
  1302  000114  26D9               	addwf	fsr2l,f,c
  1303  000116  501C               	movf	(commands@comando+1)^0,w,c
  1304  000118  22DA               	addwfc	fsr2h,f,c
  1305  00011A  0E33               	movlw	51
  1306  00011C  60DF               	cpfslt	indf2,c
  1307  00011E  EF93  F000         	goto	u1261
  1308  000122  EF95  F000         	goto	u1260
  1309  000126                     u1261:
  1310  000126  EF3B  F001         	goto	l1960
  1311  00012A                     u1260:
  1312  00012A                     
  1313                           ;Comandos.c: 123:                             if (comando[6]>='0' && comando[6]<='9'){
  1314  00012A  EE20 F006          	lfsr	2,6
  1315  00012E  501B               	movf	commands@comando^0,w,c
  1316  000130  26D9               	addwf	fsr2l,f,c
  1317  000132  501C               	movf	(commands@comando+1)^0,w,c
  1318  000134  22DA               	addwfc	fsr2h,f,c
  1319  000136  0E2F               	movlw	47
  1320  000138  64DF               	cpfsgt	indf2,c
  1321  00013A  EFA1  F000         	goto	u1271
  1322  00013E  EFA3  F000         	goto	u1270
  1323  000142                     u1271:
  1324  000142  EF3B  F001         	goto	l1960
  1325  000146                     u1270:
  1326  000146  EE20 F006          	lfsr	2,6
  1327  00014A  501B               	movf	commands@comando^0,w,c
  1328  00014C  26D9               	addwf	fsr2l,f,c
  1329  00014E  501C               	movf	(commands@comando+1)^0,w,c
  1330  000150  22DA               	addwfc	fsr2h,f,c
  1331  000152  0E3A               	movlw	58
  1332  000154  60DF               	cpfslt	indf2,c
  1333  000156  EFAF  F000         	goto	u1281
  1334  00015A  EFB1  F000         	goto	u1280
  1335  00015E                     u1281:
  1336  00015E  EF3B  F001         	goto	l1960
  1337  000162                     u1280:
  1338  000162                     
  1339                           ;Comandos.c: 124:                                 if (comando[7]>='0' && comando[7]<='9'
      +                          ){
  1340  000162  EE20 F007          	lfsr	2,7
  1341  000166  501B               	movf	commands@comando^0,w,c
  1342  000168  26D9               	addwf	fsr2l,f,c
  1343  00016A  501C               	movf	(commands@comando+1)^0,w,c
  1344  00016C  22DA               	addwfc	fsr2h,f,c
  1345  00016E  0E2F               	movlw	47
  1346  000170  64DF               	cpfsgt	indf2,c
  1347  000172  EFBD  F000         	goto	u1291
  1348  000176  EFBF  F000         	goto	u1290
  1349  00017A                     u1291:
  1350  00017A  EF3B  F001         	goto	l1960
  1351  00017E                     u1290:
  1352  00017E  EE20 F007          	lfsr	2,7
  1353  000182  501B               	movf	commands@comando^0,w,c
  1354  000184  26D9               	addwf	fsr2l,f,c
  1355  000186  501C               	movf	(commands@comando+1)^0,w,c
  1356  000188  22DA               	addwfc	fsr2h,f,c
  1357  00018A  0E3A               	movlw	58
  1358  00018C  60DF               	cpfslt	indf2,c
  1359  00018E  EFCB  F000         	goto	u1301
  1360  000192  EFCD  F000         	goto	u1300
  1361  000196                     u1301:
  1362  000196  EF3B  F001         	goto	l1960
  1363  00019A                     u1300:
  1364  00019A                     
  1365                           ;Comandos.c: 125:                                     Executing();
  1366  00019A  ECEE  F006         	call	_Executing	;wreg free
  1367  00019E                     
  1368                           ;Comandos.c: 126:                                     nvalorx= ((comando[1]-48)*100)+((c
      +                          omando[2]-48)*10)+(comando[3]-48);
  1369  00019E  EE20 F001          	lfsr	2,1
  1370  0001A2  501B               	movf	commands@comando^0,w,c
  1371  0001A4  26D9               	addwf	fsr2l,f,c
  1372  0001A6  501C               	movf	(commands@comando+1)^0,w,c
  1373  0001A8  22DA               	addwfc	fsr2h,f,c
  1374  0001AA  50DF               	movf	indf2,w,c
  1375  0001AC  6E1D               	movwf	??_commands^0,c
  1376  0001AE  501D               	movf	??_commands^0,w,c
  1377  0001B0  0D64               	mullw	100
  1378  0001B2  CFF3 F01E          	movff	prodl,??_commands+1
  1379  0001B6  CFF4 F01F          	movff	prodh,??_commands+2
  1380  0001BA  EE20 F002          	lfsr	2,2
  1381  0001BE  501B               	movf	commands@comando^0,w,c
  1382  0001C0  26D9               	addwf	fsr2l,f,c
  1383  0001C2  501C               	movf	(commands@comando+1)^0,w,c
  1384  0001C4  22DA               	addwfc	fsr2h,f,c
  1385  0001C6  50DF               	movf	indf2,w,c
  1386  0001C8  6E20               	movwf	(??_commands+3)^0,c
  1387  0001CA  5020               	movf	(??_commands+3)^0,w,c
  1388  0001CC  0D0A               	mullw	10
  1389  0001CE  50F3               	movf	243,w,c
  1390  0001D0  261E               	addwf	(??_commands+1)^0,f,c
  1391  0001D2  50F4               	movf	244,w,c
  1392  0001D4  221F               	addwfc	(??_commands+2)^0,f,c
  1393  0001D6  EE20 F003          	lfsr	2,3
  1394  0001DA  501B               	movf	commands@comando^0,w,c
  1395  0001DC  26D9               	addwf	fsr2l,f,c
  1396  0001DE  501C               	movf	(commands@comando+1)^0,w,c
  1397  0001E0  22DA               	addwfc	fsr2h,f,c
  1398  0001E2  50DF               	movf	indf2,w,c
  1399  0001E4  6E21               	movwf	(??_commands+4)^0,c
  1400  0001E6  5021               	movf	(??_commands+4)^0,w,c
  1401  0001E8  261E               	addwf	(??_commands+1)^0,f,c
  1402  0001EA  0E00               	movlw	0
  1403  0001EC  221F               	addwfc	(??_commands+2)^0,f,c
  1404  0001EE  0E30               	movlw	48
  1405  0001F0  241E               	addwf	(??_commands+1)^0,w,c
  1406  0001F2  6E50               	movwf	_nvalorx^0,c
  1407  0001F4  0EEB               	movlw	235
  1408  0001F6  201F               	addwfc	(??_commands+2)^0,w,c
  1409  0001F8  6E51               	movwf	(_nvalorx+1)^0,c
  1410  0001FA                     
  1411                           ;Comandos.c: 127:                                     nvalory= ((comando[5]-48)*100)+((c
      +                          omando[6]-48)*10)+(comando[7]-48);
  1412  0001FA  EE20 F005          	lfsr	2,5
  1413  0001FE  501B               	movf	commands@comando^0,w,c
  1414  000200  26D9               	addwf	fsr2l,f,c
  1415  000202  501C               	movf	(commands@comando+1)^0,w,c
  1416  000204  22DA               	addwfc	fsr2h,f,c
  1417  000206  50DF               	movf	indf2,w,c
  1418  000208  6E1D               	movwf	??_commands^0,c
  1419  00020A  501D               	movf	??_commands^0,w,c
  1420  00020C  0D64               	mullw	100
  1421  00020E  CFF3 F01E          	movff	prodl,??_commands+1
  1422  000212  CFF4 F01F          	movff	prodh,??_commands+2
  1423  000216  EE20 F006          	lfsr	2,6
  1424  00021A  501B               	movf	commands@comando^0,w,c
  1425  00021C  26D9               	addwf	fsr2l,f,c
  1426  00021E  501C               	movf	(commands@comando+1)^0,w,c
  1427  000220  22DA               	addwfc	fsr2h,f,c
  1428  000222  50DF               	movf	indf2,w,c
  1429  000224  6E20               	movwf	(??_commands+3)^0,c
  1430  000226  5020               	movf	(??_commands+3)^0,w,c
  1431  000228  0D0A               	mullw	10
  1432  00022A  50F3               	movf	243,w,c
  1433  00022C  261E               	addwf	(??_commands+1)^0,f,c
  1434  00022E  50F4               	movf	244,w,c
  1435  000230  221F               	addwfc	(??_commands+2)^0,f,c
  1436  000232  EE20 F007          	lfsr	2,7
  1437  000236  501B               	movf	commands@comando^0,w,c
  1438  000238  26D9               	addwf	fsr2l,f,c
  1439  00023A  501C               	movf	(commands@comando+1)^0,w,c
  1440  00023C  22DA               	addwfc	fsr2h,f,c
  1441  00023E  50DF               	movf	indf2,w,c
  1442  000240  6E21               	movwf	(??_commands+4)^0,c
  1443  000242  5021               	movf	(??_commands+4)^0,w,c
  1444  000244  261E               	addwf	(??_commands+1)^0,f,c
  1445  000246  0E00               	movlw	0
  1446  000248  221F               	addwfc	(??_commands+2)^0,f,c
  1447  00024A  0E30               	movlw	48
  1448  00024C  241E               	addwf	(??_commands+1)^0,w,c
  1449  00024E  6E4E               	movwf	_nvalory^0,c
  1450  000250  0EEB               	movlw	235
  1451  000252  201F               	addwfc	(??_commands+2)^0,w,c
  1452  000254  6E4F               	movwf	(_nvalory+1)^0,c
  1453  000256                     
  1454                           ;Comandos.c: 129:                                     coordinateRefreshX(nvalorx);
  1455  000256  C050  F015         	movff	_nvalorx,coordinateRefreshX@newX
  1456  00025A  C051  F016         	movff	_nvalorx+1,coordinateRefreshX@newX+1
  1457  00025E  ECDD  F004         	call	_coordinateRefreshX	;wreg free
  1458  000262                     
  1459                           ;Comandos.c: 130:                                     coordinateRefreshY(nvalory);
  1460  000262  C04E  F015         	movff	_nvalory,coordinateRefreshY@newY
  1461  000266  C04F  F016         	movff	_nvalory+1,coordinateRefreshY@newY+1
  1462  00026A  EC6A  F004         	call	_coordinateRefreshY	;wreg free
  1463                           
  1464                           ;Comandos.c: 131:                                     Complete();
  1465  00026E  EC3A  F007         	call	_Complete	;wreg free
  1466                           
  1467                           ;Comandos.c: 132:                                 }
  1468  000272  EF66  F003         	goto	l189
  1469  000276                     l1960:
  1470                           
  1471                           ;Comandos.c: 134:                                     invalidCoordinate();
  1472  000276  ECC8  F006         	call	_invalidCoordinate	;wreg free
  1473  00027A  EF66  F003         	goto	l189
  1474  00027E                     l1974:
  1475  00027E  C01B  FFD9         	movff	commands@comando,fsr2l
  1476  000282  C01C  FFDA         	movff	commands@comando+1,fsr2h
  1477  000286  0E47               	movlw	71
  1478  000288  18DE               	xorwf	postinc2,w,c
  1479  00028A  A4D8               	btfss	status,2,c
  1480  00028C  EF4A  F001         	goto	u1311
  1481  000290  EF4C  F001         	goto	u1310
  1482  000294                     u1311:
  1483  000294  EFE5  F001         	goto	l2030
  1484  000298                     u1310:
  1485  000298                     
  1486                           ;Comandos.c: 163:         if (comando[1]=='O'){
  1487  000298  EE20 F001          	lfsr	2,1
  1488  00029C  501B               	movf	commands@comando^0,w,c
  1489  00029E  26D9               	addwf	fsr2l,f,c
  1490  0002A0  501C               	movf	(commands@comando+1)^0,w,c
  1491  0002A2  22DA               	addwfc	fsr2h,f,c
  1492  0002A4  0E4F               	movlw	79
  1493  0002A6  18DE               	xorwf	postinc2,w,c
  1494  0002A8  A4D8               	btfss	status,2,c
  1495  0002AA  EF59  F001         	goto	u1321
  1496  0002AE  EF5B  F001         	goto	u1320
  1497  0002B2                     u1321:
  1498  0002B2  EFE1  F001         	goto	l2016
  1499  0002B6                     u1320:
  1500  0002B6                     
  1501                           ;Comandos.c: 164:             if (comando[2]=='T'){
  1502  0002B6  EE20 F002          	lfsr	2,2
  1503  0002BA  501B               	movf	commands@comando^0,w,c
  1504  0002BC  26D9               	addwf	fsr2l,f,c
  1505  0002BE  501C               	movf	(commands@comando+1)^0,w,c
  1506  0002C0  22DA               	addwfc	fsr2h,f,c
  1507  0002C2  0E54               	movlw	84
  1508  0002C4  18DE               	xorwf	postinc2,w,c
  1509  0002C6  A4D8               	btfss	status,2,c
  1510  0002C8  EF68  F001         	goto	u1331
  1511  0002CC  EF6A  F001         	goto	u1330
  1512  0002D0                     u1331:
  1513  0002D0  EFE1  F001         	goto	l2016
  1514  0002D4                     u1330:
  1515  0002D4                     
  1516                           ;Comandos.c: 165:                 if (comando[3]=='O'){
  1517  0002D4  EE20 F003          	lfsr	2,3
  1518  0002D8  501B               	movf	commands@comando^0,w,c
  1519  0002DA  26D9               	addwf	fsr2l,f,c
  1520  0002DC  501C               	movf	(commands@comando+1)^0,w,c
  1521  0002DE  22DA               	addwfc	fsr2h,f,c
  1522  0002E0  0E4F               	movlw	79
  1523  0002E2  18DE               	xorwf	postinc2,w,c
  1524  0002E4  A4D8               	btfss	status,2,c
  1525  0002E6  EF77  F001         	goto	u1341
  1526  0002EA  EF79  F001         	goto	u1340
  1527  0002EE                     u1341:
  1528  0002EE  EFE1  F001         	goto	l2016
  1529  0002F2                     u1340:
  1530  0002F2                     
  1531                           ;Comandos.c: 166:                     if (comando[4]=='H'){
  1532  0002F2  EE20 F004          	lfsr	2,4
  1533  0002F6  501B               	movf	commands@comando^0,w,c
  1534  0002F8  26D9               	addwf	fsr2l,f,c
  1535  0002FA  501C               	movf	(commands@comando+1)^0,w,c
  1536  0002FC  22DA               	addwfc	fsr2h,f,c
  1537  0002FE  0E48               	movlw	72
  1538  000300  18DE               	xorwf	postinc2,w,c
  1539  000302  A4D8               	btfss	status,2,c
  1540  000304  EF86  F001         	goto	u1351
  1541  000308  EF88  F001         	goto	u1350
  1542  00030C                     u1351:
  1543  00030C  EFE1  F001         	goto	l2016
  1544  000310                     u1350:
  1545  000310                     
  1546                           ;Comandos.c: 167:                         if (comando[5]=='O'){
  1547  000310  EE20 F005          	lfsr	2,5
  1548  000314  501B               	movf	commands@comando^0,w,c
  1549  000316  26D9               	addwf	fsr2l,f,c
  1550  000318  501C               	movf	(commands@comando+1)^0,w,c
  1551  00031A  22DA               	addwfc	fsr2h,f,c
  1552  00031C  0E4F               	movlw	79
  1553  00031E  18DE               	xorwf	postinc2,w,c
  1554  000320  A4D8               	btfss	status,2,c
  1555  000322  EF95  F001         	goto	u1361
  1556  000326  EF97  F001         	goto	u1360
  1557  00032A                     u1361:
  1558  00032A  EFE1  F001         	goto	l2016
  1559  00032E                     u1360:
  1560  00032E                     
  1561                           ;Comandos.c: 168:                             if (comando[6]=='M'){
  1562  00032E  EE20 F006          	lfsr	2,6
  1563  000332  501B               	movf	commands@comando^0,w,c
  1564  000334  26D9               	addwf	fsr2l,f,c
  1565  000336  501C               	movf	(commands@comando+1)^0,w,c
  1566  000338  22DA               	addwfc	fsr2h,f,c
  1567  00033A  0E4D               	movlw	77
  1568  00033C  18DE               	xorwf	postinc2,w,c
  1569  00033E  A4D8               	btfss	status,2,c
  1570  000340  EFA4  F001         	goto	u1371
  1571  000344  EFA6  F001         	goto	u1370
  1572  000348                     u1371:
  1573  000348  EFE1  F001         	goto	l2016
  1574  00034C                     u1370:
  1575  00034C                     
  1576                           ;Comandos.c: 169:                                 if (comando[7]=='E'){
  1577  00034C  EE20 F007          	lfsr	2,7
  1578  000350  501B               	movf	commands@comando^0,w,c
  1579  000352  26D9               	addwf	fsr2l,f,c
  1580  000354  501C               	movf	(commands@comando+1)^0,w,c
  1581  000356  22DA               	addwfc	fsr2h,f,c
  1582  000358  0E45               	movlw	69
  1583  00035A  18DE               	xorwf	postinc2,w,c
  1584  00035C  A4D8               	btfss	status,2,c
  1585  00035E  EFB3  F001         	goto	u1381
  1586  000362  EFB5  F001         	goto	u1380
  1587  000366                     u1381:
  1588  000366  EFE1  F001         	goto	l2016
  1589  00036A                     u1380:
  1590  00036A                     
  1591                           ;Comandos.c: 170:                                     Executing();
  1592  00036A  ECEE  F006         	call	_Executing	;wreg free
  1593  00036E                     
  1594                           ;Comandos.c: 171:                                      PORTDbits.RD0=0;
  1595  00036E  9083               	bcf	131,0,c	;volatile
  1596  000370                     
  1597                           ;Comandos.c: 172:                                      PORTDbits.RD1=1;
  1598  000370  8283               	bsf	131,1,c	;volatile
  1599  000372                     
  1600                           ;Comandos.c: 173:                                      PORTDbits.RD3=0;
  1601  000372  9683               	bcf	131,3,c	;volatile
  1602  000374                     
  1603                           ;Comandos.c: 174:                                      PORTDbits.RD2=0;
  1604  000374  9483               	bcf	131,2,c	;volatile
  1605  000376                     l127:
  1606  000376  A081               	btfss	129,0,c	;volatile
  1607  000378  EFC0  F001         	goto	u1391
  1608  00037C  EFC2  F001         	goto	u1390
  1609  000380                     u1391:
  1610  000380  EFBB  F001         	goto	l127
  1611  000384                     u1390:
  1612  000384                     
  1613                           ;Comandos.c: 176:                                      PORTDbits.RD3=1;
  1614  000384  8683               	bsf	131,3,c	;volatile
  1615                           
  1616                           ;Comandos.c: 177:                                      PORTDbits.RD2=1;
  1617  000386  8483               	bsf	131,2,c	;volatile
  1618  000388                     
  1619                           ;Comandos.c: 178:                                      xLimit();
  1620  000388  EC83  F007         	call	_xLimit	;wreg free
  1621  00038C                     
  1622                           ;Comandos.c: 179:                                      PORTDbits.RD0=1;
  1623  00038C  8083               	bsf	131,0,c	;volatile
  1624  00038E                     
  1625                           ;Comandos.c: 180:                                      PORTDbits.RD1=1;
  1626  00038E  8283               	bsf	131,1,c	;volatile
  1627  000390                     
  1628                           ;Comandos.c: 181:                                      PORTDbits.RD3=0;
  1629  000390  9683               	bcf	131,3,c	;volatile
  1630  000392                     
  1631                           ;Comandos.c: 182:                                      PORTDbits.RD2=0;
  1632  000392  9483               	bcf	131,2,c	;volatile
  1633  000394                     l130:
  1634  000394  A281               	btfss	129,1,c	;volatile
  1635  000396  EFCF  F001         	goto	u1401
  1636  00039A  EFD1  F001         	goto	u1400
  1637  00039E                     u1401:
  1638  00039E  EFCA  F001         	goto	l130
  1639  0003A2                     u1400:
  1640  0003A2                     
  1641                           ;Comandos.c: 184:                                      PORTDbits.RD3=1;
  1642  0003A2  8683               	bsf	131,3,c	;volatile
  1643                           
  1644                           ;Comandos.c: 185:                                      PORTDbits.RD2=1;
  1645  0003A4  8483               	bsf	131,2,c	;volatile
  1646  0003A6                     
  1647                           ;Comandos.c: 186:                                      yLimit();
  1648  0003A6  EC60  F007         	call	_yLimit	;wreg free
  1649  0003AA                     
  1650                           ;Comandos.c: 187:                                      x=0;
  1651  0003AA  0E00               	movlw	0
  1652  0003AC  6E4D               	movwf	(_x+1)^0,c
  1653  0003AE  0E00               	movlw	0
  1654  0003B0  6E4C               	movwf	_x^0,c
  1655  0003B2                     
  1656                           ;Comandos.c: 188:                                      y=0;
  1657  0003B2  0E00               	movlw	0
  1658  0003B4  6E4B               	movwf	(_y+1)^0,c
  1659  0003B6  0E00               	movlw	0
  1660  0003B8  6E4A               	movwf	_y^0,c
  1661                           
  1662                           ;Comandos.c: 189:                                      Complete();
  1663  0003BA  EC3A  F007         	call	_Complete	;wreg free
  1664                           
  1665                           ;Comandos.c: 190:                                 }
  1666  0003BE  EF66  F003         	goto	l189
  1667  0003C2                     l2016:
  1668                           
  1669                           ;Comandos.c: 192:                                     Error();
  1670  0003C2  EC14  F007         	call	_Error	;wreg free
  1671  0003C6  EF66  F003         	goto	l189
  1672  0003CA                     l2030:
  1673  0003CA  C01B  FFD9         	movff	commands@comando,fsr2l
  1674  0003CE  C01C  FFDA         	movff	commands@comando+1,fsr2h
  1675  0003D2  0E53               	movlw	83
  1676  0003D4  18DE               	xorwf	postinc2,w,c
  1677  0003D6  A4D8               	btfss	status,2,c
  1678  0003D8  EFF0  F001         	goto	u1411
  1679  0003DC  EFF2  F001         	goto	u1410
  1680  0003E0                     u1411:
  1681  0003E0  EF62  F002         	goto	l2064
  1682  0003E4                     u1410:
  1683  0003E4                     
  1684                           ;Comandos.c: 221:         if (comando[1]=='T'){
  1685  0003E4  EE20 F001          	lfsr	2,1
  1686  0003E8  501B               	movf	commands@comando^0,w,c
  1687  0003EA  26D9               	addwf	fsr2l,f,c
  1688  0003EC  501C               	movf	(commands@comando+1)^0,w,c
  1689  0003EE  22DA               	addwfc	fsr2h,f,c
  1690  0003F0  0E54               	movlw	84
  1691  0003F2  18DE               	xorwf	postinc2,w,c
  1692  0003F4  A4D8               	btfss	status,2,c
  1693  0003F6  EFFF  F001         	goto	u1421
  1694  0003FA  EF01  F002         	goto	u1420
  1695  0003FE                     u1421:
  1696  0003FE  EFE1  F001         	goto	l2016
  1697  000402                     u1420:
  1698  000402                     
  1699                           ;Comandos.c: 222:             if (comando[2]=='C'){
  1700  000402  EE20 F002          	lfsr	2,2
  1701  000406  501B               	movf	commands@comando^0,w,c
  1702  000408  26D9               	addwf	fsr2l,f,c
  1703  00040A  501C               	movf	(commands@comando+1)^0,w,c
  1704  00040C  22DA               	addwfc	fsr2h,f,c
  1705  00040E  0E43               	movlw	67
  1706  000410  18DE               	xorwf	postinc2,w,c
  1707  000412  A4D8               	btfss	status,2,c
  1708  000414  EF0E  F002         	goto	u1431
  1709  000418  EF10  F002         	goto	u1430
  1710  00041C                     u1431:
  1711  00041C  EFE1  F001         	goto	l2016
  1712  000420                     u1430:
  1713  000420                     
  1714                           ;Comandos.c: 223:                 if (comando[3]=='T'){
  1715  000420  EE20 F003          	lfsr	2,3
  1716  000424  501B               	movf	commands@comando^0,w,c
  1717  000426  26D9               	addwf	fsr2l,f,c
  1718  000428  501C               	movf	(commands@comando+1)^0,w,c
  1719  00042A  22DA               	addwfc	fsr2h,f,c
  1720  00042C  0E54               	movlw	84
  1721  00042E  18DE               	xorwf	postinc2,w,c
  1722  000430  A4D8               	btfss	status,2,c
  1723  000432  EF1D  F002         	goto	u1441
  1724  000436  EF1F  F002         	goto	u1440
  1725  00043A                     u1441:
  1726  00043A  EFE1  F001         	goto	l2016
  1727  00043E                     u1440:
  1728  00043E                     
  1729                           ;Comandos.c: 224:                     if (comando[4]=='O'){
  1730  00043E  EE20 F004          	lfsr	2,4
  1731  000442  501B               	movf	commands@comando^0,w,c
  1732  000444  26D9               	addwf	fsr2l,f,c
  1733  000446  501C               	movf	(commands@comando+1)^0,w,c
  1734  000448  22DA               	addwfc	fsr2h,f,c
  1735  00044A  0E4F               	movlw	79
  1736  00044C  18DE               	xorwf	postinc2,w,c
  1737  00044E  A4D8               	btfss	status,2,c
  1738  000450  EF2C  F002         	goto	u1451
  1739  000454  EF2E  F002         	goto	u1450
  1740  000458                     u1451:
  1741  000458  EFE1  F001         	goto	l2016
  1742  00045C                     u1450:
  1743  00045C                     
  1744                           ;Comandos.c: 225:                         if (comando[5]=='U'){
  1745  00045C  EE20 F005          	lfsr	2,5
  1746  000460  501B               	movf	commands@comando^0,w,c
  1747  000462  26D9               	addwf	fsr2l,f,c
  1748  000464  501C               	movf	(commands@comando+1)^0,w,c
  1749  000466  22DA               	addwfc	fsr2h,f,c
  1750  000468  0E55               	movlw	85
  1751  00046A  18DE               	xorwf	postinc2,w,c
  1752  00046C  A4D8               	btfss	status,2,c
  1753  00046E  EF3B  F002         	goto	u1461
  1754  000472  EF3D  F002         	goto	u1460
  1755  000476                     u1461:
  1756  000476  EFE1  F001         	goto	l2016
  1757  00047A                     u1460:
  1758  00047A                     
  1759                           ;Comandos.c: 226:                             if (comando[6]=='C'){
  1760  00047A  EE20 F006          	lfsr	2,6
  1761  00047E  501B               	movf	commands@comando^0,w,c
  1762  000480  26D9               	addwf	fsr2l,f,c
  1763  000482  501C               	movf	(commands@comando+1)^0,w,c
  1764  000484  22DA               	addwfc	fsr2h,f,c
  1765  000486  0E43               	movlw	67
  1766  000488  18DE               	xorwf	postinc2,w,c
  1767  00048A  A4D8               	btfss	status,2,c
  1768  00048C  EF4A  F002         	goto	u1471
  1769  000490  EF4C  F002         	goto	u1470
  1770  000494                     u1471:
  1771  000494  EFE1  F001         	goto	l2016
  1772  000498                     u1470:
  1773  000498                     
  1774                           ;Comandos.c: 227:                                 if (comando[7]=='H'){
  1775  000498  EE20 F007          	lfsr	2,7
  1776  00049C  501B               	movf	commands@comando^0,w,c
  1777  00049E  26D9               	addwf	fsr2l,f,c
  1778  0004A0  501C               	movf	(commands@comando+1)^0,w,c
  1779  0004A2  22DA               	addwfc	fsr2h,f,c
  1780  0004A4  0E48               	movlw	72
  1781  0004A6  18DE               	xorwf	postinc2,w,c
  1782  0004A8  A4D8               	btfss	status,2,c
  1783  0004AA  EF59  F002         	goto	u1481
  1784  0004AE  EF5B  F002         	goto	u1480
  1785  0004B2                     u1481:
  1786  0004B2  EFE1  F001         	goto	l2016
  1787  0004B6                     u1480:
  1788  0004B6                     
  1789                           ;Comandos.c: 228:                                     Executing();
  1790  0004B6  ECEE  F006         	call	_Executing	;wreg free
  1791  0004BA                     
  1792                           ;Comandos.c: 229:                                     PORTDbits.RD7=1;
  1793  0004BA  8E83               	bsf	131,7,c	;volatile
  1794                           
  1795                           ;Comandos.c: 230:                                     Complete();
  1796  0004BC  EC3A  F007         	call	_Complete	;wreg free
  1797                           
  1798                           ;Comandos.c: 231:                                 }
  1799  0004C0  EF66  F003         	goto	l189
  1800  0004C4                     l2064:
  1801  0004C4  C01B  FFD9         	movff	commands@comando,fsr2l
  1802  0004C8  C01C  FFDA         	movff	commands@comando+1,fsr2h
  1803  0004CC  0E4D               	movlw	77
  1804  0004CE  18DE               	xorwf	postinc2,w,c
  1805  0004D0  A4D8               	btfss	status,2,c
  1806  0004D2  EF6D  F002         	goto	u1491
  1807  0004D6  EF6F  F002         	goto	u1490
  1808  0004DA                     u1491:
  1809  0004DA  EFEB  F002         	goto	l2104
  1810  0004DE                     u1490:
  1811  0004DE                     
  1812                           ;Comandos.c: 264:         if (comando[1]=='A'){
  1813  0004DE  EE20 F001          	lfsr	2,1
  1814  0004E2  501B               	movf	commands@comando^0,w,c
  1815  0004E4  26D9               	addwf	fsr2l,f,c
  1816  0004E6  501C               	movf	(commands@comando+1)^0,w,c
  1817  0004E8  22DA               	addwfc	fsr2h,f,c
  1818  0004EA  0E41               	movlw	65
  1819  0004EC  18DE               	xorwf	postinc2,w,c
  1820  0004EE  A4D8               	btfss	status,2,c
  1821  0004F0  EF7C  F002         	goto	u1501
  1822  0004F4  EF7E  F002         	goto	u1500
  1823  0004F8                     u1501:
  1824  0004F8  EFE1  F001         	goto	l2016
  1825  0004FC                     u1500:
  1826  0004FC                     
  1827                           ;Comandos.c: 265:             if (comando[2]=='K'){
  1828  0004FC  EE20 F002          	lfsr	2,2
  1829  000500  501B               	movf	commands@comando^0,w,c
  1830  000502  26D9               	addwf	fsr2l,f,c
  1831  000504  501C               	movf	(commands@comando+1)^0,w,c
  1832  000506  22DA               	addwfc	fsr2h,f,c
  1833  000508  0E4B               	movlw	75
  1834  00050A  18DE               	xorwf	postinc2,w,c
  1835  00050C  A4D8               	btfss	status,2,c
  1836  00050E  EF8B  F002         	goto	u1511
  1837  000512  EF8D  F002         	goto	u1510
  1838  000516                     u1511:
  1839  000516  EFE1  F001         	goto	l2016
  1840  00051A                     u1510:
  1841  00051A                     
  1842                           ;Comandos.c: 266:                 if (comando[3]=='E'){
  1843  00051A  EE20 F003          	lfsr	2,3
  1844  00051E  501B               	movf	commands@comando^0,w,c
  1845  000520  26D9               	addwf	fsr2l,f,c
  1846  000522  501C               	movf	(commands@comando+1)^0,w,c
  1847  000524  22DA               	addwfc	fsr2h,f,c
  1848  000526  0E45               	movlw	69
  1849  000528  18DE               	xorwf	postinc2,w,c
  1850  00052A  A4D8               	btfss	status,2,c
  1851  00052C  EF9A  F002         	goto	u1521
  1852  000530  EF9C  F002         	goto	u1520
  1853  000534                     u1521:
  1854  000534  EFE1  F001         	goto	l2016
  1855  000538                     u1520:
  1856  000538                     
  1857                           ;Comandos.c: 267:                     if (comando[4]=='A'){
  1858  000538  EE20 F004          	lfsr	2,4
  1859  00053C  501B               	movf	commands@comando^0,w,c
  1860  00053E  26D9               	addwf	fsr2l,f,c
  1861  000540  501C               	movf	(commands@comando+1)^0,w,c
  1862  000542  22DA               	addwfc	fsr2h,f,c
  1863  000544  0E41               	movlw	65
  1864  000546  18DE               	xorwf	postinc2,w,c
  1865  000548  A4D8               	btfss	status,2,c
  1866  00054A  EFA9  F002         	goto	u1531
  1867  00054E  EFAB  F002         	goto	u1530
  1868  000552                     u1531:
  1869  000552  EFE1  F001         	goto	l2016
  1870  000556                     u1530:
  1871  000556                     
  1872                           ;Comandos.c: 268:                         if (comando[5]=='T'){
  1873  000556  EE20 F005          	lfsr	2,5
  1874  00055A  501B               	movf	commands@comando^0,w,c
  1875  00055C  26D9               	addwf	fsr2l,f,c
  1876  00055E  501C               	movf	(commands@comando+1)^0,w,c
  1877  000560  22DA               	addwfc	fsr2h,f,c
  1878  000562  0E54               	movlw	84
  1879  000564  18DE               	xorwf	postinc2,w,c
  1880  000566  A4D8               	btfss	status,2,c
  1881  000568  EFB8  F002         	goto	u1541
  1882  00056C  EFBA  F002         	goto	u1540
  1883  000570                     u1541:
  1884  000570  EFE1  F001         	goto	l2016
  1885  000574                     u1540:
  1886  000574                     
  1887                           ;Comandos.c: 269:                             if (comando[6]=='A'){
  1888  000574  EE20 F006          	lfsr	2,6
  1889  000578  501B               	movf	commands@comando^0,w,c
  1890  00057A  26D9               	addwf	fsr2l,f,c
  1891  00057C  501C               	movf	(commands@comando+1)^0,w,c
  1892  00057E  22DA               	addwfc	fsr2h,f,c
  1893  000580  0E41               	movlw	65
  1894  000582  18DE               	xorwf	postinc2,w,c
  1895  000584  A4D8               	btfss	status,2,c
  1896  000586  EFC7  F002         	goto	u1551
  1897  00058A  EFC9  F002         	goto	u1550
  1898  00058E                     u1551:
  1899  00058E  EFE1  F001         	goto	l2016
  1900  000592                     u1550:
  1901  000592                     
  1902                           ;Comandos.c: 270:                                 if (comando[7]=='P'){
  1903  000592  EE20 F007          	lfsr	2,7
  1904  000596  501B               	movf	commands@comando^0,w,c
  1905  000598  26D9               	addwf	fsr2l,f,c
  1906  00059A  501C               	movf	(commands@comando+1)^0,w,c
  1907  00059C  22DA               	addwfc	fsr2h,f,c
  1908  00059E  0E50               	movlw	80
  1909  0005A0  18DE               	xorwf	postinc2,w,c
  1910  0005A2  A4D8               	btfss	status,2,c
  1911  0005A4  EFD6  F002         	goto	u1561
  1912  0005A8  EFD8  F002         	goto	u1560
  1913  0005AC                     u1561:
  1914  0005AC  EFE1  F001         	goto	l2016
  1915  0005B0                     u1560:
  1916  0005B0                     
  1917                           ;Comandos.c: 271:                                     Executing();
  1918  0005B0  ECEE  F006         	call	_Executing	;wreg free
  1919  0005B4                     
  1920                           ;Comandos.c: 272:                                     PORTDbits.RD7=1;
  1921  0005B4  8E83               	bsf	131,7,c	;volatile
  1922  0005B6                     
  1923                           ;Comandos.c: 273:                                     _delay((unsigned long)((1000)*(800
      +                          0000L/4000.0)));
  1924  0005B6  0E0B               	movlw	11
  1925  0005B8  6E1E               	movwf	(??_commands+1)^0,c
  1926  0005BA  0E26               	movlw	38
  1927  0005BC  6E1D               	movwf	??_commands^0,c
  1928  0005BE  0E5E               	movlw	94
  1929  0005C0                     u1747:
  1930  0005C0  2EE8               	decfsz	wreg,f,c
  1931  0005C2  D7FE               	bra	u1747
  1932  0005C4  2E1D               	decfsz	??_commands^0,f,c
  1933  0005C6  D7FC               	bra	u1747
  1934  0005C8  2E1E               	decfsz	(??_commands+1)^0,f,c
  1935  0005CA  D7FA               	bra	u1747
  1936  0005CC                     
  1937                           ;Comandos.c: 274:                                     PORTDbits.RD7=0;
  1938  0005CC  9E83               	bcf	131,7,c	;volatile
  1939  0005CE                     
  1940                           ;Comandos.c: 275:                                     Complete();
  1941  0005CE  EC3A  F007         	call	_Complete	;wreg free
  1942                           
  1943                           ;Comandos.c: 276:                                 }
  1944  0005D2  EF66  F003         	goto	l189
  1945  0005D6                     l2104:
  1946  0005D6  C01B  FFD9         	movff	commands@comando,fsr2l
  1947  0005DA  C01C  FFDA         	movff	commands@comando+1,fsr2h
  1948  0005DE  0E54               	movlw	84
  1949  0005E0  18DE               	xorwf	postinc2,w,c
  1950  0005E2  A4D8               	btfss	status,2,c
  1951  0005E4  EFF6  F002         	goto	u1571
  1952  0005E8  EFF8  F002         	goto	u1570
  1953  0005EC                     u1571:
  1954  0005EC  EFE1  F001         	goto	l2016
  1955  0005F0                     u1570:
  1956  0005F0                     
  1957                           ;Comandos.c: 309:         if (comando[1]=='A'){
  1958  0005F0  EE20 F001          	lfsr	2,1
  1959  0005F4  501B               	movf	commands@comando^0,w,c
  1960  0005F6  26D9               	addwf	fsr2l,f,c
  1961  0005F8  501C               	movf	(commands@comando+1)^0,w,c
  1962  0005FA  22DA               	addwfc	fsr2h,f,c
  1963  0005FC  0E41               	movlw	65
  1964  0005FE  18DE               	xorwf	postinc2,w,c
  1965  000600  A4D8               	btfss	status,2,c
  1966  000602  EF05  F003         	goto	u1581
  1967  000606  EF07  F003         	goto	u1580
  1968  00060A                     u1581:
  1969  00060A  EFE1  F001         	goto	l2016
  1970  00060E                     u1580:
  1971  00060E                     
  1972                           ;Comandos.c: 310:             if (comando[2]=='K'){
  1973  00060E  EE20 F002          	lfsr	2,2
  1974  000612  501B               	movf	commands@comando^0,w,c
  1975  000614  26D9               	addwf	fsr2l,f,c
  1976  000616  501C               	movf	(commands@comando+1)^0,w,c
  1977  000618  22DA               	addwfc	fsr2h,f,c
  1978  00061A  0E4B               	movlw	75
  1979  00061C  18DE               	xorwf	postinc2,w,c
  1980  00061E  A4D8               	btfss	status,2,c
  1981  000620  EF14  F003         	goto	u1591
  1982  000624  EF16  F003         	goto	u1590
  1983  000628                     u1591:
  1984  000628  EFE1  F001         	goto	l2016
  1985  00062C                     u1590:
  1986  00062C                     
  1987                           ;Comandos.c: 311:                 if (comando[3]=='E'){
  1988  00062C  EE20 F003          	lfsr	2,3
  1989  000630  501B               	movf	commands@comando^0,w,c
  1990  000632  26D9               	addwf	fsr2l,f,c
  1991  000634  501C               	movf	(commands@comando+1)^0,w,c
  1992  000636  22DA               	addwfc	fsr2h,f,c
  1993  000638  0E45               	movlw	69
  1994  00063A  18DE               	xorwf	postinc2,w,c
  1995  00063C  A4D8               	btfss	status,2,c
  1996  00063E  EF23  F003         	goto	u1601
  1997  000642  EF25  F003         	goto	u1600
  1998  000646                     u1601:
  1999  000646  EFE1  F001         	goto	l2016
  2000  00064A                     u1600:
  2001  00064A                     
  2002                           ;Comandos.c: 312:                     if (comando[4]=='L'){
  2003  00064A  EE20 F004          	lfsr	2,4
  2004  00064E  501B               	movf	commands@comando^0,w,c
  2005  000650  26D9               	addwf	fsr2l,f,c
  2006  000652  501C               	movf	(commands@comando+1)^0,w,c
  2007  000654  22DA               	addwfc	fsr2h,f,c
  2008  000656  0E4C               	movlw	76
  2009  000658  18DE               	xorwf	postinc2,w,c
  2010  00065A  A4D8               	btfss	status,2,c
  2011  00065C  EF32  F003         	goto	u1611
  2012  000660  EF34  F003         	goto	u1610
  2013  000664                     u1611:
  2014  000664  EFE1  F001         	goto	l2016
  2015  000668                     u1610:
  2016  000668                     
  2017                           ;Comandos.c: 313:                         if (comando[5]=='I'){
  2018  000668  EE20 F005          	lfsr	2,5
  2019  00066C  501B               	movf	commands@comando^0,w,c
  2020  00066E  26D9               	addwf	fsr2l,f,c
  2021  000670  501C               	movf	(commands@comando+1)^0,w,c
  2022  000672  22DA               	addwfc	fsr2h,f,c
  2023  000674  0E49               	movlw	73
  2024  000676  18DE               	xorwf	postinc2,w,c
  2025  000678  A4D8               	btfss	status,2,c
  2026  00067A  EF41  F003         	goto	u1621
  2027  00067E  EF43  F003         	goto	u1620
  2028  000682                     u1621:
  2029  000682  EFE1  F001         	goto	l2016
  2030  000686                     u1620:
  2031  000686                     
  2032                           ;Comandos.c: 314:                             if (comando[6]=='F'){
  2033  000686  EE20 F006          	lfsr	2,6
  2034  00068A  501B               	movf	commands@comando^0,w,c
  2035  00068C  26D9               	addwf	fsr2l,f,c
  2036  00068E  501C               	movf	(commands@comando+1)^0,w,c
  2037  000690  22DA               	addwfc	fsr2h,f,c
  2038  000692  0E46               	movlw	70
  2039  000694  18DE               	xorwf	postinc2,w,c
  2040  000696  A4D8               	btfss	status,2,c
  2041  000698  EF50  F003         	goto	u1631
  2042  00069C  EF52  F003         	goto	u1630
  2043  0006A0                     u1631:
  2044  0006A0  EFE1  F001         	goto	l2016
  2045  0006A4                     u1630:
  2046  0006A4                     
  2047                           ;Comandos.c: 315:                                 if (comando[7]=='T'){
  2048  0006A4  EE20 F007          	lfsr	2,7
  2049  0006A8  501B               	movf	commands@comando^0,w,c
  2050  0006AA  26D9               	addwf	fsr2l,f,c
  2051  0006AC  501C               	movf	(commands@comando+1)^0,w,c
  2052  0006AE  22DA               	addwfc	fsr2h,f,c
  2053  0006B0  0E54               	movlw	84
  2054  0006B2  18DE               	xorwf	postinc2,w,c
  2055  0006B4  A4D8               	btfss	status,2,c
  2056  0006B6  EF5F  F003         	goto	u1641
  2057  0006BA  EF61  F003         	goto	u1640
  2058  0006BE                     u1641:
  2059  0006BE  EFE1  F001         	goto	l2016
  2060  0006C2                     u1640:
  2061  0006C2                     
  2062                           ;Comandos.c: 316:                                     Executing();
  2063  0006C2  ECEE  F006         	call	_Executing	;wreg free
  2064  0006C6                     
  2065                           ;Comandos.c: 317:                                     PORTDbits.RD7=0;
  2066  0006C6  9E83               	bcf	131,7,c	;volatile
  2067                           
  2068                           ;Comandos.c: 318:                                     Complete();
  2069  0006C8  EC3A  F007         	call	_Complete	;wreg free
  2070  0006CC                     l189:
  2071  0006CC  0012               	return		;funcret
  2072  0006CE                     __end_of_commands:
  2073                           	opt callstack 0
  2074                           
  2075 ;; *************** function _yLimit *****************
  2076 ;; Defined at:
  2077 ;;		line 26 in file "Comandos.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  i               2   15[COMRAM] int 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         0       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2094 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        2 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    4
  2098 ;; This function calls:
  2099 ;;		_USART_Tx
  2100 ;;		_strlen
  2101 ;; This function is called by:
  2102 ;;		_commands
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text5
  2108  000EC0                     __ptext5:
  2109                           	opt callstack 0
  2110  000EC0                     _yLimit:
  2111                           	opt callstack 26
  2112  000EC0                     
  2113                           ;Comandos.c: 27:     for(int i=0; i < strlen(yl); i++){
  2114  000EC0  0E00               	movlw	0
  2115  000EC2  6E11               	movwf	(yLimit@i+1)^0,c
  2116  000EC4  0E00               	movlw	0
  2117  000EC6  6E10               	movwf	yLimit@i^0,c
  2118  000EC8  EF71  F007         	goto	l1778
  2119  000ECC                     l1774:
  2120                           
  2121                           ;Comandos.c: 28:     USART_Tx(yl[i]);
  2122  000ECC  0EBE               	movlw	low _yl
  2123  000ECE  2410               	addwf	yLimit@i^0,w,c
  2124  000ED0  6ED9               	movwf	fsr2l,c
  2125  000ED2  0E00               	movlw	high _yl
  2126  000ED4  2011               	addwfc	(yLimit@i+1)^0,w,c
  2127  000ED6  6EDA               	movwf	fsr2h,c
  2128  000ED8  50DF               	movf	indf2,w,c
  2129  000EDA  EC4D  F008         	call	_USART_Tx
  2130  000EDE                     
  2131                           ;Comandos.c: 29:     } return;
  2132  000EDE  4A10               	infsnz	yLimit@i^0,f,c
  2133  000EE0  2A11               	incf	(yLimit@i+1)^0,f,c
  2134  000EE2                     l1778:
  2135  000EE2  0EBE               	movlw	low _yl
  2136  000EE4  6E0C               	movwf	strlen@s^0,c
  2137  000EE6  0E00               	movlw	high _yl
  2138  000EE8  6E0D               	movwf	(strlen@s+1)^0,c
  2139  000EEA  ECC3  F007         	call	_strlen	;wreg free
  2140  000EEE  500C               	movf	?_strlen^0,w,c
  2141  000EF0  5C10               	subwf	yLimit@i^0,w,c
  2142  000EF2  500D               	movf	(?_strlen+1)^0,w,c
  2143  000EF4  5811               	subwfb	(yLimit@i+1)^0,w,c
  2144  000EF6  A0D8               	btfss	status,0,c
  2145  000EF8  EF80  F007         	goto	u971
  2146  000EFC  EF82  F007         	goto	u970
  2147  000F00                     u971:
  2148  000F00  EF66  F007         	goto	l1774
  2149  000F04                     u970:
  2150  000F04  0012               	return		;funcret
  2151  000F06                     __end_of_yLimit:
  2152                           	opt callstack 0
  2153                           
  2154 ;; *************** function _xLimit *****************
  2155 ;; Defined at:
  2156 ;;		line 19 in file "Comandos.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  i               2   15[COMRAM] int 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0
  2171 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2173 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    4
  2177 ;; This function calls:
  2178 ;;		_USART_Tx
  2179 ;;		_strlen
  2180 ;; This function is called by:
  2181 ;;		_commands
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text6
  2187  000F06                     __ptext6:
  2188                           	opt callstack 0
  2189  000F06                     _xLimit:
  2190                           	opt callstack 26
  2191  000F06                     
  2192                           ;Comandos.c: 20:     for(int i=0; i < strlen(xl); i++){
  2193  000F06  0E00               	movlw	0
  2194  000F08  6E11               	movwf	(xLimit@i+1)^0,c
  2195  000F0A  0E00               	movlw	0
  2196  000F0C  6E10               	movwf	xLimit@i^0,c
  2197  000F0E  EF94  F007         	goto	l1770
  2198  000F12                     l1766:
  2199                           
  2200                           ;Comandos.c: 21:     USART_Tx(xl[i]);
  2201  000F12  0ECF               	movlw	low _xl
  2202  000F14  2410               	addwf	xLimit@i^0,w,c
  2203  000F16  6ED9               	movwf	fsr2l,c
  2204  000F18  0E00               	movlw	high _xl
  2205  000F1A  2011               	addwfc	(xLimit@i+1)^0,w,c
  2206  000F1C  6EDA               	movwf	fsr2h,c
  2207  000F1E  50DF               	movf	indf2,w,c
  2208  000F20  EC4D  F008         	call	_USART_Tx
  2209  000F24                     
  2210                           ;Comandos.c: 22:     }
  2211  000F24  4A10               	infsnz	xLimit@i^0,f,c
  2212  000F26  2A11               	incf	(xLimit@i+1)^0,f,c
  2213  000F28                     l1770:
  2214  000F28  0ECF               	movlw	low _xl
  2215  000F2A  6E0C               	movwf	strlen@s^0,c
  2216  000F2C  0E00               	movlw	high _xl
  2217  000F2E  6E0D               	movwf	(strlen@s+1)^0,c
  2218  000F30  ECC3  F007         	call	_strlen	;wreg free
  2219  000F34  500C               	movf	?_strlen^0,w,c
  2220  000F36  5C10               	subwf	xLimit@i^0,w,c
  2221  000F38  500D               	movf	(?_strlen+1)^0,w,c
  2222  000F3A  5811               	subwfb	(xLimit@i+1)^0,w,c
  2223  000F3C  A0D8               	btfss	status,0,c
  2224  000F3E  EFA3  F007         	goto	u961
  2225  000F42  EFA5  F007         	goto	u960
  2226  000F46                     u961:
  2227  000F46  EF89  F007         	goto	l1766
  2228  000F4A                     u960:
  2229  000F4A  0012               	return		;funcret
  2230  000F4C                     __end_of_xLimit:
  2231                           	opt callstack 0
  2232                           
  2233 ;; *************** function _invalidCoordinate *****************
  2234 ;; Defined at:
  2235 ;;		line 10 in file "Comandos.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  i               2   15[COMRAM] int 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0
  2250 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2252 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2253 ;;Total ram usage:        2 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    4
  2256 ;; This function calls:
  2257 ;;		_USART_Tx
  2258 ;;		_strlen
  2259 ;; This function is called by:
  2260 ;;		_commands
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text7
  2265  000D90                     __ptext7:
  2266                           	opt callstack 0
  2267  000D90                     _invalidCoordinate:
  2268                           	opt callstack 25
  2269  000D90                     
  2270                           ;Comandos.c: 11: for(int i=0; i < strlen(CE); i++){
  2271  000D90  0E00               	movlw	0
  2272  000D92  6E11               	movwf	(invalidCoordinate@i+1)^0,c
  2273  000D94  0E00               	movlw	0
  2274  000D96  6E10               	movwf	invalidCoordinate@i^0,c
  2275  000D98  EFD9  F006         	goto	l1762
  2276  000D9C                     l1758:
  2277                           
  2278                           ;Comandos.c: 12:     USART_Tx(CE[i]);
  2279  000D9C  0E00               	movlw	low _CE
  2280  000D9E  2410               	addwf	invalidCoordinate@i^0,w,c
  2281  000DA0  6ED9               	movwf	fsr2l,c
  2282  000DA2  0E01               	movlw	high _CE
  2283  000DA4  2011               	addwfc	(invalidCoordinate@i+1)^0,w,c
  2284  000DA6  6EDA               	movwf	fsr2h,c
  2285  000DA8  50DF               	movf	indf2,w,c
  2286  000DAA  EC4D  F008         	call	_USART_Tx
  2287  000DAE                     
  2288                           ;Comandos.c: 13:     }
  2289  000DAE  4A10               	infsnz	invalidCoordinate@i^0,f,c
  2290  000DB0  2A11               	incf	(invalidCoordinate@i+1)^0,f,c
  2291  000DB2                     l1762:
  2292  000DB2  0E00               	movlw	low _CE
  2293  000DB4  6E0C               	movwf	strlen@s^0,c
  2294  000DB6  0E01               	movlw	high _CE
  2295  000DB8  6E0D               	movwf	(strlen@s+1)^0,c
  2296  000DBA  ECC3  F007         	call	_strlen	;wreg free
  2297  000DBE  500C               	movf	?_strlen^0,w,c
  2298  000DC0  5C10               	subwf	invalidCoordinate@i^0,w,c
  2299  000DC2  500D               	movf	(?_strlen+1)^0,w,c
  2300  000DC4  5811               	subwfb	(invalidCoordinate@i+1)^0,w,c
  2301  000DC6  A0D8               	btfss	status,0,c
  2302  000DC8  EFE8  F006         	goto	u951
  2303  000DCC  EFEA  F006         	goto	u950
  2304  000DD0                     u951:
  2305  000DD0  EFCE  F006         	goto	l1758
  2306  000DD4                     u950:
  2307  000DD4                     
  2308                           ;Comandos.c: 14:     PORTDbits.RD4=1;
  2309  000DD4  8883               	bsf	131,4,c	;volatile
  2310                           
  2311                           ;Comandos.c: 15:     PORTDbits.RD5=0;
  2312  000DD6  9A83               	bcf	131,5,c	;volatile
  2313                           
  2314                           ;Comandos.c: 16:     PORTDbits.RD6=0;
  2315  000DD8  9C83               	bcf	131,6,c	;volatile
  2316  000DDA  0012               	return		;funcret
  2317  000DDC                     __end_of_invalidCoordinate:
  2318                           	opt callstack 0
  2319                           
  2320 ;; *************** function _coordinateRefreshY *****************
  2321 ;; Defined at:
  2322 ;;		line 91 in file "Comandos.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  newY            2   20[COMRAM] int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  j               2   24[COMRAM] int 
  2327 ;;  i               2   22[COMRAM] int 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         2       0       0       0       0       0       0       0       0
  2338 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2340 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2341 ;;Total ram usage:        6 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    5
  2344 ;; This function calls:
  2345 ;;		_USART_Tx
  2346 ;;		_pulseCounter
  2347 ;;		_strlen
  2348 ;; This function is called by:
  2349 ;;		_commands
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text8
  2354  0008D4                     __ptext8:
  2355                           	opt callstack 0
  2356  0008D4                     _coordinateRefreshY:
  2357                           	opt callstack 24
  2358  0008D4                     
  2359                           ;Comandos.c: 92:     if(newY<y){
  2360  0008D4  504A               	movf	_y^0,w,c
  2361  0008D6  5C15               	subwf	coordinateRefreshY@newY^0,w,c
  2362  0008D8  504B               	movf	(_y+1)^0,w,c
  2363  0008DA  5816               	subwfb	(coordinateRefreshY@newY+1)^0,w,c
  2364  0008DC  B0D8               	btfsc	status,0,c
  2365  0008DE  EF73  F004         	goto	u1051
  2366  0008E2  EF75  F004         	goto	u1050
  2367  0008E6                     u1051:
  2368  0008E6  EFA1  F004         	goto	l1848
  2369  0008EA                     u1050:
  2370  0008EA                     
  2371                           ;Comandos.c: 93:     PORTDbits.RD0=0;
  2372  0008EA  9083               	bcf	131,0,c	;volatile
  2373                           
  2374                           ;Comandos.c: 94:        PORTDbits.RD1=1;
  2375  0008EC  8283               	bsf	131,1,c	;volatile
  2376  0008EE                     
  2377                           ;Comandos.c: 96:        for(int i=0; i < strlen(msdown); i++){
  2378  0008EE  0E00               	movlw	0
  2379  0008F0  6E18               	movwf	(coordinateRefreshY@i+1)^0,c
  2380  0008F2  0E00               	movlw	0
  2381  0008F4  6E17               	movwf	coordinateRefreshY@i^0,c
  2382  0008F6  EF88  F004         	goto	l1844
  2383  0008FA                     l1840:
  2384                           
  2385                           ;Comandos.c: 97:     USART_Tx(msdown[i]);
  2386  0008FA  0EED               	movlw	low _msdown
  2387  0008FC  2417               	addwf	coordinateRefreshY@i^0,w,c
  2388  0008FE  6ED9               	movwf	fsr2l,c
  2389  000900  0E00               	movlw	high _msdown
  2390  000902  2018               	addwfc	(coordinateRefreshY@i+1)^0,w,c
  2391  000904  6EDA               	movwf	fsr2h,c
  2392  000906  50DF               	movf	indf2,w,c
  2393  000908  EC4D  F008         	call	_USART_Tx
  2394  00090C                     
  2395                           ;Comandos.c: 98:     }
  2396  00090C  4A17               	infsnz	coordinateRefreshY@i^0,f,c
  2397  00090E  2A18               	incf	(coordinateRefreshY@i+1)^0,f,c
  2398  000910                     l1844:
  2399  000910  0EED               	movlw	low _msdown
  2400  000912  6E0C               	movwf	strlen@s^0,c
  2401  000914  0E00               	movlw	high _msdown
  2402  000916  6E0D               	movwf	(strlen@s+1)^0,c
  2403  000918  ECC3  F007         	call	_strlen	;wreg free
  2404  00091C  500C               	movf	?_strlen^0,w,c
  2405  00091E  5C17               	subwf	coordinateRefreshY@i^0,w,c
  2406  000920  500D               	movf	(?_strlen+1)^0,w,c
  2407  000922  5818               	subwfb	(coordinateRefreshY@i+1)^0,w,c
  2408  000924  A0D8               	btfss	status,0,c
  2409  000926  EF97  F004         	goto	u1061
  2410  00092A  EF99  F004         	goto	u1060
  2411  00092E                     u1061:
  2412  00092E  EF7D  F004         	goto	l1840
  2413  000932                     u1060:
  2414  000932                     
  2415                           ;Comandos.c: 99:     pulseCounter(y-newY);
  2416  000932  5015               	movf	coordinateRefreshY@newY^0,w,c
  2417  000934  5C4A               	subwf	_y^0,w,c
  2418  000936  6E12               	movwf	pulseCounter@pulsoD^0,c
  2419  000938  5016               	movf	(coordinateRefreshY@newY+1)^0,w,c
  2420  00093A  584B               	subwfb	(_y+1)^0,w,c
  2421  00093C  6E13               	movwf	(pulseCounter@pulsoD+1)^0,c
  2422  00093E  EC9D  F005         	call	_pulseCounter	;wreg free
  2423  000942                     l1848:
  2424                           
  2425                           ;Comandos.c: 101:     if(newY>y){
  2426  000942  5015               	movf	coordinateRefreshY@newY^0,w,c
  2427  000944  5C4A               	subwf	_y^0,w,c
  2428  000946  5016               	movf	(coordinateRefreshY@newY+1)^0,w,c
  2429  000948  584B               	subwfb	(_y+1)^0,w,c
  2430  00094A  B0D8               	btfsc	status,0,c
  2431  00094C  EFAA  F004         	goto	u1071
  2432  000950  EFAC  F004         	goto	u1070
  2433  000954                     u1071:
  2434  000954  EFD8  F004         	goto	l1862
  2435  000958                     u1070:
  2436  000958                     
  2437                           ;Comandos.c: 102:         PORTDbits.RD0=1;
  2438  000958  8083               	bsf	131,0,c	;volatile
  2439                           
  2440                           ;Comandos.c: 103:         PORTDbits.RD1=0;
  2441  00095A  9283               	bcf	131,1,c	;volatile
  2442  00095C                     
  2443                           ;Comandos.c: 105:     for(int j=0; j < strlen(msup); j++){
  2444  00095C  0E00               	movlw	0
  2445  00095E  6E1A               	movwf	(coordinateRefreshY@j+1)^0,c
  2446  000960  0E00               	movlw	0
  2447  000962  6E19               	movwf	coordinateRefreshY@j^0,c
  2448  000964  EFBF  F004         	goto	l1858
  2449  000968                     l1854:
  2450                           
  2451                           ;Comandos.c: 106:     USART_Tx(msup[j]);
  2452  000968  0E39               	movlw	low _msup
  2453  00096A  2419               	addwf	coordinateRefreshY@j^0,w,c
  2454  00096C  6ED9               	movwf	fsr2l,c
  2455  00096E  0E00               	movlw	high _msup
  2456  000970  201A               	addwfc	(coordinateRefreshY@j+1)^0,w,c
  2457  000972  6EDA               	movwf	fsr2h,c
  2458  000974  50DF               	movf	indf2,w,c
  2459  000976  EC4D  F008         	call	_USART_Tx
  2460  00097A                     
  2461                           ;Comandos.c: 107:     }
  2462  00097A  4A19               	infsnz	coordinateRefreshY@j^0,f,c
  2463  00097C  2A1A               	incf	(coordinateRefreshY@j+1)^0,f,c
  2464  00097E                     l1858:
  2465  00097E  0E39               	movlw	low _msup
  2466  000980  6E0C               	movwf	strlen@s^0,c
  2467  000982  0E00               	movlw	high _msup
  2468  000984  6E0D               	movwf	(strlen@s+1)^0,c
  2469  000986  ECC3  F007         	call	_strlen	;wreg free
  2470  00098A  500C               	movf	?_strlen^0,w,c
  2471  00098C  5C19               	subwf	coordinateRefreshY@j^0,w,c
  2472  00098E  500D               	movf	(?_strlen+1)^0,w,c
  2473  000990  581A               	subwfb	(coordinateRefreshY@j+1)^0,w,c
  2474  000992  A0D8               	btfss	status,0,c
  2475  000994  EFCE  F004         	goto	u1081
  2476  000998  EFD0  F004         	goto	u1080
  2477  00099C                     u1081:
  2478  00099C  EFB4  F004         	goto	l1854
  2479  0009A0                     u1080:
  2480  0009A0                     
  2481                           ;Comandos.c: 109:         pulseCounter(newY-y);
  2482  0009A0  504A               	movf	_y^0,w,c
  2483  0009A2  5C15               	subwf	coordinateRefreshY@newY^0,w,c
  2484  0009A4  6E12               	movwf	pulseCounter@pulsoD^0,c
  2485  0009A6  504B               	movf	(_y+1)^0,w,c
  2486  0009A8  5816               	subwfb	(coordinateRefreshY@newY+1)^0,w,c
  2487  0009AA  6E13               	movwf	(pulseCounter@pulsoD+1)^0,c
  2488  0009AC  EC9D  F005         	call	_pulseCounter	;wreg free
  2489  0009B0                     l1862:
  2490                           
  2491                           ;Comandos.c: 111:     y=newY;
  2492  0009B0  C015  F04A         	movff	coordinateRefreshY@newY,_y
  2493  0009B4  C016  F04B         	movff	coordinateRefreshY@newY+1,_y+1
  2494  0009B8  0012               	return		;funcret
  2495  0009BA                     __end_of_coordinateRefreshY:
  2496                           	opt callstack 0
  2497                           
  2498 ;; *************** function _coordinateRefreshX *****************
  2499 ;; Defined at:
  2500 ;;		line 62 in file "Comandos.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  newX            2   20[COMRAM] int 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  j               2   24[COMRAM] int 
  2505 ;;  i               2   22[COMRAM] int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0
  2516 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2518 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2519 ;;Total ram usage:        6 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    5
  2522 ;; This function calls:
  2523 ;;		_USART_Tx
  2524 ;;		_pulseCounter
  2525 ;;		_strlen
  2526 ;; This function is called by:
  2527 ;;		_commands
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text9
  2532  0009BA                     __ptext9:
  2533                           	opt callstack 0
  2534  0009BA                     _coordinateRefreshX:
  2535                           	opt callstack 24
  2536  0009BA                     
  2537                           ;Comandos.c: 63:     if(newX<x){
  2538  0009BA  504C               	movf	_x^0,w,c
  2539  0009BC  5C15               	subwf	coordinateRefreshX@newX^0,w,c
  2540  0009BE  504D               	movf	(_x+1)^0,w,c
  2541  0009C0  5816               	subwfb	(coordinateRefreshX@newX+1)^0,w,c
  2542  0009C2  B0D8               	btfsc	status,0,c
  2543  0009C4  EFE6  F004         	goto	u1011
  2544  0009C8  EFE8  F004         	goto	u1010
  2545  0009CC                     u1011:
  2546  0009CC  EF14  F005         	goto	l1818
  2547  0009D0                     u1010:
  2548  0009D0                     
  2549                           ;Comandos.c: 64:        PORTDbits.RD0=1;
  2550  0009D0  8083               	bsf	131,0,c	;volatile
  2551                           
  2552                           ;Comandos.c: 67:        PORTDbits.RD1=1;
  2553  0009D2  8283               	bsf	131,1,c	;volatile
  2554  0009D4                     
  2555                           ;Comandos.c: 69:        for(int i=0; i < strlen(msleft); i++){
  2556  0009D4  0E00               	movlw	0
  2557  0009D6  6E18               	movwf	(coordinateRefreshX@i+1)^0,c
  2558  0009D8  0E00               	movlw	0
  2559  0009DA  6E17               	movwf	coordinateRefreshX@i^0,c
  2560  0009DC  EFFB  F004         	goto	l1814
  2561  0009E0                     l1810:
  2562                           
  2563                           ;Comandos.c: 70:     USART_Tx(msleft[i]);
  2564  0009E0  0E2D               	movlw	low _msleft
  2565  0009E2  2417               	addwf	coordinateRefreshX@i^0,w,c
  2566  0009E4  6ED9               	movwf	fsr2l,c
  2567  0009E6  0E00               	movlw	high _msleft
  2568  0009E8  2018               	addwfc	(coordinateRefreshX@i+1)^0,w,c
  2569  0009EA  6EDA               	movwf	fsr2h,c
  2570  0009EC  50DF               	movf	indf2,w,c
  2571  0009EE  EC4D  F008         	call	_USART_Tx
  2572  0009F2                     
  2573                           ;Comandos.c: 71:     }
  2574  0009F2  4A17               	infsnz	coordinateRefreshX@i^0,f,c
  2575  0009F4  2A18               	incf	(coordinateRefreshX@i+1)^0,f,c
  2576  0009F6                     l1814:
  2577  0009F6  0E2D               	movlw	low _msleft
  2578  0009F8  6E0C               	movwf	strlen@s^0,c
  2579  0009FA  0E00               	movlw	high _msleft
  2580  0009FC  6E0D               	movwf	(strlen@s+1)^0,c
  2581  0009FE  ECC3  F007         	call	_strlen	;wreg free
  2582  000A02  500C               	movf	?_strlen^0,w,c
  2583  000A04  5C17               	subwf	coordinateRefreshX@i^0,w,c
  2584  000A06  500D               	movf	(?_strlen+1)^0,w,c
  2585  000A08  5818               	subwfb	(coordinateRefreshX@i+1)^0,w,c
  2586  000A0A  A0D8               	btfss	status,0,c
  2587  000A0C  EF0A  F005         	goto	u1021
  2588  000A10  EF0C  F005         	goto	u1020
  2589  000A14                     u1021:
  2590  000A14  EFF0  F004         	goto	l1810
  2591  000A18                     u1020:
  2592  000A18                     
  2593                           ;Comandos.c: 72:        pulseCounter(x-newX);
  2594  000A18  5015               	movf	coordinateRefreshX@newX^0,w,c
  2595  000A1A  5C4C               	subwf	_x^0,w,c
  2596  000A1C  6E12               	movwf	pulseCounter@pulsoD^0,c
  2597  000A1E  5016               	movf	(coordinateRefreshX@newX+1)^0,w,c
  2598  000A20  584D               	subwfb	(_x+1)^0,w,c
  2599  000A22  6E13               	movwf	(pulseCounter@pulsoD+1)^0,c
  2600  000A24  EC9D  F005         	call	_pulseCounter	;wreg free
  2601  000A28                     l1818:
  2602                           
  2603                           ;Comandos.c: 75:     if(newX>x){
  2604  000A28  5015               	movf	coordinateRefreshX@newX^0,w,c
  2605  000A2A  5C4C               	subwf	_x^0,w,c
  2606  000A2C  5016               	movf	(coordinateRefreshX@newX+1)^0,w,c
  2607  000A2E  584D               	subwfb	(_x+1)^0,w,c
  2608  000A30  B0D8               	btfsc	status,0,c
  2609  000A32  EF1D  F005         	goto	u1031
  2610  000A36  EF1F  F005         	goto	u1030
  2611  000A3A                     u1031:
  2612  000A3A  EF4B  F005         	goto	l1832
  2613  000A3E                     u1030:
  2614  000A3E                     
  2615                           ;Comandos.c: 76:        PORTDbits.RD0=0;
  2616  000A3E  9083               	bcf	131,0,c	;volatile
  2617                           
  2618                           ;Comandos.c: 77:        PORTDbits.RD1=0;
  2619  000A40  9283               	bcf	131,1,c	;volatile
  2620  000A42                     
  2621                           ;Comandos.c: 81:        for(int j=0; j < strlen(msright); j++){
  2622  000A42  0E00               	movlw	0
  2623  000A44  6E1A               	movwf	(coordinateRefreshX@j+1)^0,c
  2624  000A46  0E00               	movlw	0
  2625  000A48  6E19               	movwf	coordinateRefreshX@j^0,c
  2626  000A4A  EF32  F005         	goto	l1828
  2627  000A4E                     l1824:
  2628                           
  2629                           ;Comandos.c: 82:     USART_Tx(msright[j]);
  2630  000A4E  0EE0               	movlw	low _msright
  2631  000A50  2419               	addwf	coordinateRefreshX@j^0,w,c
  2632  000A52  6ED9               	movwf	fsr2l,c
  2633  000A54  0E00               	movlw	high _msright
  2634  000A56  201A               	addwfc	(coordinateRefreshX@j+1)^0,w,c
  2635  000A58  6EDA               	movwf	fsr2h,c
  2636  000A5A  50DF               	movf	indf2,w,c
  2637  000A5C  EC4D  F008         	call	_USART_Tx
  2638  000A60                     
  2639                           ;Comandos.c: 83:     }
  2640  000A60  4A19               	infsnz	coordinateRefreshX@j^0,f,c
  2641  000A62  2A1A               	incf	(coordinateRefreshX@j+1)^0,f,c
  2642  000A64                     l1828:
  2643  000A64  0EE0               	movlw	low _msright
  2644  000A66  6E0C               	movwf	strlen@s^0,c
  2645  000A68  0E00               	movlw	high _msright
  2646  000A6A  6E0D               	movwf	(strlen@s+1)^0,c
  2647  000A6C  ECC3  F007         	call	_strlen	;wreg free
  2648  000A70  500C               	movf	?_strlen^0,w,c
  2649  000A72  5C19               	subwf	coordinateRefreshX@j^0,w,c
  2650  000A74  500D               	movf	(?_strlen+1)^0,w,c
  2651  000A76  581A               	subwfb	(coordinateRefreshX@j+1)^0,w,c
  2652  000A78  A0D8               	btfss	status,0,c
  2653  000A7A  EF41  F005         	goto	u1041
  2654  000A7E  EF43  F005         	goto	u1040
  2655  000A82                     u1041:
  2656  000A82  EF27  F005         	goto	l1824
  2657  000A86                     u1040:
  2658  000A86                     
  2659                           ;Comandos.c: 84:         pulseCounter(newX-x);
  2660  000A86  504C               	movf	_x^0,w,c
  2661  000A88  5C15               	subwf	coordinateRefreshX@newX^0,w,c
  2662  000A8A  6E12               	movwf	pulseCounter@pulsoD^0,c
  2663  000A8C  504D               	movf	(_x+1)^0,w,c
  2664  000A8E  5816               	subwfb	(coordinateRefreshX@newX+1)^0,w,c
  2665  000A90  6E13               	movwf	(pulseCounter@pulsoD+1)^0,c
  2666  000A92  EC9D  F005         	call	_pulseCounter	;wreg free
  2667  000A96                     l1832:
  2668                           
  2669                           ;Comandos.c: 86:     x=newX;
  2670  000A96  C015  F04C         	movff	coordinateRefreshX@newX,_x
  2671  000A9A  C016  F04D         	movff	coordinateRefreshX@newX+1,_x+1
  2672  000A9E  0012               	return		;funcret
  2673  000AA0                     __end_of_coordinateRefreshX:
  2674                           	opt callstack 0
  2675                           
  2676 ;; *************** function _pulseCounter *****************
  2677 ;; Defined at:
  2678 ;;		line 38 in file "pwm.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  pulsoD          2   17[COMRAM] int 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2692 ;;      Params:         2       0       0       0       0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2694 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2695 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2696 ;;Total ram usage:        3 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    4
  2699 ;; This function calls:
  2700 ;;		___wmul
  2701 ;;		_clearOneShot
  2702 ;;		_oneShot
  2703 ;; This function is called by:
  2704 ;;		_coordinateRefreshX
  2705 ;;		_coordinateRefreshY
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text10
  2710  000B3A                     __ptext10:
  2711                           	opt callstack 0
  2712  000B3A                     _pulseCounter:
  2713                           	opt callstack 24
  2714  000B3A                     
  2715                           ;pwm.c: 39:     ons=0;
  2716  000B3A  0E00               	movlw	0
  2717  000B3C  6E52               	movwf	_ons^0,c
  2718                           
  2719                           ;pwm.c: 40:     cnt=0;
  2720  000B3E  0E00               	movlw	0
  2721  000B40  6E45               	movwf	(_cnt+1)^0,c
  2722  000B42  0E00               	movlw	0
  2723  000B44  6E44               	movwf	_cnt^0,c
  2724  000B46                     
  2725                           ;pwm.c: 42:     PORTDbits.RD2= 0;
  2726  000B46  9483               	bcf	131,2,c	;volatile
  2727  000B48                     
  2728                           ;pwm.c: 43:     PORTDbits.RD3=0;
  2729  000B48  9683               	bcf	131,3,c	;volatile
  2730                           
  2731                           ;pwm.c: 44:     keepgoing=1;
  2732  000B4A  0E00               	movlw	0
  2733  000B4C  6E49               	movwf	(_keepgoing+1)^0,c
  2734  000B4E  0E01               	movlw	1
  2735  000B50  6E48               	movwf	_keepgoing^0,c
  2736                           
  2737                           ;pwm.c: 45:     while(cnt<pulsoD*5){
  2738  000B52  EFBE  F005         	goto	l1752
  2739  000B56                     l259:
  2740                           
  2741                           ;pwm.c: 47:         if (PORTCbits.CCP1==1){
  2742  000B56  A482               	btfss	130,2,c	;volatile
  2743  000B58  EFB0  F005         	goto	u921
  2744  000B5C  EFB2  F005         	goto	u920
  2745  000B60                     u921:
  2746  000B60  EFB4  F005         	goto	l1748
  2747  000B64                     u920:
  2748  000B64                     
  2749                           ;pwm.c: 48:             oneShot(); }
  2750  000B64  EC32  F008         	call	_oneShot	;wreg free
  2751  000B68                     l1748:
  2752                           
  2753                           ;pwm.c: 49:             if(ons==1){ clearOneShot();}
  2754  000B68  0452               	decf	_ons^0,w,c
  2755  000B6A  A4D8               	btfss	status,2,c
  2756  000B6C  EFBA  F005         	goto	u931
  2757  000B70  EFBC  F005         	goto	u930
  2758  000B74                     u931:
  2759  000B74  EFBE  F005         	goto	l1752
  2760  000B78                     u930:
  2761  000B78  EC63  F008         	call	_clearOneShot	;wreg free
  2762  000B7C                     l1752:
  2763                           
  2764                           ;pwm.c: 45:     while(cnt<pulsoD*5){
  2765  000B7C  C012  F00C         	movff	pulseCounter@pulsoD,___wmul@multiplier
  2766  000B80  C013  F00D         	movff	pulseCounter@pulsoD+1,___wmul@multiplier+1
  2767  000B84  0E00               	movlw	0
  2768  000B86  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  2769  000B88  0E05               	movlw	5
  2770  000B8A  6E0E               	movwf	___wmul@multiplicand^0,c
  2771  000B8C  EC0D  F008         	call	___wmul	;wreg free
  2772  000B90  500C               	movf	?___wmul^0,w,c
  2773  000B92  5C44               	subwf	_cnt^0,w,c
  2774  000B94  5045               	movf	(_cnt+1)^0,w,c
  2775  000B96  0A80               	xorlw	128
  2776  000B98  6E14               	movwf	??_pulseCounter^0,c
  2777  000B9A  500D               	movf	(?___wmul+1)^0,w,c
  2778  000B9C  0A80               	xorlw	128
  2779  000B9E  5814               	subwfb	??_pulseCounter^0,w,c
  2780  000BA0  A0D8               	btfss	status,0,c
  2781  000BA2  EFD5  F005         	goto	u941
  2782  000BA6  EFD7  F005         	goto	u940
  2783  000BAA                     u941:
  2784  000BAA  EFAB  F005         	goto	l259
  2785  000BAE                     u940:
  2786  000BAE                     
  2787                           ;pwm.c: 54:     PORTDbits.RD2= 1;
  2788  000BAE  8483               	bsf	131,2,c	;volatile
  2789                           
  2790                           ;pwm.c: 55:     PORTDbits.RD3= 1;
  2791  000BB0  8683               	bsf	131,3,c	;volatile
  2792  000BB2                     
  2793                           ;pwm.c: 56:     keepgoing=0;
  2794  000BB2  0E00               	movlw	0
  2795  000BB4  6E49               	movwf	(_keepgoing+1)^0,c
  2796  000BB6  0E00               	movlw	0
  2797  000BB8  6E48               	movwf	_keepgoing^0,c
  2798  000BBA  0012               	return		;funcret
  2799  000BBC                     __end_of_pulseCounter:
  2800                           	opt callstack 0
  2801                           
  2802 ;; *************** function _oneShot *****************
  2803 ;; Defined at:
  2804 ;;		line 58 in file "pwm.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    3
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_pulseCounter
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text11
  2833  001064                     __ptext11:
  2834                           	opt callstack 0
  2835  001064                     _oneShot:
  2836                           	opt callstack 24
  2837  001064                     
  2838                           ;pwm.c: 59:     if(ons==1){return;}
  2839  001064  0452               	decf	_ons^0,w,c
  2840  001066  A4D8               	btfss	status,2,c
  2841  001068  EF38  F008         	goto	u881
  2842  00106C  EF3A  F008         	goto	u880
  2843  001070                     u881:
  2844  001070  EF3C  F008         	goto	l1708
  2845  001074                     u880:
  2846  001074  EF40  F008         	goto	l267
  2847  001078                     l1708:
  2848                           
  2849                           ;pwm.c: 60:     cnt++;
  2850  001078  4A44               	infsnz	_cnt^0,f,c
  2851  00107A  2A45               	incf	(_cnt+1)^0,f,c
  2852  00107C                     
  2853                           ;pwm.c: 61:     ons=1;
  2854  00107C  0E01               	movlw	1
  2855  00107E  6E52               	movwf	_ons^0,c
  2856  001080                     l267:
  2857  001080  0012               	return		;funcret
  2858  001082                     __end_of_oneShot:
  2859                           	opt callstack 0
  2860                           
  2861 ;; *************** function _clearOneShot *****************
  2862 ;; Defined at:
  2863 ;;		line 65 in file "pwm.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    3
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_pulseCounter
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text12
  2892  0010C6                     __ptext12:
  2893                           	opt callstack 0
  2894  0010C6                     _clearOneShot:
  2895                           	opt callstack 24
  2896  0010C6                     
  2897                           ;pwm.c: 66:     if(PORTCbits.CCP1==0){ons=0;}
  2898  0010C6  B482               	btfsc	130,2,c	;volatile
  2899  0010C8  EF68  F008         	goto	u891
  2900  0010CC  EF6A  F008         	goto	u890
  2901  0010D0                     u891:
  2902  0010D0  EF6C  F008         	goto	l271
  2903  0010D4                     u890:
  2904  0010D4  0E00               	movlw	0
  2905  0010D6  6E52               	movwf	_ons^0,c
  2906  0010D8                     l271:
  2907  0010D8  0012               	return		;funcret
  2908  0010DA                     __end_of_clearOneShot:
  2909                           	opt callstack 0
  2910                           
  2911 ;; *************** function ___wmul *****************
  2912 ;; Defined at:
  2913 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  multiplier      2   11[COMRAM] unsigned int 
  2916 ;;  multiplicand    2   13[COMRAM] unsigned int 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  product         2   15[COMRAM] unsigned int 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  2   11[COMRAM] unsigned int 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, prodl, prodh
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2928 ;;      Params:         4       0       0       0       0       0       0       0       0
  2929 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2931 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:        6 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    3
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_pulseCounter
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text13
  2943  00101A                     __ptext13:
  2944                           	opt callstack 0
  2945  00101A                     ___wmul:
  2946                           	opt callstack 24
  2947  00101A  500C               	movf	___wmul@multiplier^0,w,c
  2948  00101C  020E               	mulwf	___wmul@multiplicand^0,c
  2949  00101E  CFF3 F010          	movff	prodl,___wmul@product
  2950  001022  CFF4 F011          	movff	prodh,___wmul@product+1
  2951  001026  500C               	movf	___wmul@multiplier^0,w,c
  2952  001028  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  2953  00102A  50F3               	movf	243,w,c
  2954  00102C  2611               	addwf	(___wmul@product+1)^0,f,c
  2955  00102E  500D               	movf	(___wmul@multiplier+1)^0,w,c
  2956  001030  020E               	mulwf	___wmul@multiplicand^0,c
  2957  001032  50F3               	movf	243,w,c
  2958  001034  2611               	addwf	(___wmul@product+1)^0,f,c
  2959  001036  C010  F00C         	movff	___wmul@product,?___wmul
  2960  00103A  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  2961  00103E  0012               	return		;funcret
  2962  001040                     __end_of___wmul:
  2963                           	opt callstack 0
  2964                           
  2965 ;; *************** function _Executing *****************
  2966 ;; Defined at:
  2967 ;;		line 42 in file "Comandos.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  i               2   15[COMRAM] int 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0
  2982 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2984 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2985 ;;Total ram usage:        2 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    4
  2988 ;; This function calls:
  2989 ;;		_USART_Tx
  2990 ;;		_strlen
  2991 ;; This function is called by:
  2992 ;;		_commands
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text14
  2997  000DDC                     __ptext14:
  2998                           	opt callstack 0
  2999  000DDC                     _Executing:
  3000                           	opt callstack 25
  3001  000DDC                     
  3002                           ;Comandos.c: 43:     for(int i=0; i < strlen(msgeje); i++){
  3003  000DDC  0E00               	movlw	0
  3004  000DDE  6E11               	movwf	(Executing@i+1)^0,c
  3005  000DE0  0E00               	movlw	0
  3006  000DE2  6E10               	movwf	Executing@i^0,c
  3007  000DE4  EFFF  F006         	goto	l1794
  3008  000DE8                     l1790:
  3009                           
  3010                           ;Comandos.c: 44:     USART_Tx(msgeje[i]);
  3011  000DE8  0EA8               	movlw	low _msgeje
  3012  000DEA  2410               	addwf	Executing@i^0,w,c
  3013  000DEC  6ED9               	movwf	fsr2l,c
  3014  000DEE  0E00               	movlw	high _msgeje
  3015  000DF0  2011               	addwfc	(Executing@i+1)^0,w,c
  3016  000DF2  6EDA               	movwf	fsr2h,c
  3017  000DF4  50DF               	movf	indf2,w,c
  3018  000DF6  EC4D  F008         	call	_USART_Tx
  3019  000DFA                     
  3020                           ;Comandos.c: 45:     }
  3021  000DFA  4A10               	infsnz	Executing@i^0,f,c
  3022  000DFC  2A11               	incf	(Executing@i+1)^0,f,c
  3023  000DFE                     l1794:
  3024  000DFE  0EA8               	movlw	low _msgeje
  3025  000E00  6E0C               	movwf	strlen@s^0,c
  3026  000E02  0E00               	movlw	high _msgeje
  3027  000E04  6E0D               	movwf	(strlen@s+1)^0,c
  3028  000E06  ECC3  F007         	call	_strlen	;wreg free
  3029  000E0A  500C               	movf	?_strlen^0,w,c
  3030  000E0C  5C10               	subwf	Executing@i^0,w,c
  3031  000E0E  500D               	movf	(?_strlen+1)^0,w,c
  3032  000E10  5811               	subwfb	(Executing@i+1)^0,w,c
  3033  000E12  A0D8               	btfss	status,0,c
  3034  000E14  EF0E  F007         	goto	u991
  3035  000E18  EF10  F007         	goto	u990
  3036  000E1C                     u991:
  3037  000E1C  EFF4  F006         	goto	l1790
  3038  000E20                     u990:
  3039  000E20                     
  3040                           ;Comandos.c: 46:       PORTDbits.RD4=0;
  3041  000E20  9883               	bcf	131,4,c	;volatile
  3042                           
  3043                           ;Comandos.c: 47:     PORTDbits.RD5=0;
  3044  000E22  9A83               	bcf	131,5,c	;volatile
  3045                           
  3046                           ;Comandos.c: 48:     PORTDbits.RD6=1;
  3047  000E24  8C83               	bsf	131,6,c	;volatile
  3048  000E26  0012               	return		;funcret
  3049  000E28                     __end_of_Executing:
  3050                           	opt callstack 0
  3051                           
  3052 ;; *************** function _Error *****************
  3053 ;; Defined at:
  3054 ;;		line 32 in file "Comandos.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  i               2   15[COMRAM] int 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0
  3069 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3072 ;;Total ram usage:        2 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    4
  3075 ;; This function calls:
  3076 ;;		_USART_Tx
  3077 ;;		_strlen
  3078 ;; This function is called by:
  3079 ;;		_commands
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text15
  3084  000E28                     __ptext15:
  3085                           	opt callstack 0
  3086  000E28                     _Error:
  3087                           	opt callstack 25
  3088  000E28                     
  3089                           ;Comandos.c: 33:     for(int i=0; i< strlen(msgwrong); i++){
  3090  000E28  0E00               	movlw	0
  3091  000E2A  6E11               	movwf	(Error@i+1)^0,c
  3092  000E2C  0E00               	movlw	0
  3093  000E2E  6E10               	movwf	Error@i^0,c
  3094  000E30  EF25  F007         	goto	l1786
  3095  000E34                     l1782:
  3096                           
  3097                           ;Comandos.c: 34:     USART_Tx(msgwrong[i]);
  3098  000E34  0E1E               	movlw	low _msgwrong
  3099  000E36  2410               	addwf	Error@i^0,w,c
  3100  000E38  6ED9               	movwf	fsr2l,c
  3101  000E3A  0E01               	movlw	high _msgwrong
  3102  000E3C  2011               	addwfc	(Error@i+1)^0,w,c
  3103  000E3E  6EDA               	movwf	fsr2h,c
  3104  000E40  50DF               	movf	indf2,w,c
  3105  000E42  EC4D  F008         	call	_USART_Tx
  3106  000E46                     
  3107                           ;Comandos.c: 35:     }
  3108  000E46  4A10               	infsnz	Error@i^0,f,c
  3109  000E48  2A11               	incf	(Error@i+1)^0,f,c
  3110  000E4A                     l1786:
  3111  000E4A  0E1E               	movlw	low _msgwrong
  3112  000E4C  6E0C               	movwf	strlen@s^0,c
  3113  000E4E  0E01               	movlw	high _msgwrong
  3114  000E50  6E0D               	movwf	(strlen@s+1)^0,c
  3115  000E52  ECC3  F007         	call	_strlen	;wreg free
  3116  000E56  500C               	movf	?_strlen^0,w,c
  3117  000E58  5C10               	subwf	Error@i^0,w,c
  3118  000E5A  500D               	movf	(?_strlen+1)^0,w,c
  3119  000E5C  5811               	subwfb	(Error@i+1)^0,w,c
  3120  000E5E  A0D8               	btfss	status,0,c
  3121  000E60  EF34  F007         	goto	u981
  3122  000E64  EF36  F007         	goto	u980
  3123  000E68                     u981:
  3124  000E68  EF1A  F007         	goto	l1782
  3125  000E6C                     u980:
  3126  000E6C                     
  3127                           ;Comandos.c: 36:     PORTDbits.RD4=1;
  3128  000E6C  8883               	bsf	131,4,c	;volatile
  3129                           
  3130                           ;Comandos.c: 37:     PORTDbits.RD5=0;
  3131  000E6E  9A83               	bcf	131,5,c	;volatile
  3132                           
  3133                           ;Comandos.c: 38:     PORTDbits.RD6=0;
  3134  000E70  9C83               	bcf	131,6,c	;volatile
  3135  000E72  0012               	return		;funcret
  3136  000E74                     __end_of_Error:
  3137                           	opt callstack 0
  3138                           
  3139 ;; *************** function _Complete *****************
  3140 ;; Defined at:
  3141 ;;		line 52 in file "Comandos.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  i               2   15[COMRAM] int 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3155 ;;      Params:         0       0       0       0       0       0       0       0       0
  3156 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3158 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3159 ;;Total ram usage:        2 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    4
  3162 ;; This function calls:
  3163 ;;		_USART_Tx
  3164 ;;		_strlen
  3165 ;; This function is called by:
  3166 ;;		_commands
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text16
  3172  000E74                     __ptext16:
  3173                           	opt callstack 0
  3174  000E74                     _Complete:
  3175                           	opt callstack 25
  3176  000E74                     
  3177                           ;Comandos.c: 53:     for(int i=0; i < strlen(msgcomp); i++){
  3178  000E74  0E00               	movlw	0
  3179  000E76  6E11               	movwf	(Complete@i+1)^0,c
  3180  000E78  0E00               	movlw	0
  3181  000E7A  6E10               	movwf	Complete@i^0,c
  3182  000E7C  EF4B  F007         	goto	l1802
  3183  000E80                     l1798:
  3184                           
  3185                           ;Comandos.c: 54:     USART_Tx(msgcomp[i]);
  3186  000E80  0E91               	movlw	low _msgcomp
  3187  000E82  2410               	addwf	Complete@i^0,w,c
  3188  000E84  6ED9               	movwf	fsr2l,c
  3189  000E86  0E00               	movlw	high _msgcomp
  3190  000E88  2011               	addwfc	(Complete@i+1)^0,w,c
  3191  000E8A  6EDA               	movwf	fsr2h,c
  3192  000E8C  50DF               	movf	indf2,w,c
  3193  000E8E  EC4D  F008         	call	_USART_Tx
  3194  000E92                     
  3195                           ;Comandos.c: 55:     }
  3196  000E92  4A10               	infsnz	Complete@i^0,f,c
  3197  000E94  2A11               	incf	(Complete@i+1)^0,f,c
  3198  000E96                     l1802:
  3199  000E96  0E91               	movlw	low _msgcomp
  3200  000E98  6E0C               	movwf	strlen@s^0,c
  3201  000E9A  0E00               	movlw	high _msgcomp
  3202  000E9C  6E0D               	movwf	(strlen@s+1)^0,c
  3203  000E9E  ECC3  F007         	call	_strlen	;wreg free
  3204  000EA2  500C               	movf	?_strlen^0,w,c
  3205  000EA4  5C10               	subwf	Complete@i^0,w,c
  3206  000EA6  500D               	movf	(?_strlen+1)^0,w,c
  3207  000EA8  5811               	subwfb	(Complete@i+1)^0,w,c
  3208  000EAA  A0D8               	btfss	status,0,c
  3209  000EAC  EF5A  F007         	goto	u1001
  3210  000EB0  EF5C  F007         	goto	u1000
  3211  000EB4                     u1001:
  3212  000EB4  EF40  F007         	goto	l1798
  3213  000EB8                     u1000:
  3214  000EB8                     
  3215                           ;Comandos.c: 56:       PORTDbits.RD4=0;
  3216  000EB8  9883               	bcf	131,4,c	;volatile
  3217                           
  3218                           ;Comandos.c: 57:     PORTDbits.RD5=1;
  3219  000EBA  8A83               	bsf	131,5,c	;volatile
  3220                           
  3221                           ;Comandos.c: 58:     PORTDbits.RD6=0;
  3222  000EBC  9C83               	bcf	131,6,c	;volatile
  3223  000EBE  0012               	return		;funcret
  3224  000EC0                     __end_of_Complete:
  3225                           	opt callstack 0
  3226                           
  3227 ;; *************** function _strlen *****************
  3228 ;; Defined at:
  3229 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3232 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3233 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3234 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3237 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3238 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3239 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2   11[COMRAM] unsigned int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3249 ;;      Params:         2       0       0       0       0       0       0       0       0
  3250 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3252 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3253 ;;Total ram usage:        4 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    3
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_invalidCoordinate
  3260 ;;		_xLimit
  3261 ;;		_yLimit
  3262 ;;		_Error
  3263 ;;		_Executing
  3264 ;;		_Complete
  3265 ;;		_coordinateRefreshX
  3266 ;;		_coordinateRefreshY
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text17
  3271  000F86                     __ptext17:
  3272                           	opt callstack 0
  3273  000F86                     _strlen:
  3274                           	opt callstack 26
  3275  000F86  C00C  F00E         	movff	strlen@s,strlen@a
  3276  000F8A  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3277  000F8E  EFCB  F007         	goto	l1734
  3278  000F92                     l1732:
  3279  000F92  4A0C               	infsnz	strlen@s^0,f,c
  3280  000F94  2A0D               	incf	(strlen@s+1)^0,f,c
  3281  000F96                     l1734:
  3282  000F96  C00C  FFD9         	movff	strlen@s,fsr2l
  3283  000F9A  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3284  000F9E  50DF               	movf	indf2,w,c
  3285  000FA0  A4D8               	btfss	status,2,c
  3286  000FA2  EFD5  F007         	goto	u911
  3287  000FA6  EFD7  F007         	goto	u910
  3288  000FAA                     u911:
  3289  000FAA  EFC9  F007         	goto	l1732
  3290  000FAE                     u910:
  3291  000FAE  500E               	movf	strlen@a^0,w,c
  3292  000FB0  5C0C               	subwf	strlen@s^0,w,c
  3293  000FB2  6E0C               	movwf	?_strlen^0,c
  3294  000FB4  500F               	movf	(strlen@a+1)^0,w,c
  3295  000FB6  580D               	subwfb	(strlen@s+1)^0,w,c
  3296  000FB8  6E0D               	movwf	(?_strlen+1)^0,c
  3297  000FBA  0012               	return		;funcret
  3298  000FBC                     __end_of_strlen:
  3299                           	opt callstack 0
  3300                           
  3301 ;; *************** function _USART_Tx *****************
  3302 ;; Defined at:
  3303 ;;		line 27 in file "USART.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  data            1    wreg     unsigned char 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  data            1   11[COMRAM] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3317 ;;      Params:         0       0       0       0       0       0       0       0       0
  3318 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3320 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3321 ;;Total ram usage:        1 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    3
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_invalidCoordinate
  3328 ;;		_xLimit
  3329 ;;		_yLimit
  3330 ;;		_Error
  3331 ;;		_Executing
  3332 ;;		_Complete
  3333 ;;		_coordinateRefreshX
  3334 ;;		_coordinateRefreshY
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text18
  3340  00109A                     __ptext18:
  3341                           	opt callstack 0
  3342  00109A                     _USART_Tx:
  3343                           	opt callstack 26
  3344                           
  3345                           ;incstack = 0
  3346                           ;USART_Tx@data stored from wreg
  3347  00109A  6E0C               	movwf	USART_Tx@data^0,c
  3348  00109C                     l392:
  3349  00109C  A89E               	btfss	158,4,c	;volatile
  3350  00109E  EF53  F008         	goto	u901
  3351  0010A2  EF55  F008         	goto	u900
  3352  0010A6                     u901:
  3353  0010A6  EF4E  F008         	goto	l392
  3354  0010AA                     u900:
  3355  0010AA                     
  3356                           ;USART.c: 29:     TXREG= data;
  3357  0010AA  C00C  FFAD         	movff	USART_Tx@data,4013	;volatile
  3358  0010AE  0012               	return		;funcret
  3359  0010B0                     __end_of_USART_Tx:
  3360                           	opt callstack 0
  3361                           
  3362 ;; *************** function _USART_Rx *****************
  3363 ;; Defined at:
  3364 ;;		line 32 in file "USART.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      unsigned char 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    3
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text19
  3393  0010DA                     __ptext19:
  3394                           	opt callstack 0
  3395  0010DA                     _USART_Rx:
  3396                           	opt callstack 27
  3397  0010DA                     l398:
  3398  0010DA  AA9E               	btfss	3998,5,c	;volatile
  3399  0010DC  EF72  F008         	goto	u811
  3400  0010E0  EF74  F008         	goto	u810
  3401  0010E4                     u811:
  3402  0010E4  EF6D  F008         	goto	l398
  3403  0010E8                     u810:
  3404  0010E8                     
  3405                           ;USART.c: 34:     return RCREG;
  3406  0010E8  50AE               	movf	174,w,c	;volatile
  3407  0010EA  0012               	return		;funcret
  3408  0010EC                     __end_of_USART_Rx:
  3409                           	opt callstack 0
  3410                           
  3411 ;; *************** function _USART_Init *****************
  3412 ;; Defined at:
  3413 ;;		line 6 in file "USART.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  BAUD            4   25[COMRAM] long 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3427 ;;      Params:         4       0       0       0       0       0       0       0       0
  3428 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3430 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3431 ;;Total ram usage:        8 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    4
  3434 ;; This function calls:
  3435 ;;		___aldiv
  3436 ;; This function is called by:
  3437 ;;		_main
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text20
  3442  000CB2                     __ptext20:
  3443                           	opt callstack 0
  3444  000CB2                     _USART_Init:
  3445                           	opt callstack 26
  3446  000CB2                     
  3447                           ;USART.c: 8:     TRISCbits.RC6=0;
  3448  000CB2  9C94               	bcf	148,6,c	;volatile
  3449                           
  3450                           ;USART.c: 9:     TRISCbits.RC7=1;
  3451  000CB4  8E94               	bsf	148,7,c	;volatile
  3452  000CB6                     
  3453                           ;USART.c: 11:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3454  000CB6  C01A  F010         	movff	USART_Init@BAUD,___aldiv@divisor
  3455  000CBA  C01B  F011         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
  3456  000CBE  C01C  F012         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
  3457  000CC2  C01D  F013         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
  3458  000CC6  0E00               	movlw	0
  3459  000CC8  6E0C               	movwf	___aldiv@dividend^0,c
  3460  000CCA  0E12               	movlw	18
  3461  000CCC  6E0D               	movwf	(___aldiv@dividend+1)^0,c
  3462  000CCE  0E7A               	movlw	122
  3463  000CD0  6E0E               	movwf	(___aldiv@dividend+2)^0,c
  3464  000CD2  0E00               	movlw	0
  3465  000CD4  6E0F               	movwf	(___aldiv@dividend+3)^0,c
  3466  000CD6  EC67  F003         	call	___aldiv	;wreg free
  3467  000CDA  C00C  F01E         	movff	?___aldiv,_USART_Init$1743
  3468  000CDE  C00D  F01F         	movff	?___aldiv+1,_USART_Init$1743+1
  3469  000CE2  C00E  F020         	movff	?___aldiv+2,_USART_Init$1743+2
  3470  000CE6  C00F  F021         	movff	?___aldiv+3,_USART_Init$1743+3
  3471                           
  3472                           ;USART.c: 11:     SPBRG = (unsigned char)((8000000L/BAUD)/64)-1;
  3473  000CEA  C01E  F00C         	movff	_USART_Init$1743,___aldiv@dividend
  3474  000CEE  C01F  F00D         	movff	_USART_Init$1743+1,___aldiv@dividend+1
  3475  000CF2  C020  F00E         	movff	_USART_Init$1743+2,___aldiv@dividend+2
  3476  000CF6  C021  F00F         	movff	_USART_Init$1743+3,___aldiv@dividend+3
  3477  000CFA  0E40               	movlw	64
  3478  000CFC  6E10               	movwf	___aldiv@divisor^0,c
  3479  000CFE  0E00               	movlw	0
  3480  000D00  6E11               	movwf	(___aldiv@divisor+1)^0,c
  3481  000D02  0E00               	movlw	0
  3482  000D04  6E12               	movwf	(___aldiv@divisor+2)^0,c
  3483  000D06  0E00               	movlw	0
  3484  000D08  6E13               	movwf	(___aldiv@divisor+3)^0,c
  3485  000D0A  EC67  F003         	call	___aldiv	;wreg free
  3486  000D0E  040C               	decf	?___aldiv^0,w,c
  3487  000D10  6EAF               	movwf	175,c	;volatile
  3488  000D12                     
  3489                           ;USART.c: 12:     TXSTAbits.BRGH = 0;
  3490  000D12  94AC               	bcf	172,2,c	;volatile
  3491  000D14                     
  3492                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  3493  000D14  98AC               	bcf	172,4,c	;volatile
  3494  000D16                     
  3495                           ;USART.c: 14:     RCSTAbits.SPEN = 1;
  3496  000D16  8EAB               	bsf	171,7,c	;volatile
  3497  000D18                     
  3498                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  3499  000D18  9CAC               	bcf	172,6,c	;volatile
  3500  000D1A                     
  3501                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  3502  000D1A  8AAC               	bsf	172,5,c	;volatile
  3503  000D1C                     
  3504                           ;USART.c: 21:     RCSTAbits.RC9 = 0;
  3505  000D1C  9CAB               	bcf	171,6,c	;volatile
  3506  000D1E                     
  3507                           ;USART.c: 22:    RCSTAbits.CREN = 1;
  3508  000D1E  88AB               	bsf	171,4,c	;volatile
  3509  000D20  0012               	return		;funcret
  3510  000D22                     __end_of_USART_Init:
  3511                           	opt callstack 0
  3512                           
  3513 ;; *************** function ___aldiv *****************
  3514 ;; Defined at:
  3515 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  dividend        4   11[COMRAM] long 
  3518 ;;  divisor         4   15[COMRAM] long 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  quotient        4   21[COMRAM] long 
  3521 ;;  sign            1   20[COMRAM] unsigned char 
  3522 ;;  counter         1   19[COMRAM] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  4   11[COMRAM] long 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3532 ;;      Params:         8       0       0       0       0       0       0       0       0
  3533 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3535 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3536 ;;Total ram usage:       14 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    3
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_USART_Init
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text21
  3547  0006CE                     __ptext21:
  3548                           	opt callstack 0
  3549  0006CE                     ___aldiv:
  3550                           	opt callstack 26
  3551  0006CE  0E00               	movlw	0
  3552  0006D0  6E15               	movwf	___aldiv@sign^0,c
  3553  0006D2  BE13               	btfsc	(___aldiv@divisor+3)^0,7,c
  3554  0006D4  EF70  F003         	goto	u1090
  3555  0006D8  EF6E  F003         	goto	u1091
  3556  0006DC                     u1091:
  3557  0006DC  EF7A  F003         	goto	l1872
  3558  0006E0                     u1090:
  3559  0006E0  1E13               	comf	(___aldiv@divisor+3)^0,f,c
  3560  0006E2  1E12               	comf	(___aldiv@divisor+2)^0,f,c
  3561  0006E4  1E11               	comf	(___aldiv@divisor+1)^0,f,c
  3562  0006E6  6C10               	negf	___aldiv@divisor^0,c
  3563  0006E8  0E00               	movlw	0
  3564  0006EA  2211               	addwfc	(___aldiv@divisor+1)^0,f,c
  3565  0006EC  2212               	addwfc	(___aldiv@divisor+2)^0,f,c
  3566  0006EE  2213               	addwfc	(___aldiv@divisor+3)^0,f,c
  3567  0006F0  0E01               	movlw	1
  3568  0006F2  6E15               	movwf	___aldiv@sign^0,c
  3569  0006F4                     l1872:
  3570  0006F4  BE0F               	btfsc	(___aldiv@dividend+3)^0,7,c
  3571  0006F6  EF81  F003         	goto	u1100
  3572  0006FA  EF7F  F003         	goto	u1101
  3573  0006FE                     u1101:
  3574  0006FE  EF8B  F003         	goto	l1878
  3575  000702                     u1100:
  3576  000702  1E0F               	comf	(___aldiv@dividend+3)^0,f,c
  3577  000704  1E0E               	comf	(___aldiv@dividend+2)^0,f,c
  3578  000706  1E0D               	comf	(___aldiv@dividend+1)^0,f,c
  3579  000708  6C0C               	negf	___aldiv@dividend^0,c
  3580  00070A  0E00               	movlw	0
  3581  00070C  220D               	addwfc	(___aldiv@dividend+1)^0,f,c
  3582  00070E  220E               	addwfc	(___aldiv@dividend+2)^0,f,c
  3583  000710  220F               	addwfc	(___aldiv@dividend+3)^0,f,c
  3584  000712  0E01               	movlw	1
  3585  000714  1A15               	xorwf	___aldiv@sign^0,f,c
  3586  000716                     l1878:
  3587  000716  0E00               	movlw	0
  3588  000718  6E16               	movwf	___aldiv@quotient^0,c
  3589  00071A  0E00               	movlw	0
  3590  00071C  6E17               	movwf	(___aldiv@quotient+1)^0,c
  3591  00071E  0E00               	movlw	0
  3592  000720  6E18               	movwf	(___aldiv@quotient+2)^0,c
  3593  000722  0E00               	movlw	0
  3594  000724  6E19               	movwf	(___aldiv@quotient+3)^0,c
  3595  000726  5010               	movf	___aldiv@divisor^0,w,c
  3596  000728  1011               	iorwf	(___aldiv@divisor+1)^0,w,c
  3597  00072A  1012               	iorwf	(___aldiv@divisor+2)^0,w,c
  3598  00072C  1013               	iorwf	(___aldiv@divisor+3)^0,w,c
  3599  00072E  B4D8               	btfsc	status,2,c
  3600  000730  EF9C  F003         	goto	u1111
  3601  000734  EF9E  F003         	goto	u1110
  3602  000738                     u1111:
  3603  000738  EFD4  F003         	goto	l1900
  3604  00073C                     u1110:
  3605  00073C  0E01               	movlw	1
  3606  00073E  6E14               	movwf	___aldiv@counter^0,c
  3607  000740  EFA8  F003         	goto	l1886
  3608  000744                     l1884:
  3609  000744  90D8               	bcf	status,0,c
  3610  000746  3610               	rlcf	___aldiv@divisor^0,f,c
  3611  000748  3611               	rlcf	(___aldiv@divisor+1)^0,f,c
  3612  00074A  3612               	rlcf	(___aldiv@divisor+2)^0,f,c
  3613  00074C  3613               	rlcf	(___aldiv@divisor+3)^0,f,c
  3614  00074E  2A14               	incf	___aldiv@counter^0,f,c
  3615  000750                     l1886:
  3616  000750  AE13               	btfss	(___aldiv@divisor+3)^0,7,c
  3617  000752  EFAD  F003         	goto	u1121
  3618  000756  EFAF  F003         	goto	u1120
  3619  00075A                     u1121:
  3620  00075A  EFA2  F003         	goto	l1884
  3621  00075E                     u1120:
  3622  00075E                     l1888:
  3623  00075E  90D8               	bcf	status,0,c
  3624  000760  3616               	rlcf	___aldiv@quotient^0,f,c
  3625  000762  3617               	rlcf	(___aldiv@quotient+1)^0,f,c
  3626  000764  3618               	rlcf	(___aldiv@quotient+2)^0,f,c
  3627  000766  3619               	rlcf	(___aldiv@quotient+3)^0,f,c
  3628  000768  5010               	movf	___aldiv@divisor^0,w,c
  3629  00076A  5C0C               	subwf	___aldiv@dividend^0,w,c
  3630  00076C  5011               	movf	(___aldiv@divisor+1)^0,w,c
  3631  00076E  580D               	subwfb	(___aldiv@dividend+1)^0,w,c
  3632  000770  5012               	movf	(___aldiv@divisor+2)^0,w,c
  3633  000772  580E               	subwfb	(___aldiv@dividend+2)^0,w,c
  3634  000774  5013               	movf	(___aldiv@divisor+3)^0,w,c
  3635  000776  580F               	subwfb	(___aldiv@dividend+3)^0,w,c
  3636  000778  A0D8               	btfss	status,0,c
  3637  00077A  EFC1  F003         	goto	u1131
  3638  00077E  EFC3  F003         	goto	u1130
  3639  000782                     u1131:
  3640  000782  EFCC  F003         	goto	l1896
  3641  000786                     u1130:
  3642  000786  5010               	movf	___aldiv@divisor^0,w,c
  3643  000788  5E0C               	subwf	___aldiv@dividend^0,f,c
  3644  00078A  5011               	movf	(___aldiv@divisor+1)^0,w,c
  3645  00078C  5A0D               	subwfb	(___aldiv@dividend+1)^0,f,c
  3646  00078E  5012               	movf	(___aldiv@divisor+2)^0,w,c
  3647  000790  5A0E               	subwfb	(___aldiv@dividend+2)^0,f,c
  3648  000792  5013               	movf	(___aldiv@divisor+3)^0,w,c
  3649  000794  5A0F               	subwfb	(___aldiv@dividend+3)^0,f,c
  3650  000796  8016               	bsf	___aldiv@quotient^0,0,c
  3651  000798                     l1896:
  3652  000798  90D8               	bcf	status,0,c
  3653  00079A  3213               	rrcf	(___aldiv@divisor+3)^0,f,c
  3654  00079C  3212               	rrcf	(___aldiv@divisor+2)^0,f,c
  3655  00079E  3211               	rrcf	(___aldiv@divisor+1)^0,f,c
  3656  0007A0  3210               	rrcf	___aldiv@divisor^0,f,c
  3657  0007A2  2E14               	decfsz	___aldiv@counter^0,f,c
  3658  0007A4  EFAF  F003         	goto	l1888
  3659  0007A8                     l1900:
  3660  0007A8  5015               	movf	___aldiv@sign^0,w,c
  3661  0007AA  B4D8               	btfsc	status,2,c
  3662  0007AC  EFDA  F003         	goto	u1141
  3663  0007B0  EFDC  F003         	goto	u1140
  3664  0007B4                     u1141:
  3665  0007B4  EFE4  F003         	goto	l1904
  3666  0007B8                     u1140:
  3667  0007B8  1E19               	comf	(___aldiv@quotient+3)^0,f,c
  3668  0007BA  1E18               	comf	(___aldiv@quotient+2)^0,f,c
  3669  0007BC  1E17               	comf	(___aldiv@quotient+1)^0,f,c
  3670  0007BE  6C16               	negf	___aldiv@quotient^0,c
  3671  0007C0  0E00               	movlw	0
  3672  0007C2  2217               	addwfc	(___aldiv@quotient+1)^0,f,c
  3673  0007C4  2218               	addwfc	(___aldiv@quotient+2)^0,f,c
  3674  0007C6  2219               	addwfc	(___aldiv@quotient+3)^0,f,c
  3675  0007C8                     l1904:
  3676  0007C8  C016  F00C         	movff	___aldiv@quotient,?___aldiv
  3677  0007CC  C017  F00D         	movff	___aldiv@quotient+1,?___aldiv+1
  3678  0007D0  C018  F00E         	movff	___aldiv@quotient+2,?___aldiv+2
  3679  0007D4  C019  F00F         	movff	___aldiv@quotient+3,?___aldiv+3
  3680  0007D8  0012               	return		;funcret
  3681  0007DA                     __end_of___aldiv:
  3682                           	opt callstack 0
  3683                           
  3684 ;; *************** function _INT_isr *****************
  3685 ;; Defined at:
  3686 ;;		line 21 in file "MAINSPARC.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  i               2    9[COMRAM] int 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3700 ;;      Params:         0       0       0       0       0       0       0       0       0
  3701 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3702 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3703 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3704 ;;Total ram usage:        5 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		_emergencyButton
  3709 ;;		i2_USART_Tx
  3710 ;;		i2_strlen
  3711 ;; This function is called by:
  3712 ;;		Interrupt level 2
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	intcode
  3717  000008                     __pintcode:
  3718                           	opt callstack 0
  3719  000008                     _INT_isr:
  3720                           	opt callstack 24
  3721                           
  3722                           ;incstack = 0
  3723  000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3724  00000A  EDDE  F005         	call	int_func,f	;refresh shadow registers
  3725                           
  3726                           	psect	intcode_body
  3727  000BBC                     __pintcode_body:
  3728                           	opt callstack 24
  3729  000BBC                     int_func:
  3730                           	opt callstack 24
  3731  000BBC  0006               	pop		; remove dummy address from shadow register refresh
  3732  000BBE  CFD9 F008          	movff	fsr2l,??_INT_isr+1
  3733  000BC2  CFDA F009          	movff	fsr2h,??_INT_isr+2
  3734  000BC6                     
  3735                           ;MAINSPARC.c: 22: _delay((unsigned long)((10)*(8000000L/4000.0)));
  3736  000BC6  0E1A               	movlw	26
  3737  000BC8  6E07               	movwf	??_INT_isr^0,c
  3738  000BCA  0EF8               	movlw	248
  3739  000BCC                     i2u175_47:
  3740  000BCC  2EE8               	decfsz	wreg,f,c
  3741  000BCE  D7FE               	bra	i2u175_47
  3742  000BD0  2E07               	decfsz	??_INT_isr^0,f,c
  3743  000BD2  D7FC               	bra	i2u175_47
  3744  000BD4  D000               	nop2	
  3745  000BD6                     
  3746                           ;MAINSPARC.c: 25:     if(INTCON3bits.INT2IF==1){
  3747  000BD6  A2F0               	btfss	240,1,c	;volatile
  3748  000BD8  EFF0  F005         	goto	i2u168_41
  3749  000BDC  EFF2  F005         	goto	i2u168_40
  3750  000BE0                     i2u168_41:
  3751  000BE0  EFF5  F005         	goto	i2l2178
  3752  000BE4                     i2u168_40:
  3753  000BE4                     
  3754                           ;MAINSPARC.c: 26:        emergencyButton();
  3755  000BE4  EC91  F006         	call	_emergencyButton	;wreg free
  3756  000BE8                     
  3757                           ;MAINSPARC.c: 28:        INTCON3bits.INT2IF=0;
  3758  000BE8  92F0               	bcf	240,1,c	;volatile
  3759  000BEA                     i2l2178:
  3760                           
  3761                           ;MAINSPARC.c: 30: INTCON3bits.INT2IF=0;
  3762  000BEA  92F0               	bcf	240,1,c	;volatile
  3763  000BEC                     
  3764                           ;MAINSPARC.c: 31: for(int i=0; i < strlen(check); i++){
  3765  000BEC  0E00               	movlw	0
  3766  000BEE  6E0B               	movwf	(INT_isr@i+1)^0,c
  3767  000BF0  0E00               	movlw	0
  3768  000BF2  6E0A               	movwf	INT_isr@i^0,c
  3769  000BF4  EF07  F006         	goto	i2l2186
  3770  000BF8                     i2l2182:
  3771                           
  3772                           ;MAINSPARC.c: 32:     USART_Tx(check[i]);
  3773  000BF8  0E7A               	movlw	low _check
  3774  000BFA  240A               	addwf	INT_isr@i^0,w,c
  3775  000BFC  6ED9               	movwf	fsr2l,c
  3776  000BFE  0E00               	movlw	high _check
  3777  000C00  200B               	addwfc	(INT_isr@i+1)^0,w,c
  3778  000C02  6EDA               	movwf	fsr2h,c
  3779  000C04  50DF               	movf	indf2,w,c
  3780  000C06  EC58  F008         	call	i2_USART_Tx
  3781  000C0A                     
  3782                           ;MAINSPARC.c: 33:     }
  3783  000C0A  4A0A               	infsnz	INT_isr@i^0,f,c
  3784  000C0C  2A0B               	incf	(INT_isr@i+1)^0,f,c
  3785  000C0E                     i2l2186:
  3786  000C0E  0E7A               	movlw	low _check
  3787  000C10  6E01               	movwf	i2strlen@s^0,c
  3788  000C12  0E00               	movlw	high _check
  3789  000C14  6E02               	movwf	(i2strlen@s+1)^0,c
  3790  000C16  ECDE  F007         	call	i2_strlen	;wreg free
  3791  000C1A  5001               	movf	?i2_strlen^0,w,c
  3792  000C1C  5C0A               	subwf	INT_isr@i^0,w,c
  3793  000C1E  5002               	movf	(?i2_strlen+1)^0,w,c
  3794  000C20  580B               	subwfb	(INT_isr@i+1)^0,w,c
  3795  000C22  A0D8               	btfss	status,0,c
  3796  000C24  EF16  F006         	goto	i2u169_41
  3797  000C28  EF18  F006         	goto	i2u169_40
  3798  000C2C                     i2u169_41:
  3799  000C2C  EFFC  F005         	goto	i2l2182
  3800  000C30                     i2u169_40:
  3801  000C30  C009  FFDA         	movff	??_INT_isr+2,fsr2h
  3802  000C34  C008  FFD9         	movff	??_INT_isr+1,fsr2l
  3803  000C38  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3804  000C3A  0011               	retfie		f
  3805  000C3C                     __end_of_INT_isr:
  3806                           	opt callstack 0
  3807                           
  3808 ;; *************** function _emergencyButton *****************
  3809 ;; Defined at:
  3810 ;;		line 26 in file "Interruptions.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  i               2    4[COMRAM] int 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3827 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        2 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    1
  3831 ;; This function calls:
  3832 ;;		i2_USART_Tx
  3833 ;;		i2_strlen
  3834 ;; This function is called by:
  3835 ;;		_INT_isr
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text23
  3840  000D22                     __ptext23:
  3841                           	opt callstack 0
  3842  000D22                     _emergencyButton:
  3843                           	opt callstack 24
  3844  000D22                     
  3845                           ;Interruptions.c: 27:     for(int i=0; i < strlen(emergency); i++){
  3846  000D22  0E00               	movlw	0
  3847  000D24  6E06               	movwf	(emergencyButton@i+1)^0,c
  3848  000D26  0E00               	movlw	0
  3849  000D28  6E05               	movwf	emergencyButton@i^0,c
  3850  000D2A  EFA2  F006         	goto	i2l2146
  3851  000D2E                     i2l2142:
  3852                           
  3853                           ;Interruptions.c: 28:     USART_Tx(emergency[i]);
  3854  000D2E  0E60               	movlw	low _emergency
  3855  000D30  2405               	addwf	emergencyButton@i^0,w,c
  3856  000D32  6ED9               	movwf	fsr2l,c
  3857  000D34  0E00               	movlw	high _emergency
  3858  000D36  2006               	addwfc	(emergencyButton@i+1)^0,w,c
  3859  000D38  6EDA               	movwf	fsr2h,c
  3860  000D3A  50DF               	movf	indf2,w,c
  3861  000D3C  EC58  F008         	call	i2_USART_Tx
  3862  000D40                     
  3863                           ;Interruptions.c: 29:     }
  3864  000D40  4A05               	infsnz	emergencyButton@i^0,f,c
  3865  000D42  2A06               	incf	(emergencyButton@i+1)^0,f,c
  3866  000D44                     i2l2146:
  3867  000D44  0E60               	movlw	low _emergency
  3868  000D46  6E01               	movwf	i2strlen@s^0,c
  3869  000D48  0E00               	movlw	high _emergency
  3870  000D4A  6E02               	movwf	(i2strlen@s+1)^0,c
  3871  000D4C  ECDE  F007         	call	i2_strlen	;wreg free
  3872  000D50  5001               	movf	?i2_strlen^0,w,c
  3873  000D52  5C05               	subwf	emergencyButton@i^0,w,c
  3874  000D54  5002               	movf	(?i2_strlen+1)^0,w,c
  3875  000D56  5806               	subwfb	(emergencyButton@i+1)^0,w,c
  3876  000D58  A0D8               	btfss	status,0,c
  3877  000D5A  EFB1  F006         	goto	i2u165_41
  3878  000D5E  EFB3  F006         	goto	i2u165_40
  3879  000D62                     i2u165_41:
  3880  000D62  EF97  F006         	goto	i2l2142
  3881  000D66                     i2u165_40:
  3882  000D66                     
  3883                           ;Interruptions.c: 30:     PORTDbits.RD2= 1;
  3884  000D66  8483               	bsf	131,2,c	;volatile
  3885                           
  3886                           ;Interruptions.c: 31:     PORTDbits.RD3= 1;
  3887  000D68  8683               	bsf	131,3,c	;volatile
  3888  000D6A                     i2l436:
  3889                           
  3890                           ;Interruptions.c: 32:     while(PORTBbits.RB2==1){
  3891  000D6A  B481               	btfsc	129,2,c	;volatile
  3892  000D6C  EFBA  F006         	goto	i2u166_41
  3893  000D70  EFBC  F006         	goto	i2u166_40
  3894  000D74                     i2u166_41:
  3895  000D74  EFB5  F006         	goto	i2l436
  3896  000D78                     i2u166_40:
  3897  000D78                     
  3898                           ;Interruptions.c: 34:     }if(keepgoing==1){
  3899  000D78  0448               	decf	_keepgoing^0,w,c
  3900  000D7A  1049               	iorwf	(_keepgoing+1)^0,w,c
  3901  000D7C  A4D8               	btfss	status,2,c
  3902  000D7E  EFC3  F006         	goto	i2u167_41
  3903  000D82  EFC5  F006         	goto	i2u167_40
  3904  000D86                     i2u167_41:
  3905  000D86  EFC7  F006         	goto	i2l440
  3906  000D8A                     i2u167_40:
  3907  000D8A                     
  3908                           ;Interruptions.c: 35:     PORTDbits.RD2= 0;
  3909  000D8A  9483               	bcf	131,2,c	;volatile
  3910                           
  3911                           ;Interruptions.c: 36:     PORTDbits.RD3= 0;}
  3912  000D8C  9683               	bcf	131,3,c	;volatile
  3913  000D8E                     i2l440:
  3914  000D8E  0012               	return		;funcret
  3915  000D90                     __end_of_emergencyButton:
  3916                           	opt callstack 0
  3917                           
  3918 ;; *************** function i2_strlen *****************
  3919 ;; Defined at:
  3920 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3923 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3924 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3925 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  3928 ;;		 -> emergency(26), check(23), msup(11), msdown(13), 
  3929 ;;		 -> msright(13), msleft(12), msgcomp(23), msgeje(22), 
  3930 ;;		 -> msgwrong(27), yl(17), xl(17), CE(30), 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2    0[COMRAM] unsigned int 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3940 ;;      Params:         2       0       0       0       0       0       0       0       0
  3941 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3943 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3944 ;;Total ram usage:        4 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_INT_isr
  3950 ;;		_emergencyButton
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text24
  3955  000FBC                     __ptext24:
  3956                           	opt callstack 0
  3957  000FBC                     i2_strlen:
  3958                           	opt callstack 25
  3959  000FBC  C001  F003         	movff	i2strlen@s,i2strlen@a
  3960  000FC0  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  3961  000FC4  EFE6  F007         	goto	i2l1916
  3962  000FC8                     i2l1914:
  3963  000FC8  4A01               	infsnz	i2strlen@s^0,f,c
  3964  000FCA  2A02               	incf	(i2strlen@s+1)^0,f,c
  3965  000FCC                     i2l1916:
  3966  000FCC  C001  FFD9         	movff	i2strlen@s,fsr2l
  3967  000FD0  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  3968  000FD4  50DF               	movf	indf2,w,c
  3969  000FD6  A4D8               	btfss	status,2,c
  3970  000FD8  EFF0  F007         	goto	i2u116_41
  3971  000FDC  EFF2  F007         	goto	i2u116_40
  3972  000FE0                     i2u116_41:
  3973  000FE0  EFE4  F007         	goto	i2l1914
  3974  000FE4                     i2u116_40:
  3975  000FE4  5003               	movf	i2strlen@a^0,w,c
  3976  000FE6  5C01               	subwf	i2strlen@s^0,w,c
  3977  000FE8  6E01               	movwf	?i2_strlen^0,c
  3978  000FEA  5004               	movf	(i2strlen@a+1)^0,w,c
  3979  000FEC  5802               	subwfb	(i2strlen@s+1)^0,w,c
  3980  000FEE  6E02               	movwf	(?i2_strlen+1)^0,c
  3981  000FF0  0012               	return		;funcret
  3982  000FF2                     __end_ofi2_strlen:
  3983                           	opt callstack 0
  3984                           
  3985 ;; *************** function i2_USART_Tx *****************
  3986 ;; Defined at:
  3987 ;;		line 27 in file "USART.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  data            1    wreg     unsigned char 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  data            1    0[COMRAM] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0
  4002 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4004 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4005 ;;Total ram usage:        1 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_INT_isr
  4011 ;;		_emergencyButton
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text25
  4016  0010B0                     __ptext25:
  4017                           	opt callstack 0
  4018  0010B0                     i2_USART_Tx:
  4019                           	opt callstack 25
  4020                           
  4021                           ;incstack = 0
  4022                           ;i2USART_Tx@data stored from wreg
  4023  0010B0  6E01               	movwf	i2USART_Tx@data^0,c
  4024  0010B2                     i2l392:
  4025  0010B2  A89E               	btfss	158,4,c	;volatile
  4026  0010B4  EF5E  F008         	goto	i2u115_41
  4027  0010B8  EF60  F008         	goto	i2u115_40
  4028  0010BC                     i2u115_41:
  4029  0010BC  EF59  F008         	goto	i2l392
  4030  0010C0                     i2u115_40:
  4031  0010C0                     
  4032                           ;USART.c: 29:     TXREG= data;
  4033  0010C0  C001  FFAD         	movff	i2USART_Tx@data,4013	;volatile
  4034  0010C4  0012               	return		;funcret
  4035  0010C6                     __end_ofi2_USART_Tx:
  4036                           	opt callstack 0
  4037  0000                     
  4038                           	psect	rparam
  4039  0000                     
  4040                           	psect	temp
  4041  000053                     btemp:
  4042                           	opt callstack 0
  4043  000053                     	ds	1
  4044  0000                     int$flags	set	btemp
  4045  0000                     wtemp8	set	btemp+1
  4046  0000                     ttemp5	set	btemp+1
  4047  0000                     ttemp6	set	btemp+4
  4048  0000                     ttemp7	set	btemp+8
  4049                           tosu	equ	0xFFF
  4050                           tosh	equ	0xFFE
  4051                           tosl	equ	0xFFD
  4052                           stkptr	equ	0xFFC
  4053                           pclatu	equ	0xFFB
  4054                           pclath	equ	0xFFA
  4055                           pcl	equ	0xFF9
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           indf0	equ	0xFEF
  4063                           postinc0	equ	0xFEE
  4064                           postdec0	equ	0xFED
  4065                           preinc0	equ	0xFEC
  4066                           plusw0	equ	0xFEB
  4067                           fsr0h	equ	0xFEA
  4068                           fsr0l	equ	0xFE9
  4069                           wreg	equ	0xFE8
  4070                           indf1	equ	0xFE7
  4071                           postinc1	equ	0xFE6
  4072                           postdec1	equ	0xFE5
  4073                           preinc1	equ	0xFE4
  4074                           plusw1	equ	0xFE3
  4075                           fsr1h	equ	0xFE2
  4076                           fsr1l	equ	0xFE1
  4077                           bsr	equ	0xFE0
  4078                           indf2	equ	0xFDF
  4079                           postinc2	equ	0xFDE
  4080                           postdec2	equ	0xFDD
  4081                           preinc2	equ	0xFDC
  4082                           plusw2	equ	0xFDB
  4083                           fsr2h	equ	0xFDA
  4084                           fsr2l	equ	0xFD9
  4085                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        234
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      82
    BANK0           160      0     154
    BANK1           256      0      57
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 30
		 -> emergency(BANK0[26]), check(BANK0[23]), msup(COMRAM[11]), msdown(BANK0[13]), 
		 -> msright(BANK0[13]), msleft(COMRAM[12]), msgcomp(BANK0[23]), msgeje(BANK0[22]), 
		 -> msgwrong(BANK1[27]), yl(BANK0[17]), xl(BANK0[17]), CE(BANK1[30]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 30
		 -> emergency(BANK0[26]), check(BANK0[23]), msup(COMRAM[11]), msdown(BANK0[13]), 
		 -> msright(BANK0[13]), msleft(COMRAM[12]), msgcomp(BANK0[23]), msgeje(BANK0[22]), 
		 -> msgwrong(BANK1[27]), yl(BANK0[17]), xl(BANK0[17]), CE(BANK1[30]), 

    commands@comando	PTR unsigned char  size(2) Largest target is 8
		 -> main@instruccion(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _main->_commands
    _commands->_coordinateRefreshX
    _commands->_coordinateRefreshY
    _yLimit->_strlen
    _xLimit->_strlen
    _invalidCoordinate->_strlen
    _coordinateRefreshY->_pulseCounter
    _coordinateRefreshX->_pulseCounter
    _pulseCounter->___wmul
    _Executing->_strlen
    _Error->_strlen
    _Complete->_strlen
    _USART_Init->___aldiv

Critical Paths under _INT_isr in COMRAM

    _INT_isr->_emergencyButton
    _emergencyButton->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   15160
                                             33 COMRAM    11    11      0
                           _Complete
                         _USART_Init
                           _USART_Rx
                           _USART_Tx
                           _commands
                           _gpioInit
                  _interruptionsInit
                           _pwm_init
                             _xLimit
                             _yLimit
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptionsInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gpioInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _commands                                             7     5      2   11102
                                             26 COMRAM     7     5      2
                           _Complete
                              _Error
                          _Executing
                 _coordinateRefreshX
                 _coordinateRefreshY
                  _invalidCoordinate
                             _xLimit
                             _yLimit
 ---------------------------------------------------------------------------------
 (1) _yLimit                                               2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _xLimit                                               2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _invalidCoordinate                                    2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _coordinateRefreshY                                   6     4      2    1887
                                             20 COMRAM     6     4      2
                           _USART_Tx
                       _pulseCounter
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _coordinateRefreshX                                   6     4      2    1887
                                             20 COMRAM     6     4      2
                           _USART_Tx
                       _pulseCounter
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _pulseCounter                                         3     1      2     637
                                             17 COMRAM     3     1      2
                             ___wmul
                       _clearOneShot
                            _oneShot
 ---------------------------------------------------------------------------------
 (4) _oneShot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _clearOneShot                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Executing                                            2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Error                                                2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Complete                                             2     2      0    1018
                                             15 COMRAM     2     2      0
                           _USART_Tx
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     950
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             25 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                             11 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT_isr                                              5     5      0     420
                                              6 COMRAM     5     5      0
                    _emergencyButton
                         i2_USART_Tx
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) _emergencyButton                                      2     2      0     210
                                              4 COMRAM     2     2      0
                         i2_USART_Tx
                           i2_strlen
 ---------------------------------------------------------------------------------
 (6) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) i2_USART_Tx                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Complete
     _USART_Tx
     _strlen
   _USART_Init
     ___aldiv
   _USART_Rx
   _USART_Tx
   _commands
     _Complete
       _USART_Tx
       _strlen
     _Error
       _USART_Tx
       _strlen
     _Executing
       _USART_Tx
       _strlen
     _coordinateRefreshX
       _USART_Tx
       _pulseCounter
         ___wmul
         _clearOneShot
         _oneShot
       _strlen
     _coordinateRefreshY
       _USART_Tx
       _pulseCounter
         ___wmul
         _clearOneShot
         _oneShot
       _strlen
     _invalidCoordinate
       _USART_Tx
       _strlen
     _xLimit
       _USART_Tx
       _strlen
     _yLimit
       _USART_Tx
       _strlen
   _gpioInit
   _interruptionsInit
   _pwm_init
   _xLimit
     _USART_Tx
     _strlen
   _yLimit
     _USART_Tx
     _strlen

 _INT_isr (ROOT)
   _emergencyButton
     i2_USART_Tx
     i2_strlen
   i2_USART_Tx
   i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      39       7       22.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     125      20        0.0%
DATA                 0      0     125       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 09 19:16:10 2019

                          _x 004C                            _y 004A                 _pulseCounter 0B3A  
                         _CE 0100                           l60 0F04                           l54 0F4A  
                         l71 0E20                           l47 0DD4                           l72 0E26  
                         l48 0DDA                           l65 0E6C                           l66 0E72  
                         l77 0EB8                           l78 0EBE                           l89 0A9E  
                         _xl 00CF                           _yl 00BE          ___wmul@multiplicand 000E  
                        l100 09B8                          l130 0394                          l132 03A2  
                        l212 1018                          l127 0376                          l401 10EA  
                        l129 0384                          l262 0BAE                          l430 10FA  
                        l271 10D8                          l263 0BBA                          l255 1062  
                        l360 0830                          l522 07D8                          l362 083E  
                        l443 103E                          l267 1080                          l259 0B56  
                        l189 06CC                          l357 0812                          l367 08BE  
                        l359 0820                          l392 109C                          l395 10AE  
                        l389 0D20                          l398 10DA                          _PR2 000FCB  
                        u810 10E8                          u811 10E4                          u900 10AA  
           ?_emergencyButton 0001                          u901 10A6                          u910 0FAE  
                        u911 0FAA                          u920 0B64                          u921 0B60  
                        u930 0B78                          u931 0B74                          u940 0BAE  
                        u941 0BAA                          u950 0DD4                          u951 0DD0  
                        u880 1074                          u960 0F4A                          u881 1070  
                        u961 0F46                          u890 10D4                          u970 0F04  
                        u891 10D0                          u971 0F00                          u980 0E6C  
                        u981 0E68                          u990 0E20                          u991 0E1C  
                        _cnt 0044                          _ons 0052                          wreg 000FE8  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         l1120 0FBA  
                       l2000 0388                         l2010 03A6                         l2002 038C  
                       l2012 03AA                         l2004 038E                         l2110 062C  
                       l2014 03B2                         l2006 0390                         l2030 03CA  
                       l2120 06C2                         l2112 064A                         l2104 05D6  
                       l2040 045C                         l2032 03E4                         l2008 0392  
                       l2016 03C2                         l2200 0800                         l2122 06C6  
                       l2114 0668                         l2106 05F0                         l2042 047A  
                       l2034 0402                         l2210 080A                         l2202 0802  
                       l2116 0686                         l2108 060E                         l2044 0498  
                       l2036 0420                         l2220 0828                         l2212 080C  
                       l2204 0804                         l2118 06A4                         l2070 051A  
                       l2046 04B6                         l2038 043E                         l2230 0846  
                       l2222 082A                         l2214 080E                         l2206 0806  
                       l2160 0D16                         l2152 0CB2                         l2080 05B0  
                       l2072 0538                         l2048 04BA                         l2064 04C4  
                       l2232 084E                         l2224 082C                         l2216 0810  
                       l2208 0808                         l2162 0D18                         l2154 0CB6  
                       l2082 05B4                         l2074 0556                         l2066 04DE  
                       l2242 0860                         l2234 085A                         l2226 082E  
                       l2218 0824                         l2164 0D1A                         l2156 0D12  
                       l2084 05B6                         l2076 0574                         l2068 04FC  
                       l1604 10EC                         l2260 08C0                         l2244 0872  
                       l2236 085C                         l2228 0842                         l2166 0D1C  
                       l2158 0D14                         l1606 10DA                         l1710 107C  
                       l2086 05CC                         l2078 0592                         l2254 088C  
                       l2246 0874                         l2190 07DE                         l2168 0D1E  
                       l1608 10E8                         l1800 0E92                         l1720 101A  
                       l1704 1064                         l2088 05CE                         l1560 1012  
                       l2256 089E                         l2248 0884                         l2192 07F2  
                       l1730 0F86                         l1802 0E96                         l1722 1036  
                       l1714 10C6                         l1810 09E0                         l1562 1014  
                       l1570 104E                         l2258 08A2                         l2194 07F6  
                       l1900 07A8                         l1732 0F92                         l1716 10D4  
                       l1708 1078                         l1740 0B3A                         l1820 0A3E  
                       l1812 09F2                         l1804 09BA                         l1564 1016  
                       l1572 1060                         l2196 07FA                         l2188 07DA  
                       l1902 07B8                         l1726 109C                         l1734 0F96  
                       l1750 0B78                         l1742 0B46                         l1830 0A86  
                       l1822 0A42                         l1814 09F6                         l1806 09D0  
                       l1558 0FF2                         l1566 1040                         l2198 07FE  
                       l1904 07C8                         l1728 10AA                         l1736 0FAE  
                       l1752 0B7C                         l1744 0B48                         l1824 0A4E  
                       l1832 0A96                         l1816 0A18                         l1808 09D4  
                       l1840 08FA                         l1760 0DAE                         l1568 104C  
                       l1754 0BB2                         l1746 0B64                         l1826 0A60  
                       l1818 0A28                         l1850 0958                         l1842 090C  
                       l1834 08D4                         l1762 0DB2                         l1770 0F28  
                       l1930 0080                         l1922 0012                         l1780 0E28  
                       l1748 0B68                         l1828 0A64                         l1860 09A0  
                       l1852 095C                         l1844 0910                         l1836 08EA  
                       l1756 0D90                         l1764 0F06                         l1772 0EC0  
                       l1940 010E                         l1932 009C                         l1924 002C  
                       l1870 06F0                         l1782 0E34                         l1790 0DE8  
                       l1854 0968                         l1862 09B0                         l1846 0932  
                       l1838 08EE                         l1758 0D9C                         l1766 0F12  
                       l1774 0ECC                         l1950 019A                         l1942 012A  
                       l1934 00B8                         l1926 0048                         l1880 0726  
                       l1872 06F4                         l1864 06CE                         l1784 0E46  
                       l1792 0DFA                         l1856 097A                         l1848 0942  
                       l1768 0F24                         l1776 0EDE                         l1952 019E  
                       l1944 0146                         l1936 00D4                         l1928 0064  
                       l1960 0276                         l1890 0768                         l1882 073C  
                       l1874 0702                         l1866 06D2                         l1786 0E4A  
                       l1794 0DFE                         l1858 097E                         l1778 0EE2  
                       l1954 01FA                         l1946 0162                         l1938 00F2  
                       l1892 0786                         l1884 0744                         l1876 0712  
                       l1868 06E0                         l1796 0E74                         l1788 0DDC  
                       l1980 02D4                         l1956 0256                         l1948 017E  
                       l1894 0796                         l1886 0750                         l1878 0716  
                       l1798 0E80                         l1990 036A                         l1982 02F2  
                       l1958 0262                         l1974 027E                         l1896 0798  
                       l1888 075E                         l1992 036E                         l1984 0310  
                       l1976 0298                         l1898 07A2                         l1994 0370  
                       l1986 032E                         l1978 02B6                         l1996 0372  
                       l1988 034C                         l1998 0374                         u1000 0EB8  
                       u1001 0EB4                         u1010 09D0                         u1011 09CC  
                       u1100 0702                         u1020 0A18                         u1101 06FE  
                       u1021 0A14                         u1110 073C                         u1030 0A3E  
                       u1111 0738                         u1031 0A3A                         u1120 075E  
                       u1040 0A86                         u1200 0080                         u1121 075A  
                       u1041 0A82                         u1201 007C                         u1130 0786  
                       u1050 08EA                         u1210 009C                         u1131 0782  
                       u1051 08E6                         u1211 0098                         u1140 07B8  
                       u1060 0932                         u1300 019A                         u1220 00B8  
                       u1141 07B4                         u1061 092E                         u1301 0196  
                       u1221 00B4                         u1070 0958                         u1310 0298  
                       u1230 00D4                         u1071 0954                         u1311 0294  
                       u1231 00D0                         u1080 09A0                         u1400 03A2  
                       u1320 02B6                         u1240 00F2                         u1081 099C  
                       u1401 039E                         u1321 02B2                         u1241 00EE  
                       u1090 06E0                         u1410 03E4                         u1330 02D4  
                       u1250 010E                         u1170 002C                         u1091 06DC  
                       u1411 03E0                         u1331 02D0                         u1251 010A  
                       u1171 0028                         u1500 04FC                         u1420 0402  
                       u1340 02F2                         u1260 012A                         u1180 0048  
                       u1501 04F8                         u1421 03FE                         u1341 02EE  
                       u1261 0126                         u1181 0044                         u1510 051A  
                       u1430 0420                         u1350 0310                         u1270 0146  
                       u1190 0064                         _LATB 000F8A                         u1511 0516  
                       u1431 041C                         u1351 030C                         u1271 0142  
                       u1191 0060                         _LATC 000F8B                         u1600 064A  
                       u1520 0538                         u1440 043E                         u1360 032E  
                       u1280 0162                         _LATD 000F8C                         u1601 0646  
                       u1521 0534                         u1441 043A                         u1361 032A  
                       u1281 015E                         u1610 0668                         u1530 0556  
                       u1450 045C                         u1370 034C                         u1290 017E  
                       u1611 0664                         u1531 0552                         u1451 0458  
                       u1371 0348                         u1291 017A                         u1620 0686  
                       u1540 0574                         u1460 047A                         u1380 036A  
                       u1700 0820                         u1621 0682                         u1541 0570  
                       u1461 0476                         u1381 0366                         u1701 081C  
                       u1630 06A4                         u1550 0592                         u1470 0498  
                       u1390 0384                         u1710 083E                         u1631 06A0  
                       u1551 058E                         u1471 0494                         u1391 0380  
                       u1711 083A                         u1640 06C2                         u1560 05B0  
                       u1480 04B6                         u1720 0884                         u1641 06BE  
                       u1561 05AC                         u1481 04B2                         u1721 0880  
                       u1570 05F0                         u1490 04DE                         u1730 08BE  
                       u1571 05EC                         u1491 04DA                         u1731 08BA  
                       u1580 060E                         u1581 060A                         u1590 062C  
                       u1591 0628                         u1747 05C0                         _RCIF 007CF5  
                       _TMR2 000FCC              __end_of_INT_isr 0C3C                         _main 07DA  
                       _msup 0039                         fsr2h 000FDA                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 0053  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
                 Executing@i 0010                 ___param_bank 000000         __end_of_clearOneShot 10DA  
                ?i2_USART_Tx 0001              __end_of___aldiv 07DA                 main@contador 002C  
                      ?_main 0001                        _CMCON 000FB4                        _T2CON 000FCA  
                      i2l440 0D8E                        i2l352 0C30                        i2l435 0D66  
                      i2l436 0D6A                        i2l392 10B2                        i2l395 10C4  
                      _RCREG 000FAE                        _SPBRG 000FAF                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _TRISB 000F93  
                      _TRISD 000F95                        _TXREG 000FAD                        _Error 0E28  
                      _check 007A              __end_of_oneShot 1082             __end_of_USART_Rx 10EC  
           __end_of_USART_Tx 10B0                        main@i 002A                 USART_Tx@data 000C  
                      tablat 000FF5                        ttemp5 0054                        ttemp6 0057  
                      ttemp7 005B                        status 000FD8                        wtemp8 0054  
                ?_USART_Init 001A             __end_ofi2_strlen 0FF2               __CFG_MCLRE$OFF 000000  
            __initialization 0C3C             __end_of_Complete 0EC0                 __end_of_main 08D4  
                     ??_main 0022                __activetblptr 000000                       ?_Error 0001  
                  ??_INT_isr 0007                       _CCPR1L 000FBE                       _CCPR2L 000FBB  
                     i2l1120 0FF0                       i2l2140 0D22                       i2l2150 0D8A  
                     i2l2142 0D2E                       i2l2144 0D40                       i2l2146 0D44  
                     i2l2170 0BC6                       i2l2148 0D78                       i2l2180 0BEC  
                     i2l2172 0BD6                       i2l2182 0BF8                       i2l2174 0BE4  
                     i2l2184 0C0A                       i2l2176 0BE8                       i2l2186 0C0E  
                     i2l2178 0BEA                       i2l1910 10C0                       i2l1912 0FBC  
                     i2l1914 0FC8                       i2l1908 10B2                       i2l1916 0FCC  
                     i2l1918 0FE4                       _OSCCON 000FD3          __size_ofi2_USART_Tx 0016  
         __size_of_Executing 004C                       Error@i 0010             __end_of_commands 06CE  
                  ??___aldiv 0014                       ___wmul 101A             __end_of_gpioInit 101A  
                     _xLimit 0F06                       _yLimit 0EC0                       clear_0 0CA2  
                     _msgeje 00A8                       _msleft 002D                       _msdown 00ED  
                     _strlen 0F86                 __pdataCOMRAM 002D                    ??_oneShot 000C  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
        __size_of_USART_Init 0070             __end_of_pwm_init 1064             emergencyButton@i 0005  
                 __accesstop 0060      __end_of__initialization 0CA8              __CFG_PBADEN$OFF 000000  
              ___rparam_used 000001           _coordinateRefreshX 09BA           _coordinateRefreshY 08D4  
      __size_of_clearOneShot 0014                __end_of_Error 0E74               __pcstackCOMRAM 0001  
               __pidataBANK0 0AA0                 __pidataBANK1 0F4C          ?_coordinateRefreshX 0015  
        ?_coordinateRefreshY 0015                    ?_USART_Rx 0001                    ?_USART_Tx 0001  
          __end_of_Executing 0E28                      ??_Error 0010                    ?i2_strlen 0001  
       ??_coordinateRefreshX 0017         ??_coordinateRefreshY 0017                    ?_Complete 0001  
               _clearOneShot 10C6               i2USART_Tx@data 0001          coordinateRefreshX@i 0017  
        coordinateRefreshX@j 0019          coordinateRefreshY@i 0017          coordinateRefreshY@j 0019  
          _invalidCoordinate 0D90                      ?___wmul 000C           ?_invalidCoordinate 0001  
                    _CCP1CON 000FBD                      _CCP2CON 000FBA                      ?_xLimit 0001  
                    ?_yLimit 0001                 ??i2_USART_Tx 0001                   ??_USART_Rx 000C  
                 ??_USART_Tx 000C                      ?_strlen 000C          ??_invalidCoordinate 0010  
                    _INT_isr 0008                   ??i2_strlen 0003                    ?_commands 001B  
                 ??_Complete 0010     __size_of_emergencyButton 006E                    ?_gpioInit 0001  
         __end_ofi2_USART_Tx 10C6    __end_of_invalidCoordinate 0DDC                 ??_USART_Init 001E  
                    __Hparam 0000                      __Lparam 0000                      ___aldiv 06CE  
            __size_of___wmul 0026                    ?_pwm_init 0001               USART_Init@BAUD 001A  
            __size_of_xLimit 0046              __size_of_yLimit 0046                      __pcinit 0C3C  
                    __ramtop 0800                      __ptext0 07DA                      __ptext1 1040  
                    __ptext2 10EC                      __ptext3 0FF2                      __ptext4 0012  
                    __ptext5 0EC0                      __ptext6 0F06                      __ptext7 0D90  
                    __ptext8 08D4                      __ptext9 09BA              __size_of_strlen 0036  
                  _T2CONbits 000FCA                      _oneShot 1064             ___aldiv@dividend 000C  
                    _msgcomp 0091                      _nvalorx 0050                      _nvalory 004E  
                    _msright 00E0           __end_of_USART_Init 0D22                   ??_commands 001D  
             __pintcode_body 0BBC         end_of_initialization 0CA8                      xLimit@i 0010  
                 ??_gpioInit 000C                      yLimit@i 0010                      int_func 0BBC  
                  _RCSTAbits 000FAB             ___aldiv@quotient 0016                      postdec1 000FE5  
                    postinc0 000FEE                      postinc2 000FDE                   ??_pwm_init 000C  
                    strlen@a 000E                      strlen@s 000C                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    Complete@i 0010  
                  _TRISCbits 000F94                    _TXSTAbits 000FAC   __size_of_invalidCoordinate 004C  
          ??_emergencyButton 0005                ?_pulseCounter 0012               __end_of___wmul 1040  
              __pidataCOMRAM 1082               __end_of_xLimit 0F4C               __end_of_yLimit 0F06  
          __size_of_USART_Rx 0012            __size_of_USART_Tx 0016               __end_of_strlen 0FBC  
        start_initialization 0C3C                    _Executing 0DDC            __size_ofi2_strlen 0036  
                  i2strlen@a 0003                    i2strlen@s 0001            __size_of_Complete 004C  
     coordinateRefreshX@newX 0015       coordinateRefreshY@newY 0015               ??_pulseCounter 0014  
                   ??___wmul 0010                  __pdataBANK0 0060                  __pdataBANK1 0100  
                   ??_xLimit 0010                     ??_yLimit 0010                     ??_strlen 000E  
                __pbssCOMRAM 0044                     ?_INT_isr 0001                   ?_Executing 0001  
__size_of_coordinateRefreshX 00E6  __size_of_coordinateRefreshY 00E6            __size_of_commands 06BC  
          __size_of_gpioInit 0028              commands@comando 001B                     INT_isr@i 000A  
                  __pintcode 0008                     ?___aldiv 000C                    _emergency 0060  
          __size_of_pwm_init 0024                    _keepgoing 0048                     ?_oneShot 0001  
             __size_of_Error 004C              ___aldiv@divisor 0010              ___aldiv@counter 0014  
             ___wmul@product 0010            _interruptionsInit 10EC                     i2u115_40 10C0  
                   i2u115_41 10BC                     i2u116_40 0FE4                     i2u116_41 0FE0  
         ?_interruptionsInit 0001                     i2u165_40 0D66                     i2u165_41 0D62  
                   i2u166_40 0D78                     i2u166_41 0D74                     i2u167_40 0D8A  
                   i2u167_41 0D86                     i2u175_47 0BCC                     i2u168_40 0BE4  
                   i2u168_41 0BE0                     i2u169_40 0C30                     i2u169_41 0C2C  
                   _PIR1bits 000F9E                     _RCONbits 000FD0          ??_interruptionsInit 000C  
                   _USART_Rx 10DA                     _USART_Tx 109A            ___wmul@multiplier 000C  
         pulseCounter@pulsoD 0012                  ??_Executing 0010                     i2_strlen 0FBC  
            _emergencyButton 0D22             __size_of_INT_isr 0C34         __end_of_pulseCounter 0BBC  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0                    copy_data0 0C50  
                  copy_data1 0C70                    copy_data2 0C90                     _Complete 0E74  
            _emergencySwitch 0046    __end_of_interruptionsInit 10FC                     __Hrparam 0000  
                   __Lrparam 0000             __size_of___aldiv 010C              main@instruccion 0022  
           __size_of_oneShot 001E                     __ptext10 0B3A                     __ptext11 1064  
                   __ptext20 0CB2                     __ptext12 10C6                     __ptext21 06CE  
                   __ptext13 101A                     __ptext14 0DDC                     __ptext23 0D22  
                   __ptext15 0E28                     __ptext24 0FBC                     __ptext16 0E74  
                   __ptext25 10B0                     __ptext17 0F86                     __ptext18 109A  
                   __ptext19 10DA                     _commands 0012                ?_clearOneShot 0001  
                   _gpioInit 0FF2                __size_of_main 00FA              _USART_Init$1743 001E  
                   _msgwrong 011E                     int$flags 0053                     _pwm_init 1040  
    __end_of_emergencyButton 0D90                   _INTCONbits 000FF2               ??_clearOneShot 000C  
                   intlevel2 0000   __size_of_interruptionsInit 0010                   i2_USART_Tx 10B0  
        __CFG_FOSC$INTOSC_HS 000000        __size_of_pulseCounter 0082                 ___aldiv@sign 0015  
 __end_of_coordinateRefreshX 0AA0   __end_of_coordinateRefreshY 09BA           invalidCoordinate@i 0010  
                 _USART_Init 0CB2  
